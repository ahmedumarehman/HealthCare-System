{"ast":null,"code":"import _objectSpread from\"D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EnhancedWalletConnect=_ref=>{let{className=''}=_ref;const[walletConnection,setWalletConnection]=useState(null);const[isConnecting,setIsConnecting]=useState(false);const[transactions,setTransactions]=useState([]);const[showQR,setShowQR]=useState(false);// Simulate blockchain transactions for demo\nconst mockTransactions=[{id:'1',hash:'0xabc123...def456',type:'record_upload',timestamp:new Date(Date.now()-3600000).toISOString(),status:'confirmed',gasUsed:'21000',gasPrice:'20',blockNumber:18745623},{id:'2',hash:'0x789xyz...321abc',type:'access_grant',timestamp:new Date(Date.now()-7200000).toISOString(),status:'confirmed',gasUsed:'45000',gasPrice:'22',blockNumber:18745589},{id:'3',hash:'0xdef789...456ghi',type:'prescription_mint',timestamp:new Date(Date.now()-300000).toISOString(),status:'pending',gasUsed:'65000',gasPrice:'25'}];useEffect(()=>{// Check if wallet is already connected\ncheckExistingConnection();setTransactions(mockTransactions);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);const checkExistingConnection=async()=>{if(typeof window.ethereum!=='undefined'){try{const accounts=await window.ethereum.request({method:'eth_accounts'});if(accounts.length>0){const chainId=await window.ethereum.request({method:'eth_chainId'});const balance=await window.ethereum.request({method:'eth_getBalance',params:[accounts[0],'latest']});setWalletConnection({address:accounts[0],provider:'metamask',chainId:parseInt(chainId,16),isConnected:true,balance:(parseInt(balance,16)/1e18).toFixed(4)});}}catch(error){console.error('Error checking wallet connection:',error);}}};const connectMetaMask=async()=>{if(typeof window.ethereum==='undefined'){alert('MetaMask is not installed. Please install MetaMask to continue.');return;}setIsConnecting(true);try{const accounts=await window.ethereum.request({method:'eth_requestAccounts'});const chainId=await window.ethereum.request({method:'eth_chainId'});const balance=await window.ethereum.request({method:'eth_getBalance',params:[accounts[0],'latest']});setWalletConnection({address:accounts[0],provider:'metamask',chainId:parseInt(chainId,16),isConnected:true,balance:(parseInt(balance,16)/1e18).toFixed(4)});}catch(error){console.error('Error connecting to MetaMask:',error);alert('Failed to connect to MetaMask');}finally{setIsConnecting(false);}};const connectWalletConnect=async()=>{setIsConnecting(true);try{// Simulate WalletConnect connection process\nawait new Promise(resolve=>setTimeout(resolve,2000));// Mock successful connection\nsetWalletConnection({address:'0x742d35Cc6551C0532a0fD0f7a7e2f1B987B5e9c4',provider:'walletconnect',chainId:1,isConnected:true,balance:'2.5431'});alert('✅ WalletConnect connected successfully!\\n\\nNote: This is a demo connection. In production, this would:\\n• Generate a QR code for mobile wallets\\n• Support 100+ mobile wallets\\n• Enable cross-device signing');}catch(error){alert('❌ WalletConnect connection failed');}finally{setIsConnecting(false);}};const connectCoinbase=async()=>{setIsConnecting(true);try{// Simulate Coinbase Wallet connection\nawait new Promise(resolve=>setTimeout(resolve,1500));// Mock successful connection\nsetWalletConnection({address:'0x8Ba1f109551bD432803012645Hac136c22ABB49d',provider:'coinbase',chainId:1,isConnected:true,balance:'1.8732'});alert('✅ Coinbase Wallet connected successfully!\\n\\nNote: This is a demo connection. In production, this would:\\n• Use Coinbase Wallet SDK\\n• Support direct exchange integration\\n• Enable fiat on/off ramps');}catch(error){alert('❌ Coinbase Wallet connection failed');}finally{setIsConnecting(false);}};const disconnectWallet=()=>{setWalletConnection(null);};const switchNetwork=async chainId=>{if(typeof window.ethereum!=='undefined'){try{await window.ethereum.request({method:'wallet_switchEthereumChain',params:[{chainId:\"0x\".concat(chainId.toString(16))}]});}catch(error){console.error('Error switching network:',error);}}};const getNetworkName=chainId=>{switch(chainId){case 1:return'Ethereum Mainnet';case 5:return'Goerli Testnet';case 137:return'Polygon Mainnet';case 80001:return'Mumbai Testnet';default:return\"Chain ID: \".concat(chainId);}};const getTransactionIcon=type=>{switch(type){case'record_upload':return'📄';case'access_grant':return'🔐';case'prescription_mint':return'💊';case'consent_update':return'✍️';default:return'⚡';}};const getStatusColor=status=>{switch(status){case'confirmed':return'text-green-600 bg-green-100';case'pending':return'text-yellow-600 bg-yellow-100';case'failed':return'text-red-600 bg-red-100';default:return'text-gray-600 bg-gray-100';}};const shortenAddress=address=>{return\"\".concat(address.slice(0,6),\"...\").concat(address.slice(-4));};const copyToClipboard=async text=>{try{await navigator.clipboard.writeText(text);alert('Copied to clipboard!');}catch(error){console.error('Failed to copy:',error);}};const handleBlockchainAction=actionType=>{const actionMap={'store-record':()=>{if(confirm('📄 Store Medical Record on Blockchain\\n\\nThis will:\\n• Encrypt your medical record\\n• Store hash on blockchain\\n• Generate immutable proof\\n• Cost: ~0.002 ETH gas fees\\n\\nProceed?')){const newTx={id:String(transactions.length+1),hash:\"0x\".concat(Math.random().toString(16).substr(2,40)),type:'record_upload',timestamp:new Date().toISOString(),status:'pending',gasUsed:'52000',gasPrice:'23'};setTransactions([newTx,...transactions]);setTimeout(()=>{setTransactions(prev=>prev.map(tx=>tx.id===newTx.id?_objectSpread(_objectSpread({},tx),{},{status:'confirmed',blockNumber:18745724}):tx));},3000);}},'mint-nft':()=>{if(confirm('🎖️ Mint Health Achievement NFT\\n\\nThis will:\\n• Create unique health certificate\\n• Mint as NFT on blockchain\\n• Enable sharing/verification\\n• Cost: ~0.003 ETH gas fees\\n\\nProceed?')){const newTx={id:String(transactions.length+1),hash:\"0x\".concat(Math.random().toString(16).substr(2,40)),type:'prescription_mint',timestamp:new Date().toISOString(),status:'pending',gasUsed:'85000',gasPrice:'25'};setTransactions([newTx,...transactions]);setTimeout(()=>{setTransactions(prev=>prev.map(tx=>tx.id===newTx.id?_objectSpread(_objectSpread({},tx),{},{status:'confirmed',blockNumber:18745725}):tx));},4000);}},'sign-consent':()=>{if(confirm('✍️ Sign Digital Consent Form\\n\\nThis will:\\n• Create digital signature\\n• Store consent on chain\\n• Enable audit trail\\n• Cost: ~0.001 ETH gas fees\\n\\nProceed?')){const newTx={id:String(transactions.length+1),hash:\"0x\".concat(Math.random().toString(16).substr(2,40)),type:'consent_update',timestamp:new Date().toISOString(),status:'pending',gasUsed:'31000',gasPrice:'20'};setTransactions([newTx,...transactions]);setTimeout(()=>{setTransactions(prev=>prev.map(tx=>tx.id===newTx.id?_objectSpread(_objectSpread({},tx),{},{status:'confirmed',blockNumber:18745726}):tx));},2000);}},'grant-access':()=>{if(confirm('🔐 Grant Data Access Permission\\n\\nThis will:\\n• Create access token\\n• Set permission levels\\n• Log access grants\\n• Cost: ~0.0015 ETH gas fees\\n\\nProceed?')){const newTx={id:String(transactions.length+1),hash:\"0x\".concat(Math.random().toString(16).substr(2,40)),type:'access_grant',timestamp:new Date().toISOString(),status:'pending',gasUsed:'42000',gasPrice:'22'};setTransactions([newTx,...transactions]);setTimeout(()=>{setTransactions(prev=>prev.map(tx=>tx.id===newTx.id?_objectSpread(_objectSpread({},tx),{},{status:'confirmed',blockNumber:18745727}):tx));},3500);}}};const action=actionMap[actionType];if(action){action();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6 p-6 \".concat(className),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-2\",children:\"\\uD83D\\uDD17 Blockchain Wallet Connection\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Connect your crypto wallet to access blockchain features and verify your identity on the decentralized network.\"})]}),walletConnection?/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-green-600 text-2xl mr-3\",children:\"\\u2705\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Wallet Connected\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"Successfully connected via \",walletConnection.provider]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:disconnectWallet,className:\"px-4 py-2 bg-red-600 text-white text-sm rounded-lg hover:bg-red-700\",children:\"Disconnect\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-sm font-medium text-gray-700\",children:\"Wallet Address\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mt-1\",children:[/*#__PURE__*/_jsx(\"code\",{className:\"text-sm bg-gray-100 px-2 py-1 rounded flex-1\",children:shortenAddress(walletConnection.address)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>copyToClipboard(walletConnection.address),className:\"ml-2 p-1 text-gray-600 hover:text-gray-800\",title:\"Copy full address\",children:\"\\uD83D\\uDCCB\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-sm font-medium text-gray-700\",children:\"Balance\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg font-bold text-gray-900\",children:[walletConnection.balance,\" ETH\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-sm font-medium text-gray-700\",children:\"Network\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center mt-1\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm bg-blue-100 text-blue-800 px-2 py-1 rounded\",children:getNetworkName(walletConnection.chainId)})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>switchNetwork(1),className:\"px-3 py-1 text-xs bg-gray-200 text-gray-700 rounded hover:bg-gray-300\",children:\"Mainnet\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>switchNetwork(137),className:\"px-3 py-1 text-xs bg-purple-200 text-purple-700 rounded hover:bg-purple-300\",children:\"Polygon\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>switchNetwork(5),className:\"px-3 py-1 text-xs bg-yellow-200 text-yellow-700 rounded hover:bg-yellow-300\",children:\"Testnet\"})]})]})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Connect Your Wallet\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:connectMetaMask,disabled:isConnecting,className:\"flex flex-col items-center p-6 border-2 border-gray-200 rounded-lg hover:border-orange-500 hover:bg-orange-50 transition-colors\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl mb-2\",children:\"\\uD83E\\uDD8A\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"MetaMask\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 text-center mt-1\",children:\"Most popular browser wallet\"}),isConnecting&&/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin text-orange-500 mt-2\",children:\"\\u23F3\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:connectWalletConnect,className:\"flex flex-col items-center p-6 border-2 border-gray-200 rounded-lg hover:border-blue-500 hover:bg-blue-50 transition-colors\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl mb-2\",children:\"\\uD83D\\uDCF1\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"WalletConnect\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 text-center mt-1\",children:\"Connect with mobile wallets\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:connectCoinbase,className:\"flex flex-col items-center p-6 border-2 border-gray-200 rounded-lg hover:border-blue-600 hover:bg-blue-50 transition-colors\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl mb-2\",children:\"\\uD83D\\uDC99\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"Coinbase\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 text-center mt-1\",children:\"Coinbase Wallet integration\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 p-4 bg-blue-50 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-600 text-lg mr-2\",children:\"\\u2139\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-blue-700\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Why connect a wallet?\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"mt-2 space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Verify your identity on the blockchain\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Sign transactions for medical records\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Access decentralized healthcare features\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Ensure data integrity and ownership\"})]})]})]})})]}),walletConnection&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"\\uD83D\\uDE80 Blockchain Actions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleBlockchainAction('store-record'),className:\"flex items-center p-4 border border-gray-200 rounded-lg hover:bg-blue-50 hover:border-blue-300 transition-colors\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl mr-3\",children:\"\\uD83D\\uDCC4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-left\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"Store Medical Record\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Upload encrypted health data to blockchain\"})]})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleBlockchainAction('mint-nft'),className:\"flex items-center p-4 border border-gray-200 rounded-lg hover:bg-green-50 hover:border-green-300 transition-colors\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl mr-3\",children:\"\\uD83C\\uDF96\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-left\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"Mint Health NFT\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Create achievement certificate as NFT\"})]})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleBlockchainAction('sign-consent'),className:\"flex items-center p-4 border border-gray-200 rounded-lg hover:bg-purple-50 hover:border-purple-300 transition-colors\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl mr-3\",children:\"\\u270D\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-left\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"Sign Consent Form\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Digital signature for medical consent\"})]})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleBlockchainAction('grant-access'),className:\"flex items-center p-4 border border-gray-200 rounded-lg hover:bg-yellow-50 hover:border-yellow-300 transition-colors\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl mr-3\",children:\"\\uD83D\\uDD10\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-left\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"Grant Access\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Authorize data access to healthcare providers\"})]})]})]})]}),walletConnection&&transactions.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"\\uD83D\\uDCDC Blockchain Transaction History\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Transaction\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Action\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Timestamp\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Gas\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:transactions.map(tx=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg mr-2\",children:getTransactionIcon(tx.type)}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>copyToClipboard(tx.hash),className:\"text-sm font-mono text-blue-600 hover:text-blue-800\",title:\"Copy transaction hash\",children:shortenAddress(tx.hash)}),tx.blockNumber&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500\",children:[\"Block: \",tx.blockNumber]})]})]})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-900 capitalize\",children:tx.type.replace('_',' ')})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",children:new Date(tx.timestamp).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \".concat(getStatusColor(tx.status)),children:tx.status})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",children:tx.gasUsed&&tx.gasPrice?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[tx.gasUsed,\" gas\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs\",children:[tx.gasPrice,\" gwei\"]})]}):'—'})]},tx.id))})]})})]}),walletConnection&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDCF1 Wallet Verification QR\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowQR(!showQR),className:\"px-4 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700\",children:showQR?'Hide QR':'Show QR'})]}),showQR&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"inline-block p-4 bg-white border-2 border-gray-300 rounded-lg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-48 h-48 bg-gray-100 flex items-center justify-center text-4xl\",children:\"\\uD83D\\uDCF1\"})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 mt-2\",children:[\"Scan to verify wallet: \",shortenAddress(walletConnection.address)]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"\\uD83D\\uDCD6 How to Use Wallet Connections\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"border-l-4 border-orange-400 pl-4\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium text-orange-800 flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl mr-2\",children:\"\\uD83E\\uDD8A\"}),\"MetaMask (Recommended)\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-orange-700 mt-1\",children:[\"\\u2022 Install MetaMask browser extension from metamask.io\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 Create or import your wallet\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 Click \\\"MetaMask\\\" button above to connect\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 Approve the connection in the MetaMask popup\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Real blockchain interaction\"}),\" - works with actual ETH networks\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-l-4 border-blue-400 pl-4\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium text-blue-800 flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl mr-2\",children:\"\\uD83D\\uDCF1\"}),\"WalletConnect (Demo Mode)\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-blue-700 mt-1\",children:[\"\\u2022 Simulates connecting to mobile wallets like Trust Wallet, Rainbow, etc.\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 In production: Shows QR code for mobile wallet scanning\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 Supports 100+ mobile wallet apps\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Currently simulated\"}),\" - shows demo wallet data\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-l-4 border-blue-600 pl-4\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium text-blue-800 flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl mr-2\",children:\"\\uD83D\\uDC99\"}),\"Coinbase Wallet (Demo Mode)\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-blue-700 mt-1\",children:[\"\\u2022 Simulates Coinbase Wallet integration\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 In production: Uses Coinbase Wallet SDK\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 Supports direct exchange integration and fiat on/off ramps\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Currently simulated\"}),\" - shows demo wallet data\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 p-3 bg-white rounded border border-gray-200\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCA1 Development Note:\"}),\" MetaMask connections are fully functional. WalletConnect and Coinbase connections are simulated for demonstration purposes. In production, these would integrate with their respective SDKs for real functionality.\"]})})]})]});};// Extend window interface for TypeScript\nexport default EnhancedWalletConnect;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","EnhancedWalletConnect","_ref","className","walletConnection","setWalletConnection","isConnecting","setIsConnecting","transactions","setTransactions","showQR","setShowQR","mockTransactions","id","hash","type","timestamp","Date","now","toISOString","status","gasUsed","gasPrice","blockNumber","checkExistingConnection","window","ethereum","accounts","request","method","length","chainId","balance","params","address","provider","parseInt","isConnected","toFixed","error","console","connectMetaMask","alert","connectWalletConnect","Promise","resolve","setTimeout","connectCoinbase","disconnectWallet","switchNetwork","concat","toString","getNetworkName","getTransactionIcon","getStatusColor","shortenAddress","slice","copyToClipboard","text","navigator","clipboard","writeText","handleBlockchainAction","actionType","actionMap","store-record","confirm","newTx","String","Math","random","substr","prev","map","tx","_objectSpread","mint-nft","sign-consent","grant-access","action","children","onClick","title","disabled","replace","toLocaleString"],"sources":["D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/src/components/Blockchain/EnhancedWalletConnect.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { WalletConnection, Transaction } from '../../types';\r\n\r\ninterface EnhancedWalletConnectProps {\r\n    className?: string;\r\n}\r\n\r\nconst EnhancedWalletConnect: React.FC<EnhancedWalletConnectProps> = ({ className = '' }) => {\r\n    const [walletConnection, setWalletConnection] = useState<WalletConnection | null>(null);\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n    const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n    const [showQR, setShowQR] = useState(false);\r\n\r\n    // Simulate blockchain transactions for demo\r\n    const mockTransactions: Transaction[] = [\r\n        {\r\n            id: '1',\r\n            hash: '0xabc123...def456',\r\n            type: 'record_upload',\r\n            timestamp: new Date(Date.now() - 3600000).toISOString(),\r\n            status: 'confirmed',\r\n            gasUsed: '21000',\r\n            gasPrice: '20',\r\n            blockNumber: 18745623\r\n        },\r\n        {\r\n            id: '2',\r\n            hash: '0x789xyz...321abc',\r\n            type: 'access_grant',\r\n            timestamp: new Date(Date.now() - 7200000).toISOString(),\r\n            status: 'confirmed',\r\n            gasUsed: '45000',\r\n            gasPrice: '22',\r\n            blockNumber: 18745589\r\n        },\r\n        {\r\n            id: '3',\r\n            hash: '0xdef789...456ghi',\r\n            type: 'prescription_mint',\r\n            timestamp: new Date(Date.now() - 300000).toISOString(),\r\n            status: 'pending',\r\n            gasUsed: '65000',\r\n            gasPrice: '25'\r\n        }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        // Check if wallet is already connected\r\n        checkExistingConnection();\r\n        setTransactions(mockTransactions);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const checkExistingConnection = async () => {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            try {\r\n                const accounts = await window.ethereum.request({ method: 'eth_accounts' });\r\n                if (accounts.length > 0) {\r\n                    const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n                    const balance = await window.ethereum.request({\r\n                        method: 'eth_getBalance',\r\n                        params: [accounts[0], 'latest']\r\n                    });\r\n\r\n                    setWalletConnection({\r\n                        address: accounts[0],\r\n                        provider: 'metamask',\r\n                        chainId: parseInt(chainId, 16),\r\n                        isConnected: true,\r\n                        balance: (parseInt(balance, 16) / 1e18).toFixed(4)\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error('Error checking wallet connection:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const connectMetaMask = async () => {\r\n        if (typeof window.ethereum === 'undefined') {\r\n            alert('MetaMask is not installed. Please install MetaMask to continue.');\r\n            return;\r\n        }\r\n\r\n        setIsConnecting(true);\r\n        try {\r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n            const balance = await window.ethereum.request({\r\n                method: 'eth_getBalance',\r\n                params: [accounts[0], 'latest']\r\n            });\r\n\r\n            setWalletConnection({\r\n                address: accounts[0],\r\n                provider: 'metamask',\r\n                chainId: parseInt(chainId, 16),\r\n                isConnected: true,\r\n                balance: (parseInt(balance, 16) / 1e18).toFixed(4)\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Error connecting to MetaMask:', error);\r\n            alert('Failed to connect to MetaMask');\r\n        } finally {\r\n            setIsConnecting(false);\r\n        }\r\n    };\r\n\r\n    const connectWalletConnect = async () => {\r\n        setIsConnecting(true);\r\n        try {\r\n            // Simulate WalletConnect connection process\r\n            await new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n            // Mock successful connection\r\n            setWalletConnection({\r\n                address: '0x742d35Cc6551C0532a0fD0f7a7e2f1B987B5e9c4',\r\n                provider: 'walletconnect',\r\n                chainId: 1,\r\n                isConnected: true,\r\n                balance: '2.5431'\r\n            });\r\n\r\n            alert('✅ WalletConnect connected successfully!\\n\\nNote: This is a demo connection. In production, this would:\\n• Generate a QR code for mobile wallets\\n• Support 100+ mobile wallets\\n• Enable cross-device signing');\r\n        } catch (error) {\r\n            alert('❌ WalletConnect connection failed');\r\n        } finally {\r\n            setIsConnecting(false);\r\n        }\r\n    };\r\n\r\n    const connectCoinbase = async () => {\r\n        setIsConnecting(true);\r\n        try {\r\n            // Simulate Coinbase Wallet connection\r\n            await new Promise(resolve => setTimeout(resolve, 1500));\r\n\r\n            // Mock successful connection\r\n            setWalletConnection({\r\n                address: '0x8Ba1f109551bD432803012645Hac136c22ABB49d',\r\n                provider: 'coinbase',\r\n                chainId: 1,\r\n                isConnected: true,\r\n                balance: '1.8732'\r\n            });\r\n\r\n            alert('✅ Coinbase Wallet connected successfully!\\n\\nNote: This is a demo connection. In production, this would:\\n• Use Coinbase Wallet SDK\\n• Support direct exchange integration\\n• Enable fiat on/off ramps');\r\n        } catch (error) {\r\n            alert('❌ Coinbase Wallet connection failed');\r\n        } finally {\r\n            setIsConnecting(false);\r\n        }\r\n    };\r\n\r\n    const disconnectWallet = () => {\r\n        setWalletConnection(null);\r\n    };\r\n\r\n    const switchNetwork = async (chainId: number) => {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            try {\r\n                await window.ethereum.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: `0x${chainId.toString(16)}` }],\r\n                });\r\n            } catch (error) {\r\n                console.error('Error switching network:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const getNetworkName = (chainId: number): string => {\r\n        switch (chainId) {\r\n            case 1: return 'Ethereum Mainnet';\r\n            case 5: return 'Goerli Testnet';\r\n            case 137: return 'Polygon Mainnet';\r\n            case 80001: return 'Mumbai Testnet';\r\n            default: return `Chain ID: ${chainId}`;\r\n        }\r\n    };\r\n\r\n    const getTransactionIcon = (type: Transaction['type']): string => {\r\n        switch (type) {\r\n            case 'record_upload': return '📄';\r\n            case 'access_grant': return '🔐';\r\n            case 'prescription_mint': return '💊';\r\n            case 'consent_update': return '✍️';\r\n            default: return '⚡';\r\n        }\r\n    };\r\n\r\n    const getStatusColor = (status: Transaction['status']): string => {\r\n        switch (status) {\r\n            case 'confirmed': return 'text-green-600 bg-green-100';\r\n            case 'pending': return 'text-yellow-600 bg-yellow-100';\r\n            case 'failed': return 'text-red-600 bg-red-100';\r\n            default: return 'text-gray-600 bg-gray-100';\r\n        }\r\n    };\r\n\r\n    const shortenAddress = (address: string): string => {\r\n        return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n    };\r\n\r\n    const copyToClipboard = async (text: string) => {\r\n        try {\r\n            await navigator.clipboard.writeText(text);\r\n            alert('Copied to clipboard!');\r\n        } catch (error) {\r\n            console.error('Failed to copy:', error);\r\n        }\r\n    };\r\n\r\n    const handleBlockchainAction = (actionType: string) => {\r\n        const actionMap: { [key: string]: () => void } = {\r\n            'store-record': () => {\r\n                if (confirm('📄 Store Medical Record on Blockchain\\n\\nThis will:\\n• Encrypt your medical record\\n• Store hash on blockchain\\n• Generate immutable proof\\n• Cost: ~0.002 ETH gas fees\\n\\nProceed?')) {\r\n                    const newTx: Transaction = {\r\n                        id: String(transactions.length + 1),\r\n                        hash: `0x${Math.random().toString(16).substr(2, 40)}`,\r\n                        type: 'record_upload',\r\n                        timestamp: new Date().toISOString(),\r\n                        status: 'pending',\r\n                        gasUsed: '52000',\r\n                        gasPrice: '23'\r\n                    };\r\n                    setTransactions([newTx, ...transactions]);\r\n\r\n                    setTimeout(() => {\r\n                        setTransactions(prev => prev.map(tx =>\r\n                            tx.id === newTx.id\r\n                                ? { ...tx, status: 'confirmed' as Transaction['status'], blockNumber: 18745724 }\r\n                                : tx\r\n                        ));\r\n                    }, 3000);\r\n                }\r\n            },\r\n            'mint-nft': () => {\r\n                if (confirm('🎖️ Mint Health Achievement NFT\\n\\nThis will:\\n• Create unique health certificate\\n• Mint as NFT on blockchain\\n• Enable sharing/verification\\n• Cost: ~0.003 ETH gas fees\\n\\nProceed?')) {\r\n                    const newTx: Transaction = {\r\n                        id: String(transactions.length + 1),\r\n                        hash: `0x${Math.random().toString(16).substr(2, 40)}`,\r\n                        type: 'prescription_mint',\r\n                        timestamp: new Date().toISOString(),\r\n                        status: 'pending',\r\n                        gasUsed: '85000',\r\n                        gasPrice: '25'\r\n                    };\r\n                    setTransactions([newTx, ...transactions]);\r\n\r\n                    setTimeout(() => {\r\n                        setTransactions(prev => prev.map(tx =>\r\n                            tx.id === newTx.id\r\n                                ? { ...tx, status: 'confirmed' as Transaction['status'], blockNumber: 18745725 }\r\n                                : tx\r\n                        ));\r\n                    }, 4000);\r\n                }\r\n            },\r\n            'sign-consent': () => {\r\n                if (confirm('✍️ Sign Digital Consent Form\\n\\nThis will:\\n• Create digital signature\\n• Store consent on chain\\n• Enable audit trail\\n• Cost: ~0.001 ETH gas fees\\n\\nProceed?')) {\r\n                    const newTx: Transaction = {\r\n                        id: String(transactions.length + 1),\r\n                        hash: `0x${Math.random().toString(16).substr(2, 40)}`,\r\n                        type: 'consent_update',\r\n                        timestamp: new Date().toISOString(),\r\n                        status: 'pending',\r\n                        gasUsed: '31000',\r\n                        gasPrice: '20'\r\n                    };\r\n                    setTransactions([newTx, ...transactions]);\r\n\r\n                    setTimeout(() => {\r\n                        setTransactions(prev => prev.map(tx =>\r\n                            tx.id === newTx.id\r\n                                ? { ...tx, status: 'confirmed' as Transaction['status'], blockNumber: 18745726 }\r\n                                : tx\r\n                        ));\r\n                    }, 2000);\r\n                }\r\n            },\r\n            'grant-access': () => {\r\n                if (confirm('🔐 Grant Data Access Permission\\n\\nThis will:\\n• Create access token\\n• Set permission levels\\n• Log access grants\\n• Cost: ~0.0015 ETH gas fees\\n\\nProceed?')) {\r\n                    const newTx: Transaction = {\r\n                        id: String(transactions.length + 1),\r\n                        hash: `0x${Math.random().toString(16).substr(2, 40)}`,\r\n                        type: 'access_grant',\r\n                        timestamp: new Date().toISOString(),\r\n                        status: 'pending',\r\n                        gasUsed: '42000',\r\n                        gasPrice: '22'\r\n                    };\r\n                    setTransactions([newTx, ...transactions]);\r\n\r\n                    setTimeout(() => {\r\n                        setTransactions(prev => prev.map(tx =>\r\n                            tx.id === newTx.id\r\n                                ? { ...tx, status: 'confirmed' as Transaction['status'], blockNumber: 18745727 }\r\n                                : tx\r\n                        ));\r\n                    }, 3500);\r\n                }\r\n            }\r\n        };\r\n\r\n        const action = actionMap[actionType];\r\n        if (action) {\r\n            action();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`space-y-6 p-6 ${className}`}>\r\n            {/* Header */}\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">🔗 Blockchain Wallet Connection</h2>\r\n                <p className=\"text-gray-600\">\r\n                    Connect your crypto wallet to access blockchain features and verify your identity on the decentralized network.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Connection Status */}\r\n            {walletConnection ? (\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"text-green-600 text-2xl mr-3\">✅</div>\r\n                            <div>\r\n                                <h3 className=\"text-lg font-medium text-gray-900\">Wallet Connected</h3>\r\n                                <p className=\"text-sm text-gray-600\">Successfully connected via {walletConnection.provider}</p>\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            onClick={disconnectWallet}\r\n                            className=\"px-4 py-2 bg-red-600 text-white text-sm rounded-lg hover:bg-red-700\"\r\n                        >\r\n                            Disconnect\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        <div className=\"space-y-3\">\r\n                            <div>\r\n                                <label className=\"text-sm font-medium text-gray-700\">Wallet Address</label>\r\n                                <div className=\"flex items-center mt-1\">\r\n                                    <code className=\"text-sm bg-gray-100 px-2 py-1 rounded flex-1\">\r\n                                        {shortenAddress(walletConnection.address)}\r\n                                    </code>\r\n                                    <button\r\n                                        onClick={() => copyToClipboard(walletConnection.address)}\r\n                                        className=\"ml-2 p-1 text-gray-600 hover:text-gray-800\"\r\n                                        title=\"Copy full address\"\r\n                                    >\r\n                                        📋\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className=\"text-sm font-medium text-gray-700\">Balance</label>\r\n                                <p className=\"text-lg font-bold text-gray-900\">{walletConnection.balance} ETH</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-3\">\r\n                            <div>\r\n                                <label className=\"text-sm font-medium text-gray-700\">Network</label>\r\n                                <div className=\"flex items-center mt-1\">\r\n                                    <span className=\"text-sm bg-blue-100 text-blue-800 px-2 py-1 rounded\">\r\n                                        {getNetworkName(walletConnection.chainId)}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex space-x-2\">\r\n                                <button\r\n                                    onClick={() => switchNetwork(1)}\r\n                                    className=\"px-3 py-1 text-xs bg-gray-200 text-gray-700 rounded hover:bg-gray-300\"\r\n                                >\r\n                                    Mainnet\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => switchNetwork(137)}\r\n                                    className=\"px-3 py-1 text-xs bg-purple-200 text-purple-700 rounded hover:bg-purple-300\"\r\n                                >\r\n                                    Polygon\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => switchNetwork(5)}\r\n                                    className=\"px-3 py-1 text-xs bg-yellow-200 text-yellow-700 rounded hover:bg-yellow-300\"\r\n                                >\r\n                                    Testnet\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Connect Your Wallet</h3>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                        {/* MetaMask */}\r\n                        <button\r\n                            onClick={connectMetaMask}\r\n                            disabled={isConnecting}\r\n                            className=\"flex flex-col items-center p-6 border-2 border-gray-200 rounded-lg hover:border-orange-500 hover:bg-orange-50 transition-colors\"\r\n                        >\r\n                            <div className=\"text-4xl mb-2\">🦊</div>\r\n                            <h4 className=\"font-medium text-gray-900\">MetaMask</h4>\r\n                            <p className=\"text-sm text-gray-600 text-center mt-1\">\r\n                                Most popular browser wallet\r\n                            </p>\r\n                            {isConnecting && <div className=\"animate-spin text-orange-500 mt-2\">⏳</div>}\r\n                        </button>\r\n\r\n                        {/* WalletConnect */}\r\n                        <button\r\n                            onClick={connectWalletConnect}\r\n                            className=\"flex flex-col items-center p-6 border-2 border-gray-200 rounded-lg hover:border-blue-500 hover:bg-blue-50 transition-colors\"\r\n                        >\r\n                            <div className=\"text-4xl mb-2\">📱</div>\r\n                            <h4 className=\"font-medium text-gray-900\">WalletConnect</h4>\r\n                            <p className=\"text-sm text-gray-600 text-center mt-1\">\r\n                                Connect with mobile wallets\r\n                            </p>\r\n                        </button>\r\n\r\n                        {/* Coinbase Wallet */}\r\n                        <button\r\n                            onClick={connectCoinbase}\r\n                            className=\"flex flex-col items-center p-6 border-2 border-gray-200 rounded-lg hover:border-blue-600 hover:bg-blue-50 transition-colors\"\r\n                        >\r\n                            <div className=\"text-4xl mb-2\">💙</div>\r\n                            <h4 className=\"font-medium text-gray-900\">Coinbase</h4>\r\n                            <p className=\"text-sm text-gray-600 text-center mt-1\">\r\n                                Coinbase Wallet integration\r\n                            </p>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\r\n                        <div className=\"flex items-start\">\r\n                            <div className=\"text-blue-600 text-lg mr-2\">ℹ️</div>\r\n                            <div className=\"text-sm text-blue-700\">\r\n                                <strong>Why connect a wallet?</strong>\r\n                                <ul className=\"mt-2 space-y-1\">\r\n                                    <li>• Verify your identity on the blockchain</li>\r\n                                    <li>• Sign transactions for medical records</li>\r\n                                    <li>• Access decentralized healthcare features</li>\r\n                                    <li>• Ensure data integrity and ownership</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Blockchain Actions */}\r\n            {walletConnection && (\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">🚀 Blockchain Actions</h3>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        <button\r\n                            onClick={() => handleBlockchainAction('store-record')}\r\n                            className=\"flex items-center p-4 border border-gray-200 rounded-lg hover:bg-blue-50 hover:border-blue-300 transition-colors\"\r\n                        >\r\n                            <div className=\"text-2xl mr-3\">📄</div>\r\n                            <div className=\"text-left\">\r\n                                <h4 className=\"font-medium text-gray-900\">Store Medical Record</h4>\r\n                                <p className=\"text-sm text-gray-600\">Upload encrypted health data to blockchain</p>\r\n                            </div>\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleBlockchainAction('mint-nft')}\r\n                            className=\"flex items-center p-4 border border-gray-200 rounded-lg hover:bg-green-50 hover:border-green-300 transition-colors\"\r\n                        >\r\n                            <div className=\"text-2xl mr-3\">🎖️</div>\r\n                            <div className=\"text-left\">\r\n                                <h4 className=\"font-medium text-gray-900\">Mint Health NFT</h4>\r\n                                <p className=\"text-sm text-gray-600\">Create achievement certificate as NFT</p>\r\n                            </div>\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleBlockchainAction('sign-consent')}\r\n                            className=\"flex items-center p-4 border border-gray-200 rounded-lg hover:bg-purple-50 hover:border-purple-300 transition-colors\"\r\n                        >\r\n                            <div className=\"text-2xl mr-3\">✍️</div>\r\n                            <div className=\"text-left\">\r\n                                <h4 className=\"font-medium text-gray-900\">Sign Consent Form</h4>\r\n                                <p className=\"text-sm text-gray-600\">Digital signature for medical consent</p>\r\n                            </div>\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleBlockchainAction('grant-access')}\r\n                            className=\"flex items-center p-4 border border-gray-200 rounded-lg hover:bg-yellow-50 hover:border-yellow-300 transition-colors\"\r\n                        >\r\n                            <div className=\"text-2xl mr-3\">🔐</div>\r\n                            <div className=\"text-left\">\r\n                                <h4 className=\"font-medium text-gray-900\">Grant Access</h4>\r\n                                <p className=\"text-sm text-gray-600\">Authorize data access to healthcare providers</p>\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Transaction History */}\r\n            {walletConnection && transactions.length > 0 && (\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">📜 Blockchain Transaction History</h3>\r\n\r\n                    <div className=\"overflow-x-auto\">\r\n                        <table className=\"min-w-full divide-y divide-gray-200\">\r\n                            <thead className=\"bg-gray-50\">\r\n                                <tr>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Transaction\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Action\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Timestamp\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Status\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Gas\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                {transactions.map((tx) => (\r\n                                    <tr key={tx.id} className=\"hover:bg-gray-50\">\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                            <div className=\"flex items-center\">\r\n                                                <span className=\"text-lg mr-2\">{getTransactionIcon(tx.type)}</span>\r\n                                                <div>\r\n                                                    <button\r\n                                                        onClick={() => copyToClipboard(tx.hash)}\r\n                                                        className=\"text-sm font-mono text-blue-600 hover:text-blue-800\"\r\n                                                        title=\"Copy transaction hash\"\r\n                                                    >\r\n                                                        {shortenAddress(tx.hash)}\r\n                                                    </button>\r\n                                                    {tx.blockNumber && (\r\n                                                        <p className=\"text-xs text-gray-500\">Block: {tx.blockNumber}</p>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                            <span className=\"text-sm text-gray-900 capitalize\">\r\n                                                {tx.type.replace('_', ' ')}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                                            {new Date(tx.timestamp).toLocaleString()}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                            <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(tx.status)}`}>\r\n                                                {tx.status}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                                            {tx.gasUsed && tx.gasPrice ? (\r\n                                                <div>\r\n                                                    <div>{tx.gasUsed} gas</div>\r\n                                                    <div className=\"text-xs\">{tx.gasPrice} gwei</div>\r\n                                                </div>\r\n                                            ) : (\r\n                                                '—'\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Verification QR Code */}\r\n            {walletConnection && (\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        <h3 className=\"text-lg font-medium text-gray-900\">📱 Wallet Verification QR</h3>\r\n                        <button\r\n                            onClick={() => setShowQR(!showQR)}\r\n                            className=\"px-4 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700\"\r\n                        >\r\n                            {showQR ? 'Hide QR' : 'Show QR'}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {showQR && (\r\n                        <div className=\"text-center\">\r\n                            <div className=\"inline-block p-4 bg-white border-2 border-gray-300 rounded-lg\">\r\n                                {/* In real implementation, use react-qr-code */}\r\n                                <div className=\"w-48 h-48 bg-gray-100 flex items-center justify-center text-4xl\">\r\n                                    📱\r\n                                </div>\r\n                            </div>\r\n                            <p className=\"text-sm text-gray-600 mt-2\">\r\n                                Scan to verify wallet: {shortenAddress(walletConnection.address)}\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {/* Usage Instructions */}\r\n            <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg shadow p-6\">\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">📖 How to Use Wallet Connections</h3>\r\n\r\n                <div className=\"space-y-4\">\r\n                    <div className=\"border-l-4 border-orange-400 pl-4\">\r\n                        <h4 className=\"font-medium text-orange-800 flex items-center\">\r\n                            <span className=\"text-xl mr-2\">🦊</span>\r\n                            MetaMask (Recommended)\r\n                        </h4>\r\n                        <p className=\"text-sm text-orange-700 mt-1\">\r\n                            • Install MetaMask browser extension from metamask.io<br />\r\n                            • Create or import your wallet<br />\r\n                            • Click \"MetaMask\" button above to connect<br />\r\n                            • Approve the connection in the MetaMask popup<br />\r\n                            • <strong>Real blockchain interaction</strong> - works with actual ETH networks\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"border-l-4 border-blue-400 pl-4\">\r\n                        <h4 className=\"font-medium text-blue-800 flex items-center\">\r\n                            <span className=\"text-xl mr-2\">📱</span>\r\n                            WalletConnect (Demo Mode)\r\n                        </h4>\r\n                        <p className=\"text-sm text-blue-700 mt-1\">\r\n                            • Simulates connecting to mobile wallets like Trust Wallet, Rainbow, etc.<br />\r\n                            • In production: Shows QR code for mobile wallet scanning<br />\r\n                            • Supports 100+ mobile wallet apps<br />\r\n                            • <strong>Currently simulated</strong> - shows demo wallet data\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"border-l-4 border-blue-600 pl-4\">\r\n                        <h4 className=\"font-medium text-blue-800 flex items-center\">\r\n                            <span className=\"text-xl mr-2\">💙</span>\r\n                            Coinbase Wallet (Demo Mode)\r\n                        </h4>\r\n                        <p className=\"text-sm text-blue-700 mt-1\">\r\n                            • Simulates Coinbase Wallet integration<br />\r\n                            • In production: Uses Coinbase Wallet SDK<br />\r\n                            • Supports direct exchange integration and fiat on/off ramps<br />\r\n                            • <strong>Currently simulated</strong> - shows demo wallet data\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mt-4 p-3 bg-white rounded border border-gray-200\">\r\n                    <p className=\"text-sm text-gray-600\">\r\n                        <strong>💡 Development Note:</strong> MetaMask connections are fully functional.\r\n                        WalletConnect and Coinbase connections are simulated for demonstration purposes.\r\n                        In production, these would integrate with their respective SDKs for real functionality.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Extend window interface for TypeScript\r\ndeclare global {\r\n    interface Window {\r\n        ethereum?: any;\r\n    }\r\n}\r\n\r\nexport default EnhancedWalletConnect;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}