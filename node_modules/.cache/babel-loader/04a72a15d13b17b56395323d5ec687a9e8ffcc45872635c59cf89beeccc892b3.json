{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATA\\\\CAREER\\\\INTERNSHIPS\\\\EMRChains Internship NSTP\\\\PROJECTS\\\\HEALTHCARE_SYSTEM\\\\src\\\\components\\\\Auth\\\\EnhancedBiometricLogin.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BiometricLogin = ({\n  onSuccess,\n  onError,\n  className = ''\n}) => {\n  _s();\n  const [isSupported, setIsSupported] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(false);\n  const [availableMethods, setAvailableMethods] = useState([]);\n  useEffect(() => {\n    checkBiometricSupport();\n  }, []);\n  const checkBiometricSupport = async () => {\n    if ('credentials' in navigator && 'create' in navigator.credentials) {\n      try {\n        // Check if WebAuthn is supported\n        await navigator.credentials.get({\n          publicKey: {\n            challenge: new Uint8Array(32),\n            allowCredentials: [],\n            timeout: 60000\n          }\n        }).catch(() => false);\n        setIsSupported(true);\n\n        // Simulate available biometric methods\n        const methods = ['fingerprint', 'face-id', 'touch-id'];\n        setAvailableMethods(methods);\n      } catch (error) {\n        setIsSupported(false);\n      }\n    }\n  };\n  const authenticateWithBiometric = async method => {\n    setIsAuthenticating(true);\n    try {\n      // Simulate biometric authentication\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // In real implementation, use WebAuthn API\n      const success = Math.random() > 0.2; // 80% success rate for demo\n\n      if (success) {\n        onSuccess();\n      } else {\n        onError('Biometric authentication failed. Please try again.');\n      }\n    } catch (error) {\n      onError(`Authentication error: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    } finally {\n      setIsAuthenticating(false);\n    }\n  };\n  const getBiometricIcon = method => {\n    switch (method) {\n      case 'fingerprint':\n        return '👆';\n      case 'face-id':\n        return '👤';\n      case 'touch-id':\n        return '✋';\n      default:\n        return '🔒';\n    }\n  };\n  const getBiometricName = method => {\n    switch (method) {\n      case 'fingerprint':\n        return 'Fingerprint';\n      case 'face-id':\n        return 'Face ID';\n      case 'touch-id':\n        return 'Touch ID';\n      default:\n        return 'Biometric';\n    }\n  };\n  if (!isSupported) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-6 bg-gray-50 rounded-lg ${className}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-4xl mb-4\",\n          children: \"\\uD83D\\uDEAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 mb-2\",\n          children: \"Biometric Authentication Not Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Your device doesn't support biometric authentication or it's not enabled.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `space-y-4 ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-4xl mb-2\",\n        children: \"\\uD83D\\uDEE1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900\",\n        children: \"Secure Biometric Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: \"Access your healthcare data securely with biometric authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: availableMethods.map(method => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => authenticateWithBiometric(method),\n        disabled: isAuthenticating,\n        className: `w-full flex items-center justify-center p-4 border-2 rounded-lg transition-colors ${isAuthenticating ? 'border-gray-300 bg-gray-100 cursor-not-allowed' : 'border-blue-300 bg-blue-50 hover:bg-blue-100 hover:border-blue-400'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl mr-3\",\n            children: getBiometricIcon(method)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium text-gray-900\",\n              children: isAuthenticating ? 'Authenticating...' : `Login with ${getBiometricName(method)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: isAuthenticating ? 'Please complete biometric scan' : 'Tap to authenticate'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), isAuthenticating && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-3 animate-spin text-blue-600\",\n            children: \"\\u23F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)\n      }, method, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-green-600 text-lg mr-2\",\n          children: \"\\uD83D\\uDD12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-green-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Enhanced Security:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"mt-1 space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Your biometric data never leaves your device\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Each authentication creates a unique cryptographic signature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Multi-factor authentication for healthcare compliance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500\",\n        children: \"Protected by HIPAA-compliant biometric security\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(BiometricLogin, \"EkNx8bJqOOf5pqpjFnEkK5t+CT0=\");\n_c = BiometricLogin;\nexport default BiometricLogin;\nvar _c;\n$RefreshReg$(_c, \"BiometricLogin\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BiometricLogin","onSuccess","onError","className","_s","isSupported","setIsSupported","isAuthenticating","setIsAuthenticating","availableMethods","setAvailableMethods","checkBiometricSupport","navigator","credentials","get","publicKey","challenge","Uint8Array","allowCredentials","timeout","catch","methods","error","authenticateWithBiometric","method","Promise","resolve","setTimeout","success","Math","random","Error","message","getBiometricIcon","getBiometricName","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/src/components/Auth/EnhancedBiometricLogin.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\ninterface BiometricLoginProps {\r\n    onSuccess: () => void;\r\n    onError: (error: string) => void;\r\n    className?: string;\r\n}\r\n\r\nconst BiometricLogin: React.FC<BiometricLoginProps> = ({\r\n    onSuccess,\r\n    onError,\r\n    className = ''\r\n}) => {\r\n    const [isSupported, setIsSupported] = useState(false);\r\n    const [isAuthenticating, setIsAuthenticating] = useState(false);\r\n    const [availableMethods, setAvailableMethods] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        checkBiometricSupport();\r\n    }, []);\r\n\r\n    const checkBiometricSupport = async () => {\r\n        if ('credentials' in navigator && 'create' in navigator.credentials) {\r\n            try {\r\n                // Check if WebAuthn is supported\r\n                await (navigator.credentials as any).get({\r\n                    publicKey: {\r\n                        challenge: new Uint8Array(32),\r\n                        allowCredentials: [],\r\n                        timeout: 60000\r\n                    }\r\n                }).catch(() => false);\r\n\r\n                setIsSupported(true);\r\n\r\n                // Simulate available biometric methods\r\n                const methods = ['fingerprint', 'face-id', 'touch-id'];\r\n                setAvailableMethods(methods);\r\n            } catch (error) {\r\n                setIsSupported(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const authenticateWithBiometric = async (method: string) => {\r\n        setIsAuthenticating(true);\r\n\r\n        try {\r\n            // Simulate biometric authentication\r\n            await new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n            // In real implementation, use WebAuthn API\r\n            const success = Math.random() > 0.2; // 80% success rate for demo\r\n\r\n            if (success) {\r\n                onSuccess();\r\n            } else {\r\n                onError('Biometric authentication failed. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            onError(`Authentication error: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        } finally {\r\n            setIsAuthenticating(false);\r\n        }\r\n    };\r\n\r\n    const getBiometricIcon = (method: string): string => {\r\n        switch (method) {\r\n            case 'fingerprint': return '👆';\r\n            case 'face-id': return '👤';\r\n            case 'touch-id': return '✋';\r\n            default: return '🔒';\r\n        }\r\n    };\r\n\r\n    const getBiometricName = (method: string): string => {\r\n        switch (method) {\r\n            case 'fingerprint': return 'Fingerprint';\r\n            case 'face-id': return 'Face ID';\r\n            case 'touch-id': return 'Touch ID';\r\n            default: return 'Biometric';\r\n        }\r\n    };\r\n\r\n    if (!isSupported) {\r\n        return (\r\n            <div className={`p-6 bg-gray-50 rounded-lg ${className}`}>\r\n                <div className=\"text-center\">\r\n                    <div className=\"text-4xl mb-4\">🚫</div>\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                        Biometric Authentication Not Available\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                        Your device doesn't support biometric authentication or it's not enabled.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={`space-y-4 ${className}`}>\r\n            <div className=\"text-center mb-6\">\r\n                <div className=\"text-4xl mb-2\">🛡️</div>\r\n                <h3 className=\"text-lg font-medium text-gray-900\">Secure Biometric Login</h3>\r\n                <p className=\"text-sm text-gray-600\">\r\n                    Access your healthcare data securely with biometric authentication\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"space-y-3\">\r\n                {availableMethods.map((method) => (\r\n                    <button\r\n                        key={method}\r\n                        onClick={() => authenticateWithBiometric(method)}\r\n                        disabled={isAuthenticating}\r\n                        className={`w-full flex items-center justify-center p-4 border-2 rounded-lg transition-colors ${isAuthenticating\r\n                                ? 'border-gray-300 bg-gray-100 cursor-not-allowed'\r\n                                : 'border-blue-300 bg-blue-50 hover:bg-blue-100 hover:border-blue-400'\r\n                            }`}\r\n                    >\r\n                        <div className=\"flex items-center\">\r\n                            <span className=\"text-2xl mr-3\">{getBiometricIcon(method)}</span>\r\n                            <div className=\"text-left\">\r\n                                <div className=\"font-medium text-gray-900\">\r\n                                    {isAuthenticating ? 'Authenticating...' : `Login with ${getBiometricName(method)}`}\r\n                                </div>\r\n                                <div className=\"text-sm text-gray-600\">\r\n                                    {isAuthenticating ? 'Please complete biometric scan' : 'Tap to authenticate'}\r\n                                </div>\r\n                            </div>\r\n                            {isAuthenticating && (\r\n                                <div className=\"ml-3 animate-spin text-blue-600\">⏳</div>\r\n                            )}\r\n                        </div>\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n                <div className=\"flex items-start\">\r\n                    <div className=\"text-green-600 text-lg mr-2\">🔒</div>\r\n                    <div className=\"text-sm text-green-700\">\r\n                        <strong>Enhanced Security:</strong>\r\n                        <ul className=\"mt-1 space-y-1\">\r\n                            <li>• Your biometric data never leaves your device</li>\r\n                            <li>• Each authentication creates a unique cryptographic signature</li>\r\n                            <li>• Multi-factor authentication for healthcare compliance</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n                <p className=\"text-xs text-gray-500\">\r\n                    Protected by HIPAA-compliant biometric security\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BiometricLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}