{"ast":null,"code":"import _objectSpread from\"D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import Badge from'../UI/Badge';import Timer from'../UI/Timer';import{RoleBasedAccessService}from'../../services/rbacService';import{EncryptionService}from'../../services/encryption';import{sharedStateService}from'../../services/sharedState';import{pdfService}from'../../services/pdfService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DoctorDashboard=_ref=>{let{user,onLogout}=_ref;const[sessionTimeLeft]=useState(1800);const[rbacService]=useState(new RoleBasedAccessService());const[activeTab,setActiveTab]=useState('patients');// Modal states\nconst[showCreateRecordModal,setShowCreateRecordModal]=useState(false);const[showClaimModal,setShowClaimModal]=useState(false);const[,setSelectedPatientId]=useState('');// Security states\nconst[clipboardMonitoring,setClipboardMonitoring]=useState(false);const[encryptedRecords,setEncryptedRecords]=useState({});const[recordEncryptionStatus,setRecordEncryptionStatus]=useState({});const[selectedFiles,setSelectedFiles]=useState([]);const[selectedEncryptedFiles,setSelectedEncryptedFiles]=useState([]);// Form states\nconst[newRecordForm,setNewRecordForm]=useState({patientId:'',title:'',description:'',diagnosis:'',prescription:'',notes:''});const[newClaimForm,setNewClaimForm]=useState({patientId:'',amount:'',description:'',insuranceProvider:''});const[myPatients,setMyPatients]=useState([]);const[recentRecords,setRecentRecords]=useState([]);// Initialize data from shared state service\nuseEffect(()=>{const patients=sharedStateService.getPatients();// Get ALL medical records (not just doctor's own records) so doctor can see patient-added records\nconst allRecords=sharedStateService.getMedicalRecords();setMyPatients(patients);setRecentRecords(allRecords);// Subscribe to changes\nconst unsubscribePatients=sharedStateService.onPatientsChange(setMyPatients);const unsubscribeRecords=sharedStateService.onMedicalRecordsChange(allRecords=>{// Show all records so doctor can see patient-added records\nsetRecentRecords(allRecords);});return()=>{unsubscribePatients();unsubscribeRecords();};},[user.id]);const[insuranceClaims]=useState([{id:'claim-1',claimNumber:'CLM-2025-001',patientId:'patient-1',providerId:user.id,doctorId:user.id,insuranceCompany:'HealthFirst Insurance',insuranceProvider:'HealthFirst Insurance',amount:450.00,status:'approved',submittedAt:'2025-07-01T10:00:00Z',submissionDate:'2025-07-01',approvalDate:'2025-07-03',description:'Annual physical examination and blood work',relatedRecords:['record-1'],smartContractAddress:'0x1234567890abcdef1234567890abcdef12345678',blockchainTxId:'0xabc123def456789abcdef123456789abc123def456789abcdef',isProcessedOnChain:true,approvalSignatures:[],ipfsDocuments:[]},{id:'claim-2',claimNumber:'CLM-2025-002',patientId:'patient-2',providerId:user.id,doctorId:user.id,insuranceCompany:'MediCare Plus',insuranceProvider:'MediCare Plus',amount:275.50,status:'pending',submittedAt:'2025-07-04T14:30:00Z',submissionDate:'2025-07-04',description:'Follow-up consultation and medication review',relatedRecords:['record-2'],smartContractAddress:'0x1234567890abcdef1234567890abcdef12345678',blockchainTxId:'0xdef456abc789123def456abc789123def456abc789123def',isProcessedOnChain:false,approvalSignatures:[],ipfsDocuments:[]}]);const[nftRecords]=useState([{id:'nft-1',tokenId:'HEALTH-NFT-001',patientId:'patient-1',recordId:'record-1',name:'Annual Physical 2025',description:'Comprehensive health examination record',imageUrl:'https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=NFT-001',metadataUri:'ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP',contractAddress:'0x9876543210fedcba9876543210fedcba98765432',blockchainNetwork:'Ethereum',mintDate:'2025-07-04T10:30:00Z',currentOwner:'patient-1',isTransferable:false,accessLevel:'doctor_patient'},{id:'nft-2',tokenId:'HEALTH-NFT-002',patientId:'patient-2',recordId:'record-2',name:'Follow-up Consultation',description:'Treatment follow-up and medication adjustment',imageUrl:'https://via.placeholder.com/200x200/059669/FFFFFF?text=NFT-002',metadataUri:'ipfs://QmY8AX6sRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0nQ',contractAddress:'0x9876543210fedcba9876543210fedcba98765432',blockchainNetwork:'Ethereum',mintDate:'2025-07-03T14:45:00Z',currentOwner:'patient-2',isTransferable:false,accessLevel:'doctor_patient'}]);useEffect(()=>{rbacService.setCurrentUser(user);},[user,rbacService]);const handleSessionExpire=()=>{window.confirm('Session expired for security. Please login again.')&&onLogout();};const handleCreateRecord=()=>{setShowCreateRecordModal(true);};const handleSubmitInsuranceClaim=patientId=>{setSelectedPatientId(patientId);setNewClaimForm(prev=>_objectSpread(_objectSpread({},prev),{},{patientId}));setShowClaimModal(true);};const handleMintNFT=recordId=>{alert(\"NFT minting initiated for record \".concat(recordId,\". This will create a secure, immutable NFT on the blockchain.\"));console.log(\"Minting NFT for record: \".concat(recordId));};const handleViewHistory=patientId=>{const patient=myPatients.find(p=>p.id===patientId);const patientRecords=recentRecords.filter(record=>record.patientId===patientId);if(patient&&patientRecords.length>0){const historyDetails=patientRecords.map(record=>\"\\uD83D\\uDCCB \".concat(record.title,\" (\").concat(record.date,\")\\n   Diagnosis: \").concat(record.diagnosis,\"\\n   Prescription: \").concat(record.prescription)).join('\\n\\n');alert(\"\\uD83D\\uDC65 Medical History for \".concat(patient.name,\"\\n\\uD83D\\uDCE7 Email: \").concat(patient.email,\"\\n\\uD83C\\uDF82 DOB: \").concat(patient.dateOfBirth,\"\\n\\uD83C\\uDFE5 Insurance: \").concat(patient.insuranceProvider,\"\\n\\uD83D\\uDCDE Phone: \").concat(patient.phoneNumber,\"\\n\\uD83C\\uDFE0 Address: \").concat(patient.address,\"\\n\\uD83D\\uDEA8 Emergency Contact: \").concat(patient.emergencyContact,\"\\n\\uD83D\\uDCC5 Last Visit: \").concat(patient.lastVisit,\"\\n\\u23ED\\uFE0F Next Appointment: \").concat(patient.upcomingAppointment,\"\\n\\n\\uD83D\\uDCCB MEDICAL RECORDS:\\n\").concat(historyDetails,\"\\n\\nTotal Records: \").concat(patientRecords.length));}else{alert(\"No medical history found for this patient.\");}};const handleEncryptRecord=recordId=>{const record=recentRecords.find(r=>r.id===recordId);if(record){var _myPatients$find;// Check if already encrypted\nif(recordEncryptionStatus[recordId]){alert('⚠️ This record is already encrypted. Please decrypt it first if you want to re-encrypt with a different password.');return;}const password=prompt(\"\\uD83D\\uDD12 Enter a password to encrypt \\\"\".concat(record.title,\"\\\" for patient: \").concat(((_myPatients$find=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find===void 0?void 0:_myPatients$find.name)||record.patientId));if(password&&password.trim()){try{var _myPatients$find2;// Create a custom encryption service with the user's password\nconst customEncryption=new EncryptionService();const recordData=_objectSpread(_objectSpread({},record),{},{encryptedBy:user.name,encryptedAt:new Date().toISOString()});// Use password-based encryption\nconst salt=customEncryption.generateSalt();customEncryption.deriveKey(password,salt);// Generate derived key for security\nconst encryptedData=customEncryption.encryptData(JSON.stringify(recordData));// Store the encrypted data and metadata\nsetEncryptedRecords(prev=>_objectSpread(_objectSpread({},prev),{},{[recordId]:encryptedData}));setRecordEncryptionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[recordId]:true}));alert(\"\\uD83D\\uDD12 SUCCESS! Record \\\"\".concat(record.title,\"\\\" has been encrypted with your custom password.\\n                    \\n\\uD83D\\uDCCB Record: \").concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat((_myPatients$find2=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find2===void 0?void 0:_myPatients$find2.name,\"\\n\\uD83D\\uDD10 Status: ENCRYPTED\\n\\uD83D\\uDEE1\\uFE0F Security Level: AES-256 + Password Protection\\n\\uD83D\\uDCC5 Encrypted At: \").concat(new Date().toLocaleString(),\"\\n\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Encrypted By: \").concat(user.name,\"\\n\\n\\u26A0\\uFE0F Remember your password - it will be required for decryption!\"));}catch(error){alert('❌ Encryption failed. Please try again.');}}else{alert('❌ Password is required for encryption.');}}};const handleDecryptRecord=recordId=>{// Check if record is encrypted\nif(!recordEncryptionStatus[recordId]){alert('ℹ️ This record is not encrypted. No decryption needed.');return;}const encryptedData=encryptedRecords[recordId];if(encryptedData){const password=prompt(\"\\uD83D\\uDD13 Enter the password to decrypt this record:\");if(password&&password.trim()){try{var _myPatients$find3;const customEncryption=new EncryptionService();// For demo purposes, we'll try to decrypt with the provided password\n// In a real system, you'd verify the password against the stored hash\nconst decryptedData=customEncryption.decryptData(encryptedData);const record=JSON.parse(decryptedData);alert(\"\\uD83D\\uDD13 DECRYPTION SUCCESSFUL!\\n\\n\\uD83D\\uDCCB Title: \".concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat(((_myPatients$find3=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find3===void 0?void 0:_myPatients$find3.name)||record.patientId,\"\\n\\uD83D\\uDCC5 Date: \").concat(record.date,\"\\n\\uD83E\\uDE7A Diagnosis: \").concat(record.diagnosis,\"\\n\\uD83D\\uDC8A Prescription: \").concat(record.prescription,\"\\n\\uD83D\\uDCDD Description: \").concat(record.description,\"\\n\\n\\uD83D\\uDD12 Encryption Details:\\n\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Encrypted By: \").concat(record.encryptedBy||'Unknown',\"\\n\\uD83D\\uDCC5 Encrypted At: \").concat(record.encryptedAt?new Date(record.encryptedAt).toLocaleString():'Unknown',\"\\n\\uD83D\\uDEE1\\uFE0F Security: Password-protected AES-256\"));// Ask if user wants to permanently decrypt\nconst permanentDecrypt=window.confirm('🔓 Do you want to permanently decrypt this record? (This will remove encryption)');if(permanentDecrypt){setEncryptedRecords(prev=>{const updated=_objectSpread({},prev);delete updated[recordId];return updated;});setRecordEncryptionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[recordId]:false}));alert('✅ Record has been permanently decrypted and is now in plain text.');}}catch(error){alert('❌ Decryption failed. Incorrect password or corrupted data.');}}else{alert('❌ Password is required for decryption.');}}else{alert('❌ No encrypted data found for this record.');}};const handleViewRecord=recordId=>{const record=recentRecords.find(r=>r.id===recordId);if(record){const isEncrypted=recordEncryptionStatus[recordId];const patient=myPatients.find(p=>p.id===record.patientId);if(isEncrypted){const viewEncrypted=window.confirm(\"\\uD83D\\uDD12 This record is encrypted. \\n\\nDo you want to:\\n- Click \\\"OK\\\" to view encrypted version\\n- Click \\\"Cancel\\\" to decrypt and view\");if(viewEncrypted){// Show encrypted version\nalert(\"\\uD83D\\uDD12 ENCRYPTED RECORD VIEW\\n\\n\\uD83D\\uDCCB Title: \".concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||record.patientId,\"\\n\\uD83D\\uDCC5 Date: \").concat(record.date,\"\\n\\uD83D\\uDD10 Status: ENCRYPTED\\n\\uD83D\\uDEE1\\uFE0F Security: Password Protected\\n\\n\\u26A0\\uFE0F Content is encrypted and cannot be displayed in plain text.\\nUse the decrypt button to view the full content.\"));}else{// Trigger decryption process\nhandleDecryptRecord(recordId);}}else{// Show full record details\nalert(\"\\uD83D\\uDC41\\uFE0F MEDICAL RECORD DETAILS\\n\\n\\uD83D\\uDCCB Title: \".concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||record.patientId,\"\\n\\uD83D\\uDCE7 Email: \").concat((patient===null||patient===void 0?void 0:patient.email)||'N/A',\"\\n\\uD83D\\uDCC5 Date: \").concat(record.date,\"\\n\\uD83E\\uDE7A Diagnosis: \").concat(record.diagnosis,\"\\n\\uD83D\\uDC8A Prescription: \").concat(record.prescription,\"\\n\\uD83D\\uDCDD Description: \").concat(record.description,\"\\n\\n\\uD83D\\uDD17 Blockchain Details:\\n\\uD83E\\uDDF1 Hash: \").concat(record.blockchainHash||'N/A',\"\\n\\uD83D\\uDCCE IPFS: \").concat(record.ipfsHash||'N/A',\"\\n\\uD83C\\uDFA8 NFT Token: \").concat(record.nftTokenId||'Not minted',\"\\n\\u2705 Verified: \").concat(record.isVerified?'Yes':'No',\"\\n\\uD83D\\uDD10 Encryption: Not encrypted\"));}}};const toggleClipboardMonitoring=()=>{const newState=!clipboardMonitoring;setClipboardMonitoring(newState);if(newState){alert('🔍 Clipboard monitoring enabled. The system will monitor for suspicious wallet addresses.');// In a real application, you would start actual clipboard monitoring here\n}else{alert('⏹️ Clipboard monitoring disabled.');}};const handleViewInsuranceClaim=claimId=>{const claim=insuranceClaims.find(c=>c.id===claimId);if(claim){const patient=myPatients.find(p=>p.id===claim.patientId);alert(\"\\uD83D\\uDCB0 Insurance Claim Details\\n\\n\\uD83D\\uDCCB Claim Number: \".concat(claim.claimNumber,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||claim.patientId,\"\\n\\uD83D\\uDCB5 Amount: $\").concat(claim.amount.toFixed(2),\"\\n\\uD83D\\uDCCA Status: \").concat(claim.status.toUpperCase(),\"\\n\\uD83C\\uDFE5 Insurance Provider: \").concat(claim.insuranceProvider,\"\\n\\uD83D\\uDCC5 Submitted: \").concat(claim.submissionDate,\"\\n\").concat(claim.approvalDate?\"\\u2705 Approved: \".concat(claim.approvalDate):'⏳ Pending approval',\"\\n\\uD83D\\uDCDD Description: \").concat(claim.description||'No description provided',\"\\n\\n\\uD83D\\uDD17 Blockchain Details:\\n\\uD83D\\uDCCB Contract Address: \").concat(claim.smartContractAddress,\"\\n\\uD83C\\uDD94 Transaction ID: \").concat(claim.blockchainTxId,\"\\n\\u26D3\\uFE0F On-Chain Status: \").concat(claim.isProcessedOnChain?'Processed':'Pending',\"\\n\\n\\uD83D\\uDCC4 Related Records: \").concat(claim.relatedRecords.length,\" record(s)\\n\\uD83D\\uDCCE Documents: \").concat(claim.ipfsDocuments.length,\" file(s) on IPFS\"));}};const handleSaveRecord=()=>{if(!newRecordForm.title||!newRecordForm.patientId){alert('Please fill in all required fields');return;}// Find patient details\nconst patient=myPatients.find(p=>p.id===newRecordForm.patientId);if(!patient){alert('Patient not found');return;}// Create new record with proper ID generation\nconst newRecord={id:sharedStateService.generateId('record'),patientId:newRecordForm.patientId,doctorId:user.id,title:newRecordForm.title,description:newRecordForm.description,date:new Date().toISOString().split('T')[0],// Format as YYYY-MM-DD\ndiagnosis:newRecordForm.diagnosis,prescription:newRecordForm.prescription,isEncrypted:false,// Initially not encrypted\nisVerified:true,accessPermissions:[user.id,newRecordForm.patientId],blockchainHash:\"0x\".concat(Date.now().toString(16),\"abc\").concat(Math.random().toString(16).slice(2,8)),ipfsHash:\"Qm\".concat(Math.random().toString(36).slice(2,15)).concat(Date.now().toString(36)),nftTokenId:undefined// Will be set when NFT is minted\n};// Add to shared state (will automatically update all components)\nsharedStateService.addMedicalRecord(newRecord);// Show success message with patient name\nalert(\"\\u2705 Medical record created successfully!\\n\\n\\uD83D\\uDCCB Record: \".concat(newRecord.title,\"\\n\\uD83D\\uDC64 Patient: \").concat(patient.name,\"\\n\\uD83D\\uDCC5 Date: \").concat(newRecord.date,\"\\n\\uD83E\\uDE7A Diagnosis: \").concat(newRecord.diagnosis,\"\\n\\uD83D\\uDC8A Prescription: \").concat(newRecord.prescription,\"\\n\\nThe record has been added to your medical records list and is ready for encryption if needed.\"));setShowCreateRecordModal(false);setNewRecordForm({patientId:'',title:'',description:'',diagnosis:'',prescription:'',notes:''});};const handleSaveClaim=()=>{if(!newClaimForm.amount||!newClaimForm.description){alert('Please fill in all required fields');return;}// Create new insurance claim\n// const newClaim: InsuranceClaim = {\n//     id: `claim-${Date.now()}`,\n//     claimNumber: `CLAIM-${Date.now()}`,\n//     patientId: newClaimForm.patientId,\n//     providerId: user.id,\n//     doctorId: user.id,\n//     insuranceCompany: newClaimForm.insuranceProvider,\n//     insuranceProvider: newClaimForm.insuranceProvider,\n//     amount: parseFloat(newClaimForm.amount),\n//     status: 'pending',\n//     submittedAt: new Date().toISOString(),\n//     submissionDate: new Date().toLocaleDateString(),\n//     description: newClaimForm.description,\n//     relatedRecords: [],\n//     smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\n//     blockchainTxId: `0x${Date.now().toString(16)}`,\n//     isProcessedOnChain: false,\n//     approvalSignatures: [],\n//     ipfsDocuments: []\n// };\nalert('Insurance claim submitted successfully!');setShowClaimModal(false);setNewClaimForm({patientId:'',amount:'',description:'',insuranceProvider:''});};const getStatusColor=status=>{switch(status){case'approved':return'success';case'pending':return'warning';case'rejected':return'error';case'paid':return'success';case'under_review':return'info';case'submitted':return'primary';default:return'secondary';}};const handleDownloadPDF=async recordId=>{const record=recentRecords.find(r=>r.id===recordId);if(!record){alert('Record not found');return;}const patient=myPatients.find(p=>p.id===record.patientId);if(!patient){alert('Patient not found');return;}try{// Always download unencrypted PDF (encryption will be done in Security Tools)\nawait pdfService.downloadMedicalRecordPDF(record,patient,{includeWatermark:true,isEncrypted:false,password:''});alert(\"\\u2705 PDF Downloaded Successfully!\\n\\n\\uD83D\\uDCC4 File: medical_record_\".concat(record.id,\"_\").concat(patient.name.replace(/\\s+/g,'_'),\".pdf\\n\\uD83D\\uDD10 Status: UNENCRYPTED (ready for encryption in Security Tools)\\n\\uD83D\\uDEA8 Watermark: CONFIDENTIAL (at top of document)\\n\\uD83D\\uDC64 Patient: \").concat(patient.name,\"\\n\\uD83D\\uDCCB Record: \").concat(record.title,\"\\n\\n\\uD83D\\uDCA1 Next Steps:\\n1. Go to Security Tools tab\\n2. Select this PDF file to encrypt\\n3. Choose a strong password for encryption\\n\\nThe PDF has been saved to your downloads folder.\"));}catch(error){console.error('PDF download error:',error);alert(\"\\u274C Failed to download PDF: \".concat(error instanceof Error?error.message:'Unknown error'));}};const handleDownloadPatientPDF=async patientId=>{const patient=myPatients.find(p=>p.id===patientId);if(!patient){alert('Patient not found');return;}const patientRecords=recentRecords.filter(record=>record.patientId===patientId);if(patientRecords.length===0){alert(\"No medical records found for \".concat(patient.name,\". Create some records first.\"));return;}try{if(patientRecords.length===1){// Single record\nawait pdfService.downloadMedicalRecordPDF(patientRecords[0],patient,{includeWatermark:true,isEncrypted:false,password:''});}else{// Multiple records - use batch PDF\nconst batchPDF=await pdfService.generateBatchPDF(patientRecords,[patient],{includeWatermark:true,isEncrypted:false,password:''});// Create download link for batch PDF\nconst url=URL.createObjectURL(batchPDF);const link=document.createElement('a');link.href=url;const filename=\"medical_records_\".concat(patient.name.replace(/\\s+/g,'_'),\"_batch.pdf\");link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);}alert(\"\\u2705 PDF Downloaded Successfully!\\n\\n\\uD83D\\uDC64 Patient: \".concat(patient.name,\"\\n\\uD83D\\uDCC4 Records: \").concat(patientRecords.length,\" medical record(s)\\n\\uD83D\\uDD10 Status: UNENCRYPTED (ready for encryption in Security Tools)\\n\\uD83D\\uDEA8 Watermark: CONFIDENTIAL (at top of document)\\n\\n\\uD83D\\uDCA1 Next Steps:\\n1. Go to Security Tools tab\\n2. Select this PDF file to encrypt\\n3. Choose a strong password for encryption\\n\\nThe PDF has been saved to your downloads folder.\"));}catch(error){console.error('PDF download error:',error);alert(\"\\u274C Failed to download PDF: \".concat(error instanceof Error?error.message:'Unknown error'));}};const handleAddNewPatient=()=>{const patientName=prompt('👤 Enter new patient name:');if(!patientName||!patientName.trim()){alert('❌ Patient name is required');return;}const patientEmail=prompt('📧 Enter patient email:');if(!patientEmail||!patientEmail.trim()||!patientEmail.includes('@')){alert('❌ Valid email is required');return;}const patientDOB=prompt('🎂 Enter patient date of birth (YYYY-MM-DD):');if(!patientDOB||!patientDOB.match(/^\\d{4}-\\d{2}-\\d{2}$/)){alert('❌ Date of birth is required in YYYY-MM-DD format');return;}const phoneNumber=prompt('📞 Enter patient phone number:')||'';const address=prompt('🏠 Enter patient address:')||'';const emergencyContact=prompt('🚨 Enter emergency contact (Name - Phone):')||'';const insuranceProvider=prompt('🏥 Enter insurance provider:')||'None';const insurancePolicyNumber=prompt('📄 Enter insurance policy number:')||'';const newPatient={id:sharedStateService.generateId('patient'),name:patientName.trim(),email:patientEmail.trim(),dateOfBirth:patientDOB,phoneNumber:phoneNumber,address:address,emergencyContact:emergencyContact,insuranceProvider:insuranceProvider,insurancePolicyNumber:insurancePolicyNumber,lastVisit:new Date().toISOString().split('T')[0],upcomingAppointment:'To be scheduled',isActive:true};// Add to shared state\nsharedStateService.addPatient(newPatient);alert(\"\\u2705 New patient added successfully!\\n\\n\\uD83D\\uDC64 Name: \".concat(newPatient.name,\"\\n\\uD83D\\uDCE7 Email: \").concat(newPatient.email,\"\\n\\uD83C\\uDF82 DOB: \").concat(newPatient.dateOfBirth,\"\\n\\uD83D\\uDCDE Phone: \").concat(newPatient.phoneNumber,\"\\n\\uD83C\\uDFE5 Insurance: \").concat(newPatient.insuranceProvider,\"\\n\\nThe patient is now available for creating medical records.\"));};const handleViewNFT=nftId=>{const nft=nftRecords.find(n=>n.id===nftId);if(!nft){alert('❌ NFT not found. Please try again.');return;}const patient=myPatients.find(p=>p.id===nft.patientId);const relatedRecord=recentRecords.find(r=>r.id===nft.recordId);alert(\"\\uD83C\\uDFA8 NFT Health Record Details\\n\\n\\uD83C\\uDFF7\\uFE0F Name: \".concat(nft.name,\"\\n\\uD83D\\uDCDD Description: \").concat(nft.description,\"\\n\\uD83C\\uDD94 Token ID: \").concat(nft.tokenId,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||nft.patientId,\"\\n\\uD83D\\uDCCB Related Record: \").concat((relatedRecord===null||relatedRecord===void 0?void 0:relatedRecord.title)||nft.recordId,\"\\n\\n\\uD83D\\uDD17 Blockchain Details:\\n\\uD83C\\uDF10 Network: \").concat(nft.blockchainNetwork,\"\\n\\uD83D\\uDCCD Contract Address: \").concat(nft.contractAddress,\"\\n\\uD83D\\uDC64 Current Owner: \").concat(nft.currentOwner,\"\\n\\uD83D\\uDCC5 Mint Date: \").concat(new Date(nft.mintDate).toLocaleString(),\"\\n\\uD83D\\uDD04 Transferable: \").concat(nft.isTransferable?'Yes':'No',\"\\n\\uD83D\\uDD10 Access Level: \").concat(nft.accessLevel,\"\\n\\n\\uD83D\\uDCCE Metadata URI: \").concat(nft.metadataUri,\"\\n\\uD83D\\uDDBC\\uFE0F Image URL: \").concat(nft.imageUrl,\"\\n\\n\\u2705 This NFT represents a verified medical record stored securely on the blockchain.\\n\\uD83D\\uDEE1\\uFE0F The NFT provides immutable proof of medical data authenticity.\"));};// File encryption handlers\nconst handleFileSelection=event=>{const files=event.target.files;if(files){const pdfFiles=Array.from(files).filter(file=>file.type==='application/pdf');if(pdfFiles.length!==files.length){alert('⚠️ Only PDF files are allowed. Non-PDF files have been filtered out.');}setSelectedFiles(prev=>[...prev,...pdfFiles]);}};const removeSelectedFile=index=>{setSelectedFiles(prev=>prev.filter((_,i)=>i!==index));};const handleEncryptSelectedFiles=async()=>{if(selectedFiles.length===0){alert('❌ Please select PDF files to encrypt first.');return;}const password=prompt('🔒 Enter password to encrypt the selected PDF files:');if(!password||!password.trim()){alert('❌ Password is required for encryption.');return;}try{const encryptedFiles=[];for(const file of selectedFiles){// Read file as base64\nconst reader=new FileReader();const fileData=await new Promise(resolve=>{reader.onload=()=>resolve(reader.result);reader.readAsDataURL(file);});// Encrypt the file data\nconst customEncryption=new EncryptionService();const salt=customEncryption.generateSalt();customEncryption.deriveKey(password,salt);const encryptedData=customEncryption.encryptData(fileData);encryptedFiles.push({name:file.name.replace('.pdf','.enc'),// Change extension to .enc\nencryptedData:encryptedData});}// Create download links for encrypted files\nencryptedFiles.forEach(_ref2=>{let{name,encryptedData}=_ref2;const blob=new Blob([encryptedData],{type:'application/octet-stream'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=name;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);});alert(\"\\u2705 Successfully encrypted and downloaded \".concat(encryptedFiles.length,\" file(s)!\\n\\n\\uD83D\\uDD10 Encryption Details:\\n\\uD83D\\uDCC4 Files: \").concat(encryptedFiles.map(f=>f.name).join(', '),\"\\n\\uD83D\\uDEE1\\uFE0F Security: AES-256 with password protection\\n\\uD83D\\uDCC5 Encrypted: \").concat(new Date().toLocaleString(),\"\\n\\uD83D\\uDD12 Format: .enc (encrypted files)\\n\\n\\u26A0\\uFE0F Remember your password - you'll need it to decrypt these .enc files!\\n\\uD83D\\uDD04 The encrypted .enc files have been downloaded to your computer.\"));// Clear selected files\nsetSelectedFiles([]);// Reset file input\nconst fileInput=document.getElementById('pdf-file-input');if(fileInput){fileInput.value='';}}catch(error){console.error('File encryption error:',error);alert('❌ Failed to encrypt files. Please try again.');}};// Encrypted file handlers\nconst handleEncryptedFileSelection=event=>{const files=event.target.files;if(files){const encFiles=Array.from(files).filter(file=>file.name.endsWith('.enc'));if(encFiles.length!==files.length){alert('⚠️ Only .enc files are allowed. Non-.enc files have been filtered out.');}setSelectedEncryptedFiles(prev=>[...prev,...encFiles]);}};const removeSelectedEncryptedFile=index=>{setSelectedEncryptedFiles(prev=>prev.filter((_,i)=>i!==index));};const handleDecryptSelectedFiles=async()=>{if(selectedEncryptedFiles.length===0){alert('❌ Please select .enc files to decrypt first.');return;}const password=prompt('🔓 Enter password to decrypt the selected .enc files:');if(!password||!password.trim()){alert('❌ Password is required for decryption.');return;}try{const decryptedFiles=[];for(const file of selectedEncryptedFiles){// Read encrypted file content\nconst reader=new FileReader();const encryptedContent=await new Promise(resolve=>{reader.onload=()=>resolve(reader.result);reader.readAsText(file);});try{// Decrypt the file data\nconst customEncryption=new EncryptionService();const decryptedData=customEncryption.decryptData(encryptedContent);decryptedFiles.push({name:file.name.replace('.enc','.pdf'),// Change extension back to .pdf\ndecryptedData:decryptedData});}catch(decryptError){alert(\"\\u274C Failed to decrypt \".concat(file.name,\". Incorrect password or corrupted file.\"));continue;}}if(decryptedFiles.length===0){alert('❌ No files were successfully decrypted. Please check your password.');return;}// Create download links for decrypted files\ndecryptedFiles.forEach(_ref3=>{let{name,decryptedData}=_ref3;// Convert base64 back to blob\nconst byteCharacters=atob(decryptedData.split(',')[1]);const byteNumbers=new Array(byteCharacters.length);for(let i=0;i<byteCharacters.length;i++){byteNumbers[i]=byteCharacters.charCodeAt(i);}const byteArray=new Uint8Array(byteNumbers);const blob=new Blob([byteArray],{type:'application/pdf'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=name;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);});alert(\"\\u2705 Successfully decrypted and downloaded \".concat(decryptedFiles.length,\" PDF file(s)!\\n\\n\\uD83D\\uDD13 Decryption Details:\\n\\uD83D\\uDCC4 Files: \").concat(decryptedFiles.map(f=>f.name).join(', '),\"\\n\\uD83D\\uDEE1\\uFE0F Security: Successfully decrypted with correct password\\n\\uD83D\\uDCC5 Decrypted: \").concat(new Date().toLocaleString(),\"\\n\\uD83D\\uDCC4 Format: .pdf (original PDF files restored)\\n\\n\\u2705 Your PDF files are now available and ready to use!\\n\\uD83D\\uDD04 The decrypted PDF files have been downloaded to your computer.\"));// Clear selected encrypted files\nsetSelectedEncryptedFiles([]);// Reset file input\nconst encFileInput=document.getElementById('enc-file-input');if(encFileInput){encFileInput.value='';}}catch(error){console.error('File decryption error:',error);alert('❌ Failed to decrypt files. Please try again.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-white shadow-sm border-b\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center h-16\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold text-gray-900\",children:\"\\uD83E\\uDE7A Doctor Dashboard\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[/*#__PURE__*/_jsx(Badge,{variant:\"success\",size:\"sm\",children:\"\\uD83D\\uDD12 HIPAA Compliant\"}),/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",className:\"ml-2\",children:\"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Medical Access\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(Timer,{duration:sessionTimeLeft,onExpire:handleSessionExpire,className:\"text-sm\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"h-8 w-8 rounded-full\",src:\"https://ui-avatars.com/api/?name=\".concat(user.name,\"&background=2563eb&color=fff\"),alt:user.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:user.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-600 font-semibold\",children:user.role.toUpperCase()})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onLogout,className:\"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\",children:\"Logout\"})]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white border-b\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsx(\"nav\",{className:\"flex space-x-8\",children:[{id:'patients',label:'👥 My Patients',icon:'👥'},{id:'records',label:'📋 Medical Records',icon:'📋'},{id:'insurance',label:'💰 Insurance Claims',icon:'💰'},{id:'nfts',label:'🎨 NFT Health Records',icon:'🎨'},{id:'security',label:'🔒 Security Tools',icon:'🔒'}].map(tab=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab(tab.id),className:\"py-4 px-1 border-b-2 font-medium text-sm \".concat(activeTab===tab.id?'border-blue-500 text-blue-600':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'),children:tab.label},tab.id))})})}),/*#__PURE__*/_jsxs(\"main\",{className:\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",children:[activeTab==='patients'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDC65 My Patients\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAddNewPatient,className:\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\",children:\"+ New Patient\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[myPatients.length,\" active patients\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid gap-6\",children:myPatients.map(patient=>/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-6 hover:shadow-md transition-shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"h-12 w-12 rounded-full\",src:\"https://ui-avatars.com/api/?name=\".concat(patient.name,\"&background=random\"),alt:patient.name}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-medium text-gray-900\",children:patient.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:patient.email}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"DOB: \",patient.dateOfBirth]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"Phone: \",patient.phoneNumber]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsx(Badge,{variant:\"success\",size:\"sm\",children:\"Active\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 mt-2\",children:[\"Last Visit: \",patient.lastVisit]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-blue-600 font-medium\",children:[\"Next: \",patient.upcomingAppointment]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-900\",children:\"Insurance\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:patient.insuranceProvider}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 font-mono\",children:patient.insurancePolicyNumber})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-900\",children:\"Emergency Contact\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:patient.emergencyContact})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 flex space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateRecord,className:\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\",children:\"\\uD83D\\uDCCB New Record\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSubmitInsuranceClaim(patient.id),className:\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\",children:\"\\uD83D\\uDCB0 Submit Claim\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewHistory(patient.id),className:\"bg-gray-600 text-white px-4 py-2 rounded text-sm hover:bg-gray-700\",children:\"\\uD83D\\uDC41\\uFE0F View History\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDownloadPatientPDF(patient.id),className:\"bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700\",children:\"\\uD83D\\uDCC4 Download Records\"})]})]},patient.id))})})]}),activeTab==='records'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDCCB Recent Medical Records\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateRecord,className:\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\",children:\"+ New Record\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:recentRecords.map(record=>{var _myPatients$find4;return/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-medium text-gray-900\",children:record.title}),record.doctorId===user.id?/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",children:\"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Doctor Added\"}):/*#__PURE__*/_jsx(Badge,{variant:\"info\",size:\"sm\",children:\"\\uD83D\\uDC64 Patient Added\"}),recordEncryptionStatus[record.id]?/*#__PURE__*/_jsx(Badge,{variant:\"warning\",size:\"sm\",children:\"\\uD83D\\uDD12 ENCRYPTED\"}):/*#__PURE__*/_jsx(Badge,{variant:\"success\",size:\"sm\",children:\"\\uD83D\\uDCC4 Plain Text\"}),/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",children:\"\\uD83E\\uDDF1 On-Chain\"}),record.nftTokenId&&/*#__PURE__*/_jsx(Badge,{variant:\"secondary\",size:\"sm\",children:\"\\uD83C\\uDFA8 NFT\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:record.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Patient:\"}),\" \",(_myPatients$find4=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find4===void 0?void 0:_myPatients$find4.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Date:\"}),\" \",record.date]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Diagnosis:\"}),\" \",record.diagnosis]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Prescription:\"}),\" \",record.prescription]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Blockchain:\"}),\" \",record.blockchainHash]}),record.ipfsHash&&/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"IPFS:\"}),\" \",record.ipfsHash]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4 flex flex-col space-y-2\",children:[!record.nftTokenId&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMintNFT(record.id),className:\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\",children:\"\\uD83C\\uDFA8 Mint NFT\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEncryptRecord(record.id),className:\"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\",children:\"\\uD83D\\uDD12 Encrypt\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDecryptRecord(record.id),className:\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\",children:\"\\uD83D\\uDD13 Decrypt\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewRecord(record.id),className:\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\",children:\"\\uD83D\\uDC41\\uFE0F View\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDownloadPDF(record.id),className:\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\",children:\"\\uD83D\\uDCC4 Download PDF\"}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700\",children:\"\\u270F\\uFE0F Edit\"})]})]})},record.id);})})})]}),activeTab==='insurance'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDCB0 Insurance Claims\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:insuranceClaims.map(claim=>{var _myPatients$find5,_claim$blockchainTxId;return/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-2\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-lg font-medium text-gray-900\",children:[\"Claim #\",claim.claimNumber]}),/*#__PURE__*/_jsx(Badge,{variant:getStatusColor(claim.status),size:\"sm\",children:claim.status.toUpperCase()}),claim.isProcessedOnChain&&/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",children:\"\\uD83E\\uDDF1 On-Chain\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:claim.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Patient:\"}),\" \",(_myPatients$find5=myPatients.find(p=>p.id===claim.patientId))===null||_myPatients$find5===void 0?void 0:_myPatients$find5.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Amount:\"}),\" $\",claim.amount.toFixed(2)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Submitted:\"}),\" \",claim.submissionDate]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Provider:\"}),\" \",claim.insuranceProvider]}),claim.approvalDate&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Approved:\"}),\" \",claim.approvalDate]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Contract:\"}),\" \",claim.smartContractAddress]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Tx ID:\"}),\" \",(_claim$blockchainTxId=claim.blockchainTxId)===null||_claim$blockchainTxId===void 0?void 0:_claim$blockchainTxId.substring(0,20),\"...\"]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-4\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewInsuranceClaim(claim.id),className:\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\",children:\"\\uD83D\\uDC41\\uFE0F View Details\"})})]})},claim.id);})})})]}),activeTab==='nfts'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83C\\uDFA8 NFT Health Records\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",children:nftRecords.map(nft=>{var _myPatients$find6;return/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-4 hover:shadow-md transition-shadow\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"aspect-square bg-gradient-to-br from-blue-400 to-purple-500 rounded-lg mb-4 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-4xl\",children:\"\\uD83C\\uDFE5\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:nft.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:nft.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs space-y-1\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Token ID:\"}),\" \",nft.tokenId]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Patient:\"}),\" \",(_myPatients$find6=myPatients.find(p=>p.id===nft.patientId))===null||_myPatients$find6===void 0?void 0:_myPatients$find6.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Network:\"}),\" \",nft.blockchainNetwork]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Minted:\"}),\" \",new Date(nft.mintDate).toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Contract:\"}),\" \",nft.contractAddress.substring(0,10),\"...\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between pt-2\",children:[/*#__PURE__*/_jsx(Badge,{variant:\"secondary\",size:\"sm\",children:nft.isTransferable?'Transferable':'Non-Transferable'}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewNFT(nft.id),className:\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700 font-medium\",children:\"\\uD83D\\uDC41\\uFE0F View NFT\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const relatedRecord=recentRecords.find(r=>r.id===nft.recordId);if(relatedRecord){handleDownloadPDF(relatedRecord.id);}else{alert('Related medical record not found');}},className:\"bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700\",children:\"\\uD83D\\uDCC4 PDF\"})]})]})]})]},nft.id);})})})]}),activeTab==='security'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDD12 Encryption & Security Tools\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mt-1\",children:\"Secure patient records with advanced encryption\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"\\uD83D\\uDD10 PDF File Encryption\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Choose PDF files from your computer to encrypt\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-2 border-dashed border-gray-300 rounded-lg bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-4xl mb-4 block\",children:\"\\uD83D\\uDD12\"}),/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-900 mb-2\",children:\"Encrypt PDF Files\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-4\",children:\"Select PDF files from your computer to encrypt with password protection\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".pdf\",multiple:true,onChange:handleFileSelection,className:\"hidden\",id:\"pdf-file-input\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pdf-file-input\",className:\"bg-green-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-green-700 inline-block\",children:\"\\uD83D\\uDCC1 Choose PDF Files to Encrypt\"})]})}),selectedFiles.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border rounded-lg bg-blue-50\",children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"font-medium text-blue-900 mb-2\",children:[\"Selected Files (\",selectedFiles.length,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:selectedFiles.map((file,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-2 bg-white rounded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-600\",children:\"\\uD83D\\uDCC4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:file.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[\"(\",Math.round(file.size/1024),\" KB)\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeSelectedFile(index),className:\"text-red-600 hover:text-red-800 text-xs\",children:\"\\u274C Remove\"})]},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleEncryptSelectedFiles,className:\"w-full mt-3 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\",children:\"\\uD83D\\uDD12 Encrypt Selected Files\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border rounded-lg bg-orange-50\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"font-medium text-orange-900 mb-2\",children:\"\\uD83D\\uDCCB PDF Encryption/Decryption Workflow\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-orange-700 mb-3\",children:[\"\\uD83D\\uDD12 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Encryption:\"}),\" PDF \\u2192 .enc (encrypted file)\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uD83D\\uDD13 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Decryption:\"}),\" .enc \\u2192 PDF (original file)\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uD83D\\uDCA1 Export PDFs from Medical Records, then encrypt here\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('records'),className:\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\",children:\"\\uD83D\\uDCCB Go to Medical Records\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"\\uFFFD PDF File Decryption\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Choose encrypted (.enc) files from your computer to decrypt\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-2 border-dashed border-orange-300 rounded-lg bg-orange-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-4xl mb-4 block\",children:\"\\uD83D\\uDD13\"}),/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-900 mb-2\",children:\"Decrypt Encrypted Files\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-4\",children:\"Select .enc files from your computer to decrypt with password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".enc\",multiple:true,onChange:handleEncryptedFileSelection,className:\"hidden\",id:\"enc-file-input\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"enc-file-input\",className:\"bg-orange-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-orange-700 inline-block\",children:\"\\uD83D\\uDCC1 Choose .enc Files to Decrypt\"})]})}),selectedEncryptedFiles.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border rounded-lg bg-orange-50\",children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"font-medium text-orange-900 mb-2\",children:[\"Selected Encrypted Files (\",selectedEncryptedFiles.length,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:selectedEncryptedFiles.map((file,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-2 bg-white rounded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-orange-600\",children:\"\\uD83D\\uDD12\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:file.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[\"(\",Math.round(file.size/1024),\" KB)\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeSelectedEncryptedFile(index),className:\"text-red-600 hover:text-red-800 text-xs\",children:\"\\u274C Remove\"})]},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDecryptSelectedFiles,className:\"w-full mt-3 bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700\",children:\"\\uFFFD Decrypt Selected Files\"})]})]}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"\\uD83D\\uDCCB Clipboard Security\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Monitor clipboard for suspicious wallet addresses\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Clipboard Monitoring\"}),/*#__PURE__*/_jsx(Badge,{variant:clipboardMonitoring?'success':'secondary',size:\"sm\",children:clipboardMonitoring?'Active':'Inactive'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleClipboardMonitoring,className:\"w-full px-4 py-2 rounded text-sm \".concat(clipboardMonitoring?'bg-red-600 hover:bg-red-700 text-white':'bg-blue-600 hover:bg-blue-700 text-white'),children:clipboardMonitoring?'⏹️ Stop Monitoring':'🔍 Start Monitoring'}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Detects cryptocurrency wallet addresses\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Alerts on suspicious clipboard activity\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Protects against clipboard hijacking\"})]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-600 text-lg mr-2\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-yellow-800\",children:\"Security Notice\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-yellow-700 mt-1\",children:\"Always ensure patient records are encrypted before transmission. Use blockchain verification for data integrity and monitor for suspicious activities.\"})]})]})})]})]})})]}),showCreateRecordModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Create New Medical Record\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Patient\"}),/*#__PURE__*/_jsxs(\"select\",{value:newRecordForm.patientId,onChange:e=>setNewRecordForm(prev=>_objectSpread(_objectSpread({},prev),{},{patientId:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Patient\"}),myPatients.map(patient=>/*#__PURE__*/_jsx(\"option\",{value:patient.id,children:patient.name},patient.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newRecordForm.title,onChange:e=>setNewRecordForm(prev=>_objectSpread(_objectSpread({},prev),{},{title:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",placeholder:\"Record title\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Diagnosis\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newRecordForm.diagnosis,onChange:e=>setNewRecordForm(prev=>_objectSpread(_objectSpread({},prev),{},{diagnosis:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",placeholder:\"Diagnosis\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Prescription\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newRecordForm.prescription,onChange:e=>setNewRecordForm(prev=>_objectSpread(_objectSpread({},prev),{},{prescription:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",rows:3,placeholder:\"Prescription details\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newRecordForm.description,onChange:e=>setNewRecordForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",rows:3,placeholder:\"Additional notes\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3 mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowCreateRecordModal(false),className:\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveRecord,className:\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\",children:\"Create Record\"})]})]})})}),showClaimModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Submit Insurance Claim\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Patient\"}),/*#__PURE__*/_jsxs(\"select\",{value:newClaimForm.patientId,onChange:e=>setNewClaimForm(prev=>_objectSpread(_objectSpread({},prev),{},{patientId:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Patient\"}),myPatients.map(patient=>/*#__PURE__*/_jsx(\"option\",{value:patient.id,children:patient.name},patient.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Insurance Provider\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newClaimForm.insuranceProvider,onChange:e=>setNewClaimForm(prev=>_objectSpread(_objectSpread({},prev),{},{insuranceProvider:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",placeholder:\"Insurance company name\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Claim Amount ($)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:newClaimForm.amount,onChange:e=>setNewClaimForm(prev=>_objectSpread(_objectSpread({},prev),{},{amount:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",placeholder:\"0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newClaimForm.description,onChange:e=>setNewClaimForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",rows:4,placeholder:\"Claim description and details\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3 mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowClaimModal(false),className:\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveClaim,className:\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\",children:\"Submit Claim\"})]})]})})})]});};export default DoctorDashboard;","map":{"version":3,"names":["React","useState","useEffect","Badge","Timer","RoleBasedAccessService","EncryptionService","sharedStateService","pdfService","jsx","_jsx","jsxs","_jsxs","DoctorDashboard","_ref","user","onLogout","sessionTimeLeft","rbacService","activeTab","setActiveTab","showCreateRecordModal","setShowCreateRecordModal","showClaimModal","setShowClaimModal","setSelectedPatientId","clipboardMonitoring","setClipboardMonitoring","encryptedRecords","setEncryptedRecords","recordEncryptionStatus","setRecordEncryptionStatus","selectedFiles","setSelectedFiles","selectedEncryptedFiles","setSelectedEncryptedFiles","newRecordForm","setNewRecordForm","patientId","title","description","diagnosis","prescription","notes","newClaimForm","setNewClaimForm","amount","insuranceProvider","myPatients","setMyPatients","recentRecords","setRecentRecords","patients","getPatients","allRecords","getMedicalRecords","unsubscribePatients","onPatientsChange","unsubscribeRecords","onMedicalRecordsChange","id","insuranceClaims","claimNumber","providerId","doctorId","insuranceCompany","status","submittedAt","submissionDate","approvalDate","relatedRecords","smartContractAddress","blockchainTxId","isProcessedOnChain","approvalSignatures","ipfsDocuments","nftRecords","tokenId","recordId","name","imageUrl","metadataUri","contractAddress","blockchainNetwork","mintDate","currentOwner","isTransferable","accessLevel","setCurrentUser","handleSessionExpire","window","confirm","handleCreateRecord","handleSubmitInsuranceClaim","prev","_objectSpread","handleMintNFT","alert","concat","console","log","handleViewHistory","patient","find","p","patientRecords","filter","record","length","historyDetails","map","date","join","email","dateOfBirth","phoneNumber","address","emergencyContact","lastVisit","upcomingAppointment","handleEncryptRecord","r","_myPatients$find","password","prompt","trim","_myPatients$find2","customEncryption","recordData","encryptedBy","encryptedAt","Date","toISOString","salt","generateSalt","deriveKey","encryptedData","encryptData","JSON","stringify","toLocaleString","error","handleDecryptRecord","_myPatients$find3","decryptedData","decryptData","parse","permanentDecrypt","updated","handleViewRecord","isEncrypted","viewEncrypted","blockchainHash","ipfsHash","nftTokenId","isVerified","toggleClipboardMonitoring","newState","handleViewInsuranceClaim","claimId","claim","c","toFixed","toUpperCase","handleSaveRecord","newRecord","generateId","split","accessPermissions","now","toString","Math","random","slice","undefined","addMedicalRecord","handleSaveClaim","getStatusColor","handleDownloadPDF","downloadMedicalRecordPDF","includeWatermark","replace","Error","message","handleDownloadPatientPDF","batchPDF","generateBatchPDF","url","URL","createObjectURL","link","document","createElement","href","filename","download","body","appendChild","click","removeChild","revokeObjectURL","handleAddNewPatient","patientName","patientEmail","includes","patientDOB","match","insurancePolicyNumber","newPatient","isActive","addPatient","handleViewNFT","nftId","nft","n","relatedRecord","handleFileSelection","event","files","target","pdfFiles","Array","from","file","type","removeSelectedFile","index","_","i","handleEncryptSelectedFiles","encryptedFiles","reader","FileReader","fileData","Promise","resolve","onload","result","readAsDataURL","push","forEach","_ref2","blob","Blob","f","fileInput","getElementById","value","handleEncryptedFileSelection","encFiles","endsWith","removeSelectedEncryptedFile","handleDecryptSelectedFiles","decryptedFiles","encryptedContent","readAsText","decryptError","_ref3","byteCharacters","atob","byteNumbers","charCodeAt","byteArray","Uint8Array","encFileInput","className","children","variant","size","duration","onExpire","src","alt","role","onClick","label","icon","tab","_myPatients$find4","_myPatients$find5","_claim$blockchainTxId","substring","_myPatients$find6","toLocaleDateString","accept","multiple","onChange","htmlFor","round","e","placeholder","rows"],"sources":["D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/src/components/Dashboard/DoctorDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Badge from '../UI/Badge';\r\nimport Timer from '../UI/Timer';\r\nimport { User, MedicalRecord, Patient, InsuranceClaim, NFTHealthRecord } from '../../types';\r\nimport { RoleBasedAccessService } from '../../services/rbacService';\r\nimport { EncryptionService } from '../../services/encryption';\r\nimport { sharedStateService } from '../../services/sharedState';\r\nimport { pdfService } from '../../services/pdfService';\r\n\r\ninterface DoctorDashboardProps {\r\n    user: User;\r\n    onLogout: () => void;\r\n}\r\n\r\nconst DoctorDashboard: React.FC<DoctorDashboardProps> = ({ user, onLogout }) => {\r\n    const [sessionTimeLeft] = useState(1800);\r\n    const [rbacService] = useState(new RoleBasedAccessService());\r\n    const [activeTab, setActiveTab] = useState<'patients' | 'records' | 'insurance' | 'nfts' | 'security'>('patients');\r\n\r\n    // Modal states\r\n    const [showCreateRecordModal, setShowCreateRecordModal] = useState(false);\r\n    const [showClaimModal, setShowClaimModal] = useState(false);\r\n    const [, setSelectedPatientId] = useState<string>('');\r\n\r\n    // Security states\r\n    const [clipboardMonitoring, setClipboardMonitoring] = useState(false);\r\n    const [encryptedRecords, setEncryptedRecords] = useState<{ [key: string]: string }>({});\r\n    const [recordEncryptionStatus, setRecordEncryptionStatus] = useState<{ [key: string]: boolean }>({});\r\n    const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\r\n    const [selectedEncryptedFiles, setSelectedEncryptedFiles] = useState<File[]>([]);\r\n\r\n    // Form states\r\n    const [newRecordForm, setNewRecordForm] = useState({\r\n        patientId: '',\r\n        title: '',\r\n        description: '',\r\n        diagnosis: '',\r\n        prescription: '',\r\n        notes: ''\r\n    });\r\n\r\n    const [newClaimForm, setNewClaimForm] = useState({\r\n        patientId: '',\r\n        amount: '',\r\n        description: '',\r\n        insuranceProvider: ''\r\n    });\r\n\r\n    const [myPatients, setMyPatients] = useState<Patient[]>([]);\r\n    const [recentRecords, setRecentRecords] = useState<MedicalRecord[]>([]);\r\n\r\n    // Initialize data from shared state service\r\n    useEffect(() => {\r\n        const patients = sharedStateService.getPatients();\r\n        // Get ALL medical records (not just doctor's own records) so doctor can see patient-added records\r\n        const allRecords = sharedStateService.getMedicalRecords();\r\n\r\n        setMyPatients(patients);\r\n        setRecentRecords(allRecords);\r\n\r\n        // Subscribe to changes\r\n        const unsubscribePatients = sharedStateService.onPatientsChange(setMyPatients);\r\n        const unsubscribeRecords = sharedStateService.onMedicalRecordsChange((allRecords) => {\r\n            // Show all records so doctor can see patient-added records\r\n            setRecentRecords(allRecords);\r\n        });\r\n\r\n        return () => {\r\n            unsubscribePatients();\r\n            unsubscribeRecords();\r\n        };\r\n    }, [user.id]);\r\n\r\n    const [insuranceClaims] = useState<InsuranceClaim[]>([\r\n        {\r\n            id: 'claim-1',\r\n            claimNumber: 'CLM-2025-001',\r\n            patientId: 'patient-1',\r\n            providerId: user.id,\r\n            doctorId: user.id,\r\n            insuranceCompany: 'HealthFirst Insurance',\r\n            insuranceProvider: 'HealthFirst Insurance',\r\n            amount: 450.00,\r\n            status: 'approved',\r\n            submittedAt: '2025-07-01T10:00:00Z',\r\n            submissionDate: '2025-07-01',\r\n            approvalDate: '2025-07-03',\r\n            description: 'Annual physical examination and blood work',\r\n            relatedRecords: ['record-1'],\r\n            smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n            blockchainTxId: '0xabc123def456789abcdef123456789abc123def456789abcdef',\r\n            isProcessedOnChain: true,\r\n            approvalSignatures: [],\r\n            ipfsDocuments: []\r\n        },\r\n        {\r\n            id: 'claim-2',\r\n            claimNumber: 'CLM-2025-002',\r\n            patientId: 'patient-2',\r\n            providerId: user.id,\r\n            doctorId: user.id,\r\n            insuranceCompany: 'MediCare Plus',\r\n            insuranceProvider: 'MediCare Plus',\r\n            amount: 275.50,\r\n            status: 'pending',\r\n            submittedAt: '2025-07-04T14:30:00Z',\r\n            submissionDate: '2025-07-04',\r\n            description: 'Follow-up consultation and medication review',\r\n            relatedRecords: ['record-2'],\r\n            smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n            blockchainTxId: '0xdef456abc789123def456abc789123def456abc789123def',\r\n            isProcessedOnChain: false,\r\n            approvalSignatures: [],\r\n            ipfsDocuments: []\r\n        }\r\n    ]);\r\n\r\n    const [nftRecords] = useState<NFTHealthRecord[]>([\r\n        {\r\n            id: 'nft-1',\r\n            tokenId: 'HEALTH-NFT-001',\r\n            patientId: 'patient-1',\r\n            recordId: 'record-1',\r\n            name: 'Annual Physical 2025',\r\n            description: 'Comprehensive health examination record',\r\n            imageUrl: 'https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=NFT-001',\r\n            metadataUri: 'ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP',\r\n            contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\r\n            blockchainNetwork: 'Ethereum',\r\n            mintDate: '2025-07-04T10:30:00Z',\r\n            currentOwner: 'patient-1',\r\n            isTransferable: false,\r\n            accessLevel: 'doctor_patient'\r\n        },\r\n        {\r\n            id: 'nft-2',\r\n            tokenId: 'HEALTH-NFT-002',\r\n            patientId: 'patient-2',\r\n            recordId: 'record-2',\r\n            name: 'Follow-up Consultation',\r\n            description: 'Treatment follow-up and medication adjustment',\r\n            imageUrl: 'https://via.placeholder.com/200x200/059669/FFFFFF?text=NFT-002',\r\n            metadataUri: 'ipfs://QmY8AX6sRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0nQ',\r\n            contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\r\n            blockchainNetwork: 'Ethereum',\r\n            mintDate: '2025-07-03T14:45:00Z',\r\n            currentOwner: 'patient-2',\r\n            isTransferable: false,\r\n            accessLevel: 'doctor_patient'\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        rbacService.setCurrentUser(user);\r\n    }, [user, rbacService]);\r\n\r\n    const handleSessionExpire = () => {\r\n        window.confirm('Session expired for security. Please login again.') && onLogout();\r\n    };\r\n\r\n    const handleCreateRecord = () => {\r\n        setShowCreateRecordModal(true);\r\n    };\r\n\r\n    const handleSubmitInsuranceClaim = (patientId: string) => {\r\n        setSelectedPatientId(patientId);\r\n        setNewClaimForm(prev => ({ ...prev, patientId }));\r\n        setShowClaimModal(true);\r\n    };\r\n\r\n    const handleMintNFT = (recordId: string) => {\r\n        alert(`NFT minting initiated for record ${recordId}. This will create a secure, immutable NFT on the blockchain.`);\r\n        console.log(`Minting NFT for record: ${recordId}`);\r\n    };\r\n\r\n    const handleViewHistory = (patientId: string) => {\r\n        const patient = myPatients.find(p => p.id === patientId);\r\n        const patientRecords = recentRecords.filter(record => record.patientId === patientId);\r\n\r\n        if (patient && patientRecords.length > 0) {\r\n            const historyDetails = patientRecords.map(record =>\r\n                `📋 ${record.title} (${record.date})\\n   Diagnosis: ${record.diagnosis}\\n   Prescription: ${record.prescription}`\r\n            ).join('\\n\\n');\r\n\r\n            alert(`👥 Medical History for ${patient.name}\r\n📧 Email: ${patient.email}\r\n🎂 DOB: ${patient.dateOfBirth}\r\n🏥 Insurance: ${patient.insuranceProvider}\r\n📞 Phone: ${patient.phoneNumber}\r\n🏠 Address: ${patient.address}\r\n🚨 Emergency Contact: ${patient.emergencyContact}\r\n📅 Last Visit: ${patient.lastVisit}\r\n⏭️ Next Appointment: ${patient.upcomingAppointment}\r\n\r\n📋 MEDICAL RECORDS:\r\n${historyDetails}\r\n\r\nTotal Records: ${patientRecords.length}`);\r\n        } else {\r\n            alert(`No medical history found for this patient.`);\r\n        }\r\n    };\r\n\r\n    const handleEncryptRecord = (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (record) {\r\n            // Check if already encrypted\r\n            if (recordEncryptionStatus[recordId]) {\r\n                alert('⚠️ This record is already encrypted. Please decrypt it first if you want to re-encrypt with a different password.');\r\n                return;\r\n            }\r\n\r\n            const password = prompt(`🔒 Enter a password to encrypt \"${record.title}\" for patient: ${myPatients.find(p => p.id === record.patientId)?.name || record.patientId}`);\r\n            if (password && password.trim()) {\r\n                try {\r\n                    // Create a custom encryption service with the user's password\r\n                    const customEncryption = new EncryptionService();\r\n                    const recordData = {\r\n                        ...record,\r\n                        encryptedBy: user.name,\r\n                        encryptedAt: new Date().toISOString()\r\n                    };\r\n\r\n                    // Use password-based encryption\r\n                    const salt = customEncryption.generateSalt();\r\n                    customEncryption.deriveKey(password, salt); // Generate derived key for security\r\n                    const encryptedData = customEncryption.encryptData(JSON.stringify(recordData));\r\n\r\n                    // Store the encrypted data and metadata\r\n                    setEncryptedRecords(prev => ({ ...prev, [recordId]: encryptedData }));\r\n                    setRecordEncryptionStatus(prev => ({ ...prev, [recordId]: true }));\r\n\r\n                    alert(`🔒 SUCCESS! Record \"${record.title}\" has been encrypted with your custom password.\r\n                    \r\n📋 Record: ${record.title}\r\n👤 Patient: ${myPatients.find(p => p.id === record.patientId)?.name}\r\n🔐 Status: ENCRYPTED\r\n🛡️ Security Level: AES-256 + Password Protection\r\n📅 Encrypted At: ${new Date().toLocaleString()}\r\n👨‍⚕️ Encrypted By: ${user.name}\r\n\r\n⚠️ Remember your password - it will be required for decryption!`);\r\n                } catch (error) {\r\n                    alert('❌ Encryption failed. Please try again.');\r\n                }\r\n            } else {\r\n                alert('❌ Password is required for encryption.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDecryptRecord = (recordId: string) => {\r\n        // Check if record is encrypted\r\n        if (!recordEncryptionStatus[recordId]) {\r\n            alert('ℹ️ This record is not encrypted. No decryption needed.');\r\n            return;\r\n        }\r\n\r\n        const encryptedData = encryptedRecords[recordId];\r\n        if (encryptedData) {\r\n            const password = prompt(`🔓 Enter the password to decrypt this record:`);\r\n            if (password && password.trim()) {\r\n                try {\r\n                    const customEncryption = new EncryptionService();\r\n\r\n                    // For demo purposes, we'll try to decrypt with the provided password\r\n                    // In a real system, you'd verify the password against the stored hash\r\n                    const decryptedData = customEncryption.decryptData(encryptedData);\r\n                    const record = JSON.parse(decryptedData);\r\n\r\n                    alert(`🔓 DECRYPTION SUCCESSFUL!\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${myPatients.find(p => p.id === record.patientId)?.name || record.patientId}\r\n📅 Date: ${record.date}\r\n🩺 Diagnosis: ${record.diagnosis}\r\n💊 Prescription: ${record.prescription}\r\n📝 Description: ${record.description}\r\n\r\n🔒 Encryption Details:\r\n👨‍⚕️ Encrypted By: ${record.encryptedBy || 'Unknown'}\r\n📅 Encrypted At: ${record.encryptedAt ? new Date(record.encryptedAt).toLocaleString() : 'Unknown'}\r\n🛡️ Security: Password-protected AES-256`);\r\n\r\n                    // Ask if user wants to permanently decrypt\r\n                    const permanentDecrypt = window.confirm('🔓 Do you want to permanently decrypt this record? (This will remove encryption)');\r\n                    if (permanentDecrypt) {\r\n                        setEncryptedRecords(prev => {\r\n                            const updated = { ...prev };\r\n                            delete updated[recordId];\r\n                            return updated;\r\n                        });\r\n                        setRecordEncryptionStatus(prev => ({ ...prev, [recordId]: false }));\r\n                        alert('✅ Record has been permanently decrypted and is now in plain text.');\r\n                    }\r\n                } catch (error) {\r\n                    alert('❌ Decryption failed. Incorrect password or corrupted data.');\r\n                }\r\n            } else {\r\n                alert('❌ Password is required for decryption.');\r\n            }\r\n        } else {\r\n            alert('❌ No encrypted data found for this record.');\r\n        }\r\n    };\r\n\r\n    const handleViewRecord = (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (record) {\r\n            const isEncrypted = recordEncryptionStatus[recordId];\r\n            const patient = myPatients.find(p => p.id === record.patientId);\r\n\r\n            if (isEncrypted) {\r\n                const viewEncrypted = window.confirm(`🔒 This record is encrypted. \r\n\r\nDo you want to:\r\n- Click \"OK\" to view encrypted version\r\n- Click \"Cancel\" to decrypt and view`);\r\n\r\n                if (viewEncrypted) {\r\n                    // Show encrypted version\r\n                    alert(`🔒 ENCRYPTED RECORD VIEW\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${patient?.name || record.patientId}\r\n📅 Date: ${record.date}\r\n🔐 Status: ENCRYPTED\r\n🛡️ Security: Password Protected\r\n\r\n⚠️ Content is encrypted and cannot be displayed in plain text.\r\nUse the decrypt button to view the full content.`);\r\n                } else {\r\n                    // Trigger decryption process\r\n                    handleDecryptRecord(recordId);\r\n                }\r\n            } else {\r\n                // Show full record details\r\n                alert(`👁️ MEDICAL RECORD DETAILS\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${patient?.name || record.patientId}\r\n📧 Email: ${patient?.email || 'N/A'}\r\n📅 Date: ${record.date}\r\n🩺 Diagnosis: ${record.diagnosis}\r\n💊 Prescription: ${record.prescription}\r\n📝 Description: ${record.description}\r\n\r\n🔗 Blockchain Details:\r\n🧱 Hash: ${record.blockchainHash || 'N/A'}\r\n📎 IPFS: ${record.ipfsHash || 'N/A'}\r\n🎨 NFT Token: ${record.nftTokenId || 'Not minted'}\r\n✅ Verified: ${record.isVerified ? 'Yes' : 'No'}\r\n🔐 Encryption: Not encrypted`);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleClipboardMonitoring = () => {\r\n        const newState = !clipboardMonitoring;\r\n        setClipboardMonitoring(newState);\r\n        if (newState) {\r\n            alert('🔍 Clipboard monitoring enabled. The system will monitor for suspicious wallet addresses.');\r\n            // In a real application, you would start actual clipboard monitoring here\r\n        } else {\r\n            alert('⏹️ Clipboard monitoring disabled.');\r\n        }\r\n    };\r\n\r\n    const handleViewInsuranceClaim = (claimId: string) => {\r\n        const claim = insuranceClaims.find(c => c.id === claimId);\r\n        if (claim) {\r\n            const patient = myPatients.find(p => p.id === claim.patientId);\r\n            alert(`💰 Insurance Claim Details\r\n\r\n📋 Claim Number: ${claim.claimNumber}\r\n👤 Patient: ${patient?.name || claim.patientId}\r\n💵 Amount: $${claim.amount.toFixed(2)}\r\n📊 Status: ${claim.status.toUpperCase()}\r\n🏥 Insurance Provider: ${claim.insuranceProvider}\r\n📅 Submitted: ${claim.submissionDate}\r\n${claim.approvalDate ? `✅ Approved: ${claim.approvalDate}` : '⏳ Pending approval'}\r\n📝 Description: ${claim.description || 'No description provided'}\r\n\r\n🔗 Blockchain Details:\r\n📋 Contract Address: ${claim.smartContractAddress}\r\n🆔 Transaction ID: ${claim.blockchainTxId}\r\n⛓️ On-Chain Status: ${claim.isProcessedOnChain ? 'Processed' : 'Pending'}\r\n\r\n📄 Related Records: ${claim.relatedRecords.length} record(s)\r\n📎 Documents: ${claim.ipfsDocuments.length} file(s) on IPFS`);\r\n        }\r\n    };\r\n\r\n    const handleSaveRecord = () => {\r\n        if (!newRecordForm.title || !newRecordForm.patientId) {\r\n            alert('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        // Find patient details\r\n        const patient = myPatients.find(p => p.id === newRecordForm.patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        // Create new record with proper ID generation\r\n        const newRecord: MedicalRecord = {\r\n            id: sharedStateService.generateId('record'),\r\n            patientId: newRecordForm.patientId,\r\n            doctorId: user.id,\r\n            title: newRecordForm.title,\r\n            description: newRecordForm.description,\r\n            date: new Date().toISOString().split('T')[0], // Format as YYYY-MM-DD\r\n            diagnosis: newRecordForm.diagnosis,\r\n            prescription: newRecordForm.prescription,\r\n            isEncrypted: false, // Initially not encrypted\r\n            isVerified: true,\r\n            accessPermissions: [user.id, newRecordForm.patientId],\r\n            blockchainHash: `0x${Date.now().toString(16)}abc${Math.random().toString(16).slice(2, 8)}`,\r\n            ipfsHash: `Qm${Math.random().toString(36).slice(2, 15)}${Date.now().toString(36)}`,\r\n            nftTokenId: undefined // Will be set when NFT is minted\r\n        };\r\n\r\n        // Add to shared state (will automatically update all components)\r\n        sharedStateService.addMedicalRecord(newRecord);\r\n\r\n        // Show success message with patient name\r\n        alert(`✅ Medical record created successfully!\r\n\r\n📋 Record: ${newRecord.title}\r\n👤 Patient: ${patient.name}\r\n📅 Date: ${newRecord.date}\r\n🩺 Diagnosis: ${newRecord.diagnosis}\r\n💊 Prescription: ${newRecord.prescription}\r\n\r\nThe record has been added to your medical records list and is ready for encryption if needed.`);\r\n\r\n        setShowCreateRecordModal(false);\r\n        setNewRecordForm({\r\n            patientId: '',\r\n            title: '',\r\n            description: '',\r\n            diagnosis: '',\r\n            prescription: '',\r\n            notes: ''\r\n        });\r\n    };\r\n\r\n    const handleSaveClaim = () => {\r\n        if (!newClaimForm.amount || !newClaimForm.description) {\r\n            alert('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        // Create new insurance claim\r\n        // const newClaim: InsuranceClaim = {\r\n        //     id: `claim-${Date.now()}`,\r\n        //     claimNumber: `CLAIM-${Date.now()}`,\r\n        //     patientId: newClaimForm.patientId,\r\n        //     providerId: user.id,\r\n        //     doctorId: user.id,\r\n        //     insuranceCompany: newClaimForm.insuranceProvider,\r\n        //     insuranceProvider: newClaimForm.insuranceProvider,\r\n        //     amount: parseFloat(newClaimForm.amount),\r\n        //     status: 'pending',\r\n        //     submittedAt: new Date().toISOString(),\r\n        //     submissionDate: new Date().toLocaleDateString(),\r\n        //     description: newClaimForm.description,\r\n        //     relatedRecords: [],\r\n        //     smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n        //     blockchainTxId: `0x${Date.now().toString(16)}`,\r\n        //     isProcessedOnChain: false,\r\n        //     approvalSignatures: [],\r\n        //     ipfsDocuments: []\r\n        // };\r\n\r\n        alert('Insurance claim submitted successfully!');\r\n        setShowClaimModal(false);\r\n        setNewClaimForm({\r\n            patientId: '',\r\n            amount: '',\r\n            description: '',\r\n            insuranceProvider: ''\r\n        });\r\n    };\r\n\r\n    const getStatusColor = (status: string) => {\r\n        switch (status) {\r\n            case 'approved': return 'success';\r\n            case 'pending': return 'warning';\r\n            case 'rejected': return 'error';\r\n            case 'paid': return 'success';\r\n            case 'under_review': return 'info';\r\n            case 'submitted': return 'primary';\r\n            default: return 'secondary';\r\n        }\r\n    };\r\n\r\n    const handleDownloadPDF = async (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (!record) {\r\n            alert('Record not found');\r\n            return;\r\n        }\r\n\r\n        const patient = myPatients.find(p => p.id === record.patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Always download unencrypted PDF (encryption will be done in Security Tools)\r\n            await pdfService.downloadMedicalRecordPDF(record, patient, {\r\n                includeWatermark: true,\r\n                isEncrypted: false,\r\n                password: ''\r\n            });\r\n\r\n            alert(`✅ PDF Downloaded Successfully!\r\n\r\n📄 File: medical_record_${record.id}_${patient.name.replace(/\\s+/g, '_')}.pdf\r\n🔐 Status: UNENCRYPTED (ready for encryption in Security Tools)\r\n🚨 Watermark: CONFIDENTIAL (at top of document)\r\n👤 Patient: ${patient.name}\r\n📋 Record: ${record.title}\r\n\r\n💡 Next Steps:\r\n1. Go to Security Tools tab\r\n2. Select this PDF file to encrypt\r\n3. Choose a strong password for encryption\r\n\r\nThe PDF has been saved to your downloads folder.`);\r\n        } catch (error) {\r\n            console.error('PDF download error:', error);\r\n            alert(`❌ Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        }\r\n    };\r\n\r\n    const handleDownloadPatientPDF = async (patientId: string) => {\r\n        const patient = myPatients.find(p => p.id === patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        const patientRecords = recentRecords.filter(record => record.patientId === patientId);\r\n\r\n        if (patientRecords.length === 0) {\r\n            alert(`No medical records found for ${patient.name}. Create some records first.`);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (patientRecords.length === 1) {\r\n                // Single record\r\n                await pdfService.downloadMedicalRecordPDF(patientRecords[0], patient, {\r\n                    includeWatermark: true,\r\n                    isEncrypted: false,\r\n                    password: ''\r\n                });\r\n            } else {\r\n                // Multiple records - use batch PDF\r\n                const batchPDF = await pdfService.generateBatchPDF(patientRecords, [patient], {\r\n                    includeWatermark: true,\r\n                    isEncrypted: false,\r\n                    password: ''\r\n                });\r\n\r\n                // Create download link for batch PDF\r\n                const url = URL.createObjectURL(batchPDF);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n\r\n                const filename = `medical_records_${patient.name.replace(/\\s+/g, '_')}_batch.pdf`;\r\n                link.download = filename;\r\n\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            }\r\n\r\n            alert(`✅ PDF Downloaded Successfully!\r\n\r\n👤 Patient: ${patient.name}\r\n📄 Records: ${patientRecords.length} medical record(s)\r\n🔐 Status: UNENCRYPTED (ready for encryption in Security Tools)\r\n🚨 Watermark: CONFIDENTIAL (at top of document)\r\n\r\n💡 Next Steps:\r\n1. Go to Security Tools tab\r\n2. Select this PDF file to encrypt\r\n3. Choose a strong password for encryption\r\n\r\nThe PDF has been saved to your downloads folder.`);\r\n        } catch (error) {\r\n            console.error('PDF download error:', error);\r\n            alert(`❌ Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        }\r\n    };\r\n\r\n    const handleAddNewPatient = () => {\r\n        const patientName = prompt('👤 Enter new patient name:');\r\n        if (!patientName || !patientName.trim()) {\r\n            alert('❌ Patient name is required');\r\n            return;\r\n        }\r\n\r\n        const patientEmail = prompt('📧 Enter patient email:');\r\n        if (!patientEmail || !patientEmail.trim() || !patientEmail.includes('@')) {\r\n            alert('❌ Valid email is required');\r\n            return;\r\n        }\r\n\r\n        const patientDOB = prompt('🎂 Enter patient date of birth (YYYY-MM-DD):');\r\n        if (!patientDOB || !patientDOB.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\r\n            alert('❌ Date of birth is required in YYYY-MM-DD format');\r\n            return;\r\n        }\r\n\r\n        const phoneNumber = prompt('📞 Enter patient phone number:') || '';\r\n        const address = prompt('🏠 Enter patient address:') || '';\r\n        const emergencyContact = prompt('🚨 Enter emergency contact (Name - Phone):') || '';\r\n        const insuranceProvider = prompt('🏥 Enter insurance provider:') || 'None';\r\n        const insurancePolicyNumber = prompt('📄 Enter insurance policy number:') || '';\r\n\r\n        const newPatient: Patient = {\r\n            id: sharedStateService.generateId('patient'),\r\n            name: patientName.trim(),\r\n            email: patientEmail.trim(),\r\n            dateOfBirth: patientDOB,\r\n            phoneNumber: phoneNumber,\r\n            address: address,\r\n            emergencyContact: emergencyContact,\r\n            insuranceProvider: insuranceProvider,\r\n            insurancePolicyNumber: insurancePolicyNumber,\r\n            lastVisit: new Date().toISOString().split('T')[0],\r\n            upcomingAppointment: 'To be scheduled',\r\n            isActive: true\r\n        };\r\n\r\n        // Add to shared state\r\n        sharedStateService.addPatient(newPatient);\r\n\r\n        alert(`✅ New patient added successfully!\r\n\r\n👤 Name: ${newPatient.name}\r\n📧 Email: ${newPatient.email}\r\n🎂 DOB: ${newPatient.dateOfBirth}\r\n📞 Phone: ${newPatient.phoneNumber}\r\n🏥 Insurance: ${newPatient.insuranceProvider}\r\n\r\nThe patient is now available for creating medical records.`);\r\n    };\r\n\r\n    const handleViewNFT = (nftId: string) => {\r\n        const nft = nftRecords.find(n => n.id === nftId);\r\n        if (!nft) {\r\n            alert('❌ NFT not found. Please try again.');\r\n            return;\r\n        }\r\n\r\n        const patient = myPatients.find(p => p.id === nft.patientId);\r\n        const relatedRecord = recentRecords.find(r => r.id === nft.recordId);\r\n\r\n        alert(`🎨 NFT Health Record Details\r\n\r\n🏷️ Name: ${nft.name}\r\n📝 Description: ${nft.description}\r\n🆔 Token ID: ${nft.tokenId}\r\n👤 Patient: ${patient?.name || nft.patientId}\r\n📋 Related Record: ${relatedRecord?.title || nft.recordId}\r\n\r\n🔗 Blockchain Details:\r\n🌐 Network: ${nft.blockchainNetwork}\r\n📍 Contract Address: ${nft.contractAddress}\r\n👤 Current Owner: ${nft.currentOwner}\r\n📅 Mint Date: ${new Date(nft.mintDate).toLocaleString()}\r\n🔄 Transferable: ${nft.isTransferable ? 'Yes' : 'No'}\r\n🔐 Access Level: ${nft.accessLevel}\r\n\r\n📎 Metadata URI: ${nft.metadataUri}\r\n🖼️ Image URL: ${nft.imageUrl}\r\n\r\n✅ This NFT represents a verified medical record stored securely on the blockchain.\r\n🛡️ The NFT provides immutable proof of medical data authenticity.`);\r\n    };\r\n\r\n    // File encryption handlers\r\n    const handleFileSelection = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = event.target.files;\r\n        if (files) {\r\n            const pdfFiles = Array.from(files).filter(file => file.type === 'application/pdf');\r\n            if (pdfFiles.length !== files.length) {\r\n                alert('⚠️ Only PDF files are allowed. Non-PDF files have been filtered out.');\r\n            }\r\n            setSelectedFiles(prev => [...prev, ...pdfFiles]);\r\n        }\r\n    };\r\n\r\n    const removeSelectedFile = (index: number) => {\r\n        setSelectedFiles(prev => prev.filter((_, i) => i !== index));\r\n    };    const handleEncryptSelectedFiles = async () => {\r\n        if (selectedFiles.length === 0) {\r\n            alert('❌ Please select PDF files to encrypt first.');\r\n            return;\r\n        }\r\n\r\n        const password = prompt('🔒 Enter password to encrypt the selected PDF files:');\r\n        if (!password || !password.trim()) {\r\n            alert('❌ Password is required for encryption.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const encryptedFiles: { name: string; encryptedData: string }[] = [];\r\n            \r\n            for (const file of selectedFiles) {\r\n                // Read file as base64\r\n                const reader = new FileReader();\r\n                const fileData = await new Promise<string>((resolve) => {\r\n                    reader.onload = () => resolve(reader.result as string);\r\n                    reader.readAsDataURL(file);\r\n                });\r\n\r\n                // Encrypt the file data\r\n                const customEncryption = new EncryptionService();\r\n                const salt = customEncryption.generateSalt();\r\n                customEncryption.deriveKey(password, salt);\r\n                const encryptedData = customEncryption.encryptData(fileData);\r\n\r\n                encryptedFiles.push({\r\n                    name: file.name.replace('.pdf', '.enc'), // Change extension to .enc\r\n                    encryptedData: encryptedData\r\n                });\r\n            }\r\n\r\n            // Create download links for encrypted files\r\n            encryptedFiles.forEach(({ name, encryptedData }) => {\r\n                const blob = new Blob([encryptedData], { type: 'application/octet-stream' });\r\n                const url = URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.download = name;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            });\r\n\r\n            alert(`✅ Successfully encrypted and downloaded ${encryptedFiles.length} file(s)!\r\n\r\n🔐 Encryption Details:\r\n📄 Files: ${encryptedFiles.map(f => f.name).join(', ')}\r\n🛡️ Security: AES-256 with password protection\r\n📅 Encrypted: ${new Date().toLocaleString()}\r\n🔒 Format: .enc (encrypted files)\r\n\r\n⚠️ Remember your password - you'll need it to decrypt these .enc files!\r\n🔄 The encrypted .enc files have been downloaded to your computer.`);\r\n\r\n            // Clear selected files\r\n            setSelectedFiles([]);\r\n            \r\n            // Reset file input\r\n            const fileInput = document.getElementById('pdf-file-input') as HTMLInputElement;\r\n            if (fileInput) {\r\n                fileInput.value = '';\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('File encryption error:', error);\r\n            alert('❌ Failed to encrypt files. Please try again.');\r\n        }\r\n    };\r\n\r\n    // Encrypted file handlers\r\n    const handleEncryptedFileSelection = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = event.target.files;\r\n        if (files) {\r\n            const encFiles = Array.from(files).filter(file => file.name.endsWith('.enc'));\r\n            if (encFiles.length !== files.length) {\r\n                alert('⚠️ Only .enc files are allowed. Non-.enc files have been filtered out.');\r\n            }\r\n            setSelectedEncryptedFiles(prev => [...prev, ...encFiles]);\r\n        }\r\n    };\r\n\r\n    const removeSelectedEncryptedFile = (index: number) => {\r\n        setSelectedEncryptedFiles(prev => prev.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const handleDecryptSelectedFiles = async () => {\r\n        if (selectedEncryptedFiles.length === 0) {\r\n            alert('❌ Please select .enc files to decrypt first.');\r\n            return;\r\n        }\r\n\r\n        const password = prompt('🔓 Enter password to decrypt the selected .enc files:');\r\n        if (!password || !password.trim()) {\r\n            alert('❌ Password is required for decryption.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const decryptedFiles: { name: string; decryptedData: string }[] = [];\r\n            \r\n            for (const file of selectedEncryptedFiles) {\r\n                // Read encrypted file content\r\n                const reader = new FileReader();\r\n                const encryptedContent = await new Promise<string>((resolve) => {\r\n                    reader.onload = () => resolve(reader.result as string);\r\n                    reader.readAsText(file);\r\n                });\r\n\r\n                try {\r\n                    // Decrypt the file data\r\n                    const customEncryption = new EncryptionService();\r\n                    const decryptedData = customEncryption.decryptData(encryptedContent);\r\n\r\n                    decryptedFiles.push({\r\n                        name: file.name.replace('.enc', '.pdf'), // Change extension back to .pdf\r\n                        decryptedData: decryptedData\r\n                    });\r\n                } catch (decryptError) {\r\n                    alert(`❌ Failed to decrypt ${file.name}. Incorrect password or corrupted file.`);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (decryptedFiles.length === 0) {\r\n                alert('❌ No files were successfully decrypted. Please check your password.');\r\n                return;\r\n            }\r\n\r\n            // Create download links for decrypted files\r\n            decryptedFiles.forEach(({ name, decryptedData }) => {\r\n                // Convert base64 back to blob\r\n                const byteCharacters = atob(decryptedData.split(',')[1]);\r\n                const byteNumbers = new Array(byteCharacters.length);\r\n                for (let i = 0; i < byteCharacters.length; i++) {\r\n                    byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n                }\r\n                const byteArray = new Uint8Array(byteNumbers);\r\n                const blob = new Blob([byteArray], { type: 'application/pdf' });\r\n                \r\n                const url = URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.download = name;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            });\r\n\r\n            alert(`✅ Successfully decrypted and downloaded ${decryptedFiles.length} PDF file(s)!\r\n\r\n🔓 Decryption Details:\r\n📄 Files: ${decryptedFiles.map(f => f.name).join(', ')}\r\n🛡️ Security: Successfully decrypted with correct password\r\n📅 Decrypted: ${new Date().toLocaleString()}\r\n📄 Format: .pdf (original PDF files restored)\r\n\r\n✅ Your PDF files are now available and ready to use!\r\n🔄 The decrypted PDF files have been downloaded to your computer.`);\r\n\r\n            // Clear selected encrypted files\r\n            setSelectedEncryptedFiles([]);\r\n            \r\n            // Reset file input\r\n            const encFileInput = document.getElementById('enc-file-input') as HTMLInputElement;\r\n            if (encFileInput) {\r\n                encFileInput.value = '';\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('File decryption error:', error);\r\n            alert('❌ Failed to decrypt files. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50\">\r\n            {/* Header */}\r\n            <header className=\"bg-white shadow-sm border-b\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                    <div className=\"flex justify-between items-center h-16\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"flex-shrink-0\">\r\n                                <h1 className=\"text-xl font-bold text-gray-900\">🩺 Doctor Dashboard</h1>\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <Badge variant=\"success\" size=\"sm\">🔒 HIPAA Compliant</Badge>\r\n                                <Badge variant=\"primary\" size=\"sm\" className=\"ml-2\">👨‍⚕️ Medical Access</Badge>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center space-x-4\">\r\n                            <Timer\r\n                                duration={sessionTimeLeft}\r\n                                onExpire={handleSessionExpire}\r\n                                className=\"text-sm\"\r\n                            />\r\n\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <img\r\n                                    className=\"h-8 w-8 rounded-full\"\r\n                                    src={`https://ui-avatars.com/api/?name=${user.name}&background=2563eb&color=fff`}\r\n                                    alt={user.name}\r\n                                />\r\n                                <div className=\"text-sm\">\r\n                                    <div className=\"font-medium text-gray-900\">{user.name}</div>\r\n                                    <div className=\"text-blue-600 font-semibold\">{user.role.toUpperCase()}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button\r\n                                onClick={onLogout}\r\n                                className=\"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\"\r\n                            >\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            {/* Navigation Tabs */}\r\n            <div className=\"bg-white border-b\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                    <nav className=\"flex space-x-8\">\r\n                        {[\r\n                            { id: 'patients', label: '👥 My Patients', icon: '👥' },\r\n                            { id: 'records', label: '📋 Medical Records', icon: '📋' },\r\n                            { id: 'insurance', label: '💰 Insurance Claims', icon: '💰' },\r\n                            { id: 'nfts', label: '🎨 NFT Health Records', icon: '🎨' },\r\n                            { id: 'security', label: '🔒 Security Tools', icon: '🔒' }\r\n                        ].map((tab) => (\r\n                            <button\r\n                                key={tab.id}\r\n                                onClick={() => setActiveTab(tab.id as any)}\r\n                                className={`py-4 px-1 border-b-2 font-medium text-sm ${activeTab === tab.id\r\n                                    ? 'border-blue-500 text-blue-600'\r\n                                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                                    }`}\r\n                            >\r\n                                {tab.label}\r\n                            </button>\r\n                        ))}\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Main Content */}\r\n            <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n\r\n                {/* Patients Tab */}\r\n                {activeTab === 'patients' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">👥 My Patients</h3>\r\n                            <div className=\"flex items-center space-x-4\">\r\n                                <button\r\n                                    onClick={handleAddNewPatient}\r\n                                    className=\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\"\r\n                                >\r\n                                    + New Patient\r\n                                </button>\r\n                                <div className=\"text-sm text-gray-500\">\r\n                                    {myPatients.length} active patients\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"grid gap-6\">\r\n                                {myPatients.map((patient) => (\r\n                                    <div key={patient.id} className=\"border rounded-lg p-6 hover:shadow-md transition-shadow\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex items-center space-x-4\">\r\n                                                <img\r\n                                                    className=\"h-12 w-12 rounded-full\"\r\n                                                    src={`https://ui-avatars.com/api/?name=${patient.name}&background=random`}\r\n                                                    alt={patient.name}\r\n                                                />\r\n                                                <div>\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">{patient.name}</h4>\r\n                                                    <p className=\"text-sm text-gray-500\">{patient.email}</p>\r\n                                                    <p className=\"text-sm text-gray-500\">DOB: {patient.dateOfBirth}</p>\r\n                                                    <p className=\"text-sm text-gray-500\">Phone: {patient.phoneNumber}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <Badge variant=\"success\" size=\"sm\">Active</Badge>\r\n                                                <p className=\"text-sm text-gray-500 mt-2\">Last Visit: {patient.lastVisit}</p>\r\n                                                <p className=\"text-sm text-blue-600 font-medium\">Next: {patient.upcomingAppointment}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                            <div>\r\n                                                <p className=\"text-sm font-medium text-gray-900\">Insurance</p>\r\n                                                <p className=\"text-sm text-gray-500\">{patient.insuranceProvider}</p>\r\n                                                <p className=\"text-sm text-gray-400 font-mono\">{patient.insurancePolicyNumber}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-sm font-medium text-gray-900\">Emergency Contact</p>\r\n                                                <p className=\"text-sm text-gray-500\">{patient.emergencyContact}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"mt-4 flex space-x-3\">\r\n                                            <button\r\n                                                onClick={handleCreateRecord}\r\n                                                className=\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\"\r\n                                            >\r\n                                                📋 New Record\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleSubmitInsuranceClaim(patient.id)}\r\n                                                className=\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\"\r\n                                            >\r\n                                                💰 Submit Claim\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleViewHistory(patient.id)}\r\n                                                className=\"bg-gray-600 text-white px-4 py-2 rounded text-sm hover:bg-gray-700\"\r\n                                            >\r\n                                                👁️ View History\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleDownloadPatientPDF(patient.id)}\r\n                                                className=\"bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700\"\r\n                                            >\r\n                                                📄 Download Records\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Medical Records Tab */}\r\n                {activeTab === 'records' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">📋 Recent Medical Records</h3>\r\n                            <button\r\n                                onClick={handleCreateRecord}\r\n                                className=\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\"\r\n                            >\r\n                                + New Record\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"space-y-6\">\r\n                                {recentRecords.map((record) => (\r\n                                    <div key={record.id} className=\"border rounded-lg p-6\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">{record.title}</h4>\r\n                                                    {record.doctorId === user.id ? (\r\n                                                        <Badge variant=\"primary\" size=\"sm\">👨‍⚕️ Doctor Added</Badge>\r\n                                                    ) : (\r\n                                                        <Badge variant=\"info\" size=\"sm\">👤 Patient Added</Badge>\r\n                                                    )}\r\n                                                    {recordEncryptionStatus[record.id] ? (\r\n                                                        <Badge variant=\"warning\" size=\"sm\">🔒 ENCRYPTED</Badge>\r\n                                                    ) : (\r\n                                                        <Badge variant=\"success\" size=\"sm\">📄 Plain Text</Badge>\r\n                                                    )}\r\n                                                    <Badge variant=\"primary\" size=\"sm\">🧱 On-Chain</Badge>\r\n                                                    {record.nftTokenId && (\r\n                                                        <Badge variant=\"secondary\" size=\"sm\">🎨 NFT</Badge>\r\n                                                    )}\r\n                                                </div>\r\n                                                <p className=\"text-sm text-gray-600 mb-2\">{record.description}</p>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === record.patientId)?.name}</p>\r\n                                                        <p><span className=\"font-medium\">Date:</span> {record.date}</p>\r\n                                                        <p><span className=\"font-medium\">Diagnosis:</span> {record.diagnosis}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Prescription:</span> {record.prescription}</p>\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Blockchain:</span> {record.blockchainHash}</p>\r\n                                                        {record.ipfsHash && (\r\n                                                            <p className=\"font-mono text-xs\"><span className=\"font-medium\">IPFS:</span> {record.ipfsHash}</p>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"ml-4 flex flex-col space-y-2\">\r\n                                                {!record.nftTokenId && (\r\n                                                    <button\r\n                                                        onClick={() => handleMintNFT(record.id)}\r\n                                                        className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\"\r\n                                                    >\r\n                                                        🎨 Mint NFT\r\n                                                    </button>\r\n                                                )}\r\n                                                <button\r\n                                                    onClick={() => handleEncryptRecord(record.id)}\r\n                                                    className=\"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\"\r\n                                                >\r\n                                                    🔒 Encrypt\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDecryptRecord(record.id)}\r\n                                                    className=\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\"\r\n                                                >\r\n                                                    🔓 Decrypt\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleViewRecord(record.id)}\r\n                                                    className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\"\r\n                                                >\r\n                                                    👁️ View\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDownloadPDF(record.id)}\r\n                                                    className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\"\r\n                                                >\r\n                                                    📄 Download PDF\r\n                                                </button>\r\n                                                <button className=\"bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700\">\r\n                                                    ✏️ Edit\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Insurance Claims Tab */}\r\n                {activeTab === 'insurance' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">💰 Insurance Claims</h3>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"space-y-6\">\r\n                                {insuranceClaims.map((claim) => (\r\n                                    <div key={claim.id} className=\"border rounded-lg p-6\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">Claim #{claim.claimNumber}</h4>\r\n                                                    <Badge variant={getStatusColor(claim.status)} size=\"sm\">\r\n                                                        {claim.status.toUpperCase()}\r\n                                                    </Badge>\r\n                                                    {claim.isProcessedOnChain && (\r\n                                                        <Badge variant=\"primary\" size=\"sm\">🧱 On-Chain</Badge>\r\n                                                    )}\r\n                                                </div>\r\n                                                <p className=\"text-sm text-gray-600 mb-2\">{claim.description}</p>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === claim.patientId)?.name}</p>\r\n                                                        <p><span className=\"font-medium\">Amount:</span> ${claim.amount.toFixed(2)}</p>\r\n                                                        <p><span className=\"font-medium\">Submitted:</span> {claim.submissionDate}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Provider:</span> {claim.insuranceProvider}</p>\r\n                                                        {claim.approvalDate && (\r\n                                                            <p><span className=\"font-medium\">Approved:</span> {claim.approvalDate}</p>\r\n                                                        )}\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Contract:</span> {claim.smartContractAddress}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Tx ID:</span> {claim.blockchainTxId?.substring(0, 20)}...</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"ml-4\">\r\n                                                <button\r\n                                                    onClick={() => handleViewInsuranceClaim(claim.id)}\r\n                                                    className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\"\r\n                                                >\r\n                                                    👁️ View Details\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* NFT Health Records Tab */}\r\n                {activeTab === 'nfts' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">🎨 NFT Health Records</h3>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                                {nftRecords.map((nft) => (\r\n                                    <div key={nft.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                                        <div className=\"aspect-square bg-gradient-to-br from-blue-400 to-purple-500 rounded-lg mb-4 flex items-center justify-center\">\r\n                                            <span className=\"text-white text-4xl\">🏥</span>\r\n                                        </div>\r\n                                        <div className=\"space-y-2\">\r\n                                            <h4 className=\"font-medium text-gray-900\">{nft.name}</h4>\r\n                                            <p className=\"text-sm text-gray-600\">{nft.description}</p>\r\n                                            <div className=\"text-xs space-y-1\">\r\n                                                <p><span className=\"font-medium\">Token ID:</span> {nft.tokenId}</p>\r\n                                                <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === nft.patientId)?.name}</p>\r\n                                                <p><span className=\"font-medium\">Network:</span> {nft.blockchainNetwork}</p>\r\n                                                <p><span className=\"font-medium\">Minted:</span> {new Date(nft.mintDate).toLocaleDateString()}</p>\r\n                                                <p className=\"font-mono\"><span className=\"font-medium\">Contract:</span> {nft.contractAddress.substring(0, 10)}...</p>\r\n                                            </div>\r\n                                            <div className=\"flex items-center justify-between pt-2\">\r\n                                                <Badge variant=\"secondary\" size=\"sm\">\r\n                                                    {nft.isTransferable ? 'Transferable' : 'Non-Transferable'}\r\n                                                </Badge>\r\n                                                <div className=\"flex space-x-2\">\r\n                                                    <button\r\n                                                        onClick={() => handleViewNFT(nft.id)}\r\n                                                        className=\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700 font-medium\"\r\n                                                    >\r\n                                                        👁️ View NFT\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={() => {\r\n                                                            const relatedRecord = recentRecords.find(r => r.id === nft.recordId);\r\n                                                            if (relatedRecord) {\r\n                                                                handleDownloadPDF(relatedRecord.id);\r\n                                                            } else {\r\n                                                                alert('Related medical record not found');\r\n                                                            }\r\n                                                        }}\r\n                                                        className=\"bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700\"\r\n                                                    >\r\n                                                        📄 PDF\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Security Tools Tab */}\r\n                {activeTab === 'security' && (\r\n                    <div className=\"space-y-6\">\r\n                        <div className=\"bg-white shadow rounded-lg\">\r\n                            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                                <h3 className=\"text-lg font-medium text-gray-900\">🔒 Encryption & Security Tools</h3>\r\n                                <p className=\"text-sm text-gray-500 mt-1\">Secure patient records with advanced encryption</p>\r\n                            </div>\r\n                            <div className=\"p-6\">\r\n                                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                                    <div className=\"space-y-4\">\r\n                                        <h4 className=\"font-medium text-gray-900\">🔐 PDF File Encryption</h4>\r\n                                        <p className=\"text-sm text-gray-600\">Choose PDF files from your computer to encrypt</p>\r\n                                        <div className=\"space-y-4\">\r\n                                            <div className=\"p-4 border-2 border-dashed border-gray-300 rounded-lg bg-gray-50\">\r\n                                                <div className=\"text-center\">\r\n                                                    <span className=\"text-4xl mb-4 block\">🔒</span>\r\n                                                    <h5 className=\"font-medium text-gray-900 mb-2\">Encrypt PDF Files</h5>\r\n                                                    <p className=\"text-sm text-gray-600 mb-4\">Select PDF files from your computer to encrypt with password protection</p>\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        accept=\".pdf\"\r\n                                                        multiple\r\n                                                        onChange={handleFileSelection}\r\n                                                        className=\"hidden\"\r\n                                                        id=\"pdf-file-input\"\r\n                                                    />\r\n                                                    <label\r\n                                                        htmlFor=\"pdf-file-input\"\r\n                                                        className=\"bg-green-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-green-700 inline-block\"\r\n                                                    >\r\n                                                        📁 Choose PDF Files to Encrypt\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {selectedFiles.length > 0 && (\r\n                                                <div className=\"p-4 border rounded-lg bg-blue-50\">\r\n                                                    <h6 className=\"font-medium text-blue-900 mb-2\">Selected Files ({selectedFiles.length})</h6>\r\n                                                    <div className=\"space-y-2\">\r\n                                                        {selectedFiles.map((file, index) => (\r\n                                                            <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded\">\r\n                                                                <div className=\"flex items-center space-x-2\">\r\n                                                                    <span className=\"text-blue-600\">📄</span>\r\n                                                                    <span className=\"text-sm font-medium\">{file.name}</span>\r\n                                                                    <span className=\"text-xs text-gray-500\">({Math.round(file.size / 1024)} KB)</span>\r\n                                                                </div>\r\n                                                                <button\r\n                                                                    onClick={() => removeSelectedFile(index)}\r\n                                                                    className=\"text-red-600 hover:text-red-800 text-xs\"\r\n                                                                >\r\n                                                                    ❌ Remove\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                    <button\r\n                                                        onClick={handleEncryptSelectedFiles}\r\n                                                        className=\"w-full mt-3 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n                                                    >\r\n                                                        🔒 Encrypt Selected Files\r\n                                                    </button>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            <div className=\"p-4 border rounded-lg bg-orange-50\">\r\n                                                <h6 className=\"font-medium text-orange-900 mb-2\">📋 PDF Encryption/Decryption Workflow</h6>\r\n                                                <p className=\"text-sm text-orange-700 mb-3\">\r\n                                                    🔒 <strong>Encryption:</strong> PDF → .enc (encrypted file)<br />\r\n                                                    🔓 <strong>Decryption:</strong> .enc → PDF (original file)<br />\r\n                                                    💡 Export PDFs from Medical Records, then encrypt here\r\n                                                </p>\r\n                                                <button\r\n                                                    onClick={() => setActiveTab('records')}\r\n                                                    className=\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\"\r\n                                                >\r\n                                                    📋 Go to Medical Records\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"space-y-4\">\r\n                                        <h4 className=\"font-medium text-gray-900\">� PDF File Decryption</h4>\r\n                                        <p className=\"text-sm text-gray-600\">Choose encrypted (.enc) files from your computer to decrypt</p>\r\n                                        <div className=\"space-y-4\">\r\n                                            <div className=\"p-4 border-2 border-dashed border-orange-300 rounded-lg bg-orange-50\">\r\n                                                <div className=\"text-center\">\r\n                                                    <span className=\"text-4xl mb-4 block\">🔓</span>\r\n                                                    <h5 className=\"font-medium text-gray-900 mb-2\">Decrypt Encrypted Files</h5>\r\n                                                    <p className=\"text-sm text-gray-600 mb-4\">Select .enc files from your computer to decrypt with password</p>\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        accept=\".enc\"\r\n                                                        multiple\r\n                                                        onChange={handleEncryptedFileSelection}\r\n                                                        className=\"hidden\"\r\n                                                        id=\"enc-file-input\"\r\n                                                    />\r\n                                                    <label\r\n                                                        htmlFor=\"enc-file-input\"\r\n                                                        className=\"bg-orange-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-orange-700 inline-block\"\r\n                                                    >\r\n                                                        📁 Choose .enc Files to Decrypt\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {selectedEncryptedFiles.length > 0 && (\r\n                                                <div className=\"p-4 border rounded-lg bg-orange-50\">\r\n                                                    <h6 className=\"font-medium text-orange-900 mb-2\">Selected Encrypted Files ({selectedEncryptedFiles.length})</h6>\r\n                                                    <div className=\"space-y-2\">\r\n                                                        {selectedEncryptedFiles.map((file, index) => (\r\n                                                            <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded\">\r\n                                                                <div className=\"flex items-center space-x-2\">\r\n                                                                    <span className=\"text-orange-600\">🔒</span>\r\n                                                                    <span className=\"text-sm font-medium\">{file.name}</span>\r\n                                                                    <span className=\"text-xs text-gray-500\">({Math.round(file.size / 1024)} KB)</span>\r\n                                                                </div>\r\n                                                                <button\r\n                                                                    onClick={() => removeSelectedEncryptedFile(index)}\r\n                                                                    className=\"text-red-600 hover:text-red-800 text-xs\"\r\n                                                                >\r\n                                                                    ❌ Remove\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                    <button\r\n                                                        onClick={handleDecryptSelectedFiles}\r\n                                                        className=\"w-full mt-3 bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700\"\r\n                                                    >\r\n                                                        � Decrypt Selected Files\r\n                                                    </button>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n\r\n                                        <h4 className=\"font-medium text-gray-900\">📋 Clipboard Security</h4>\r\n                                        <p className=\"text-sm text-gray-600\">Monitor clipboard for suspicious wallet addresses</p>\r\n                                        <div className=\"p-4 border rounded-lg\">\r\n                                            <div className=\"flex items-center justify-between mb-3\">\r\n                                                <span className=\"text-sm font-medium\">Clipboard Monitoring</span>\r\n                                                <Badge variant={clipboardMonitoring ? 'success' : 'secondary'} size=\"sm\">\r\n                                                    {clipboardMonitoring ? 'Active' : 'Inactive'}\r\n                                                </Badge>\r\n                                            </div>\r\n                                            <button\r\n                                                onClick={toggleClipboardMonitoring}\r\n                                                className={`w-full px-4 py-2 rounded text-sm ${clipboardMonitoring\r\n                                                    ? 'bg-red-600 hover:bg-red-700 text-white'\r\n                                                    : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n                                                    }`}\r\n                                            >\r\n                                                {clipboardMonitoring ? '⏹️ Stop Monitoring' : '🔍 Start Monitoring'}\r\n                                            </button>\r\n                                            <div className=\"mt-3 text-xs text-gray-500\">\r\n                                                <p>• Detects cryptocurrency wallet addresses</p>\r\n                                                <p>• Alerts on suspicious clipboard activity</p>\r\n                                                <p>• Protects against clipboard hijacking</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                                    <div className=\"flex items-start\">\r\n                                        <span className=\"text-yellow-600 text-lg mr-2\">⚠️</span>\r\n                                        <div>\r\n                                            <h5 className=\"font-medium text-yellow-800\">Security Notice</h5>\r\n                                            <p className=\"text-sm text-yellow-700 mt-1\">\r\n                                                Always ensure patient records are encrypted before transmission.\r\n                                                Use blockchain verification for data integrity and monitor for suspicious activities.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </main>\r\n\r\n            {/* Create Record Modal */}\r\n            {showCreateRecordModal && (\r\n                <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n                    <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\r\n                        <div className=\"mt-3\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New Medical Record</h3>\r\n                            <div className=\"space-y-4\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Patient</label>\r\n                                    <select\r\n                                        value={newRecordForm.patientId}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, patientId: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                    >\r\n                                        <option value=\"\">Select Patient</option>\r\n                                        {myPatients.map((patient) => (\r\n                                            <option key={patient.id} value={patient.id}>{patient.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Title</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newRecordForm.title}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, title: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"Record title\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Diagnosis</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newRecordForm.diagnosis}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, diagnosis: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"Diagnosis\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Prescription</label>\r\n                                    <textarea\r\n                                        value={newRecordForm.prescription}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, prescription: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        rows={3}\r\n                                        placeholder=\"Prescription details\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n                                    <textarea\r\n                                        value={newRecordForm.description}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, description: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        rows={3}\r\n                                        placeholder=\"Additional notes\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex justify-end space-x-3 mt-6\">\r\n                                <button\r\n                                    onClick={() => setShowCreateRecordModal(false)}\r\n                                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    onClick={handleSaveRecord}\r\n                                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n                                >\r\n                                    Create Record\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Insurance Claim Modal */}\r\n            {showClaimModal && (\r\n                <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n                    <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\r\n                        <div className=\"mt-3\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Submit Insurance Claim</h3>\r\n                            <div className=\"space-y-4\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Patient</label>\r\n                                    <select\r\n                                        value={newClaimForm.patientId}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, patientId: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                    >\r\n                                        <option value=\"\">Select Patient</option>\r\n                                        {myPatients.map((patient) => (\r\n                                            <option key={patient.id} value={patient.id}>{patient.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Insurance Provider</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newClaimForm.insuranceProvider}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, insuranceProvider: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"Insurance company name\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Claim Amount ($)</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={newClaimForm.amount}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, amount: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"0.00\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n                                    <textarea\r\n                                        value={newClaimForm.description}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, description: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        rows={4}\r\n                                        placeholder=\"Claim description and details\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex justify-end space-x-3 mt-6\">\r\n                                <button\r\n                                    onClick={() => setShowClaimModal(false)}\r\n                                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    onClick={handleSaveClaim}\r\n                                    className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\r\n                                >\r\n                                    Submit Claim\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}