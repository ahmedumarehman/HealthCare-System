{"ast":null,"code":"import _objectSpread from\"D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import Badge from'../UI/Badge';import Timer from'../UI/Timer';import{RoleBasedAccessService}from'../../services/rbacService';import{EncryptionService}from'../../services/encryption';import{sharedStateService}from'../../services/sharedState';import{pdfService}from'../../services/pdfService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DoctorDashboard=_ref=>{let{user,onLogout}=_ref;const[sessionTimeLeft]=useState(1800);const[rbacService]=useState(new RoleBasedAccessService());const[activeTab,setActiveTab]=useState('patients');// Modal states\nconst[showCreateRecordModal,setShowCreateRecordModal]=useState(false);const[showClaimModal,setShowClaimModal]=useState(false);const[,setSelectedPatientId]=useState('');// Security states\nconst[clipboardMonitoring,setClipboardMonitoring]=useState(false);const[encryptedRecords,setEncryptedRecords]=useState({});const[recordEncryptionStatus,setRecordEncryptionStatus]=useState({});// Form states\nconst[newRecordForm,setNewRecordForm]=useState({patientId:'',title:'',description:'',diagnosis:'',prescription:'',notes:''});const[newClaimForm,setNewClaimForm]=useState({patientId:'',amount:'',description:'',insuranceProvider:''});const[myPatients,setMyPatients]=useState([]);const[recentRecords,setRecentRecords]=useState([]);// Initialize data from shared state service\nuseEffect(()=>{const patients=sharedStateService.getPatients();const records=sharedStateService.getMedicalRecordsByDoctor(user.id);setMyPatients(patients);setRecentRecords(records);// Subscribe to changes\nconst unsubscribePatients=sharedStateService.onPatientsChange(setMyPatients);const unsubscribeRecords=sharedStateService.onMedicalRecordsChange(allRecords=>{const doctorRecords=allRecords.filter(record=>record.doctorId===user.id);setRecentRecords(doctorRecords);});return()=>{unsubscribePatients();unsubscribeRecords();};},[user.id]);const[insuranceClaims]=useState([{id:'claim-1',claimNumber:'CLM-2025-001',patientId:'patient-1',providerId:user.id,doctorId:user.id,insuranceCompany:'HealthFirst Insurance',insuranceProvider:'HealthFirst Insurance',amount:450.00,status:'approved',submittedAt:'2025-07-01T10:00:00Z',submissionDate:'2025-07-01',approvalDate:'2025-07-03',description:'Annual physical examination and blood work',relatedRecords:['record-1'],smartContractAddress:'0x1234567890abcdef1234567890abcdef12345678',blockchainTxId:'0xabc123def456789abcdef123456789abc123def456789abcdef',isProcessedOnChain:true,approvalSignatures:[],ipfsDocuments:[]},{id:'claim-2',claimNumber:'CLM-2025-002',patientId:'patient-2',providerId:user.id,doctorId:user.id,insuranceCompany:'MediCare Plus',insuranceProvider:'MediCare Plus',amount:275.50,status:'pending',submittedAt:'2025-07-04T14:30:00Z',submissionDate:'2025-07-04',description:'Follow-up consultation and medication review',relatedRecords:['record-2'],smartContractAddress:'0x1234567890abcdef1234567890abcdef12345678',blockchainTxId:'0xdef456abc789123def456abc789123def456abc789123def',isProcessedOnChain:false,approvalSignatures:[],ipfsDocuments:[]}]);const[nftRecords]=useState([{id:'nft-1',tokenId:'HEALTH-NFT-001',patientId:'patient-1',recordId:'record-1',name:'Annual Physical 2025',description:'Comprehensive health examination record',imageUrl:'https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=NFT-001',metadataUri:'ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP',contractAddress:'0x9876543210fedcba9876543210fedcba98765432',blockchainNetwork:'Ethereum',mintDate:'2025-07-04T10:30:00Z',currentOwner:'patient-1',isTransferable:false,accessLevel:'doctor_patient'},{id:'nft-2',tokenId:'HEALTH-NFT-002',patientId:'patient-2',recordId:'record-2',name:'Follow-up Consultation',description:'Treatment follow-up and medication adjustment',imageUrl:'https://via.placeholder.com/200x200/059669/FFFFFF?text=NFT-002',metadataUri:'ipfs://QmY8AX6sRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0nQ',contractAddress:'0x9876543210fedcba9876543210fedcba98765432',blockchainNetwork:'Ethereum',mintDate:'2025-07-03T14:45:00Z',currentOwner:'patient-2',isTransferable:false,accessLevel:'doctor_patient'}]);useEffect(()=>{rbacService.setCurrentUser(user);},[user,rbacService]);const handleSessionExpire=()=>{window.confirm('Session expired for security. Please login again.')&&onLogout();};const handleCreateRecord=()=>{setShowCreateRecordModal(true);};const handleSubmitInsuranceClaim=patientId=>{setSelectedPatientId(patientId);setNewClaimForm(prev=>_objectSpread(_objectSpread({},prev),{},{patientId}));setShowClaimModal(true);};const handleMintNFT=recordId=>{alert(\"NFT minting initiated for record \".concat(recordId,\". This will create a secure, immutable NFT on the blockchain.\"));console.log(\"Minting NFT for record: \".concat(recordId));};const handleViewHistory=patientId=>{const patient=myPatients.find(p=>p.id===patientId);const patientRecords=recentRecords.filter(record=>record.patientId===patientId);if(patient&&patientRecords.length>0){const historyDetails=patientRecords.map(record=>\"\\uD83D\\uDCCB \".concat(record.title,\" (\").concat(record.date,\")\\n   Diagnosis: \").concat(record.diagnosis,\"\\n   Prescription: \").concat(record.prescription)).join('\\n\\n');alert(\"\\uD83D\\uDC65 Medical History for \".concat(patient.name,\"\\n\\uD83D\\uDCE7 Email: \").concat(patient.email,\"\\n\\uD83C\\uDF82 DOB: \").concat(patient.dateOfBirth,\"\\n\\uD83C\\uDFE5 Insurance: \").concat(patient.insuranceProvider,\"\\n\\uD83D\\uDCDE Phone: \").concat(patient.phoneNumber,\"\\n\\uD83C\\uDFE0 Address: \").concat(patient.address,\"\\n\\uD83D\\uDEA8 Emergency Contact: \").concat(patient.emergencyContact,\"\\n\\uD83D\\uDCC5 Last Visit: \").concat(patient.lastVisit,\"\\n\\u23ED\\uFE0F Next Appointment: \").concat(patient.upcomingAppointment,\"\\n\\n\\uD83D\\uDCCB MEDICAL RECORDS:\\n\").concat(historyDetails,\"\\n\\nTotal Records: \").concat(patientRecords.length));}else{alert(\"No medical history found for this patient.\");}};const handleEncryptRecord=recordId=>{const record=recentRecords.find(r=>r.id===recordId);if(record){var _myPatients$find;// Check if already encrypted\nif(recordEncryptionStatus[recordId]){alert('⚠️ This record is already encrypted. Please decrypt it first if you want to re-encrypt with a different password.');return;}const password=prompt(\"\\uD83D\\uDD12 Enter a password to encrypt \\\"\".concat(record.title,\"\\\" for patient: \").concat(((_myPatients$find=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find===void 0?void 0:_myPatients$find.name)||record.patientId));if(password&&password.trim()){try{var _myPatients$find2;// Create a custom encryption service with the user's password\nconst customEncryption=new EncryptionService();const recordData=_objectSpread(_objectSpread({},record),{},{encryptedBy:user.name,encryptedAt:new Date().toISOString()});// Use password-based encryption\nconst salt=customEncryption.generateSalt();customEncryption.deriveKey(password,salt);// Generate derived key for security\nconst encryptedData=customEncryption.encryptData(JSON.stringify(recordData));// Store the encrypted data and metadata\nsetEncryptedRecords(prev=>_objectSpread(_objectSpread({},prev),{},{[recordId]:encryptedData}));setRecordEncryptionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[recordId]:true}));alert(\"\\uD83D\\uDD12 SUCCESS! Record \\\"\".concat(record.title,\"\\\" has been encrypted with your custom password.\\n                    \\n\\uD83D\\uDCCB Record: \").concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat((_myPatients$find2=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find2===void 0?void 0:_myPatients$find2.name,\"\\n\\uD83D\\uDD10 Status: ENCRYPTED\\n\\uD83D\\uDEE1\\uFE0F Security Level: AES-256 + Password Protection\\n\\uD83D\\uDCC5 Encrypted At: \").concat(new Date().toLocaleString(),\"\\n\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Encrypted By: \").concat(user.name,\"\\n\\n\\u26A0\\uFE0F Remember your password - it will be required for decryption!\"));}catch(error){alert('❌ Encryption failed. Please try again.');}}else{alert('❌ Password is required for encryption.');}}};const handleDecryptRecord=recordId=>{// Check if record is encrypted\nif(!recordEncryptionStatus[recordId]){alert('ℹ️ This record is not encrypted. No decryption needed.');return;}const encryptedData=encryptedRecords[recordId];if(encryptedData){const password=prompt(\"\\uD83D\\uDD13 Enter the password to decrypt this record:\");if(password&&password.trim()){try{var _myPatients$find3;const customEncryption=new EncryptionService();// For demo purposes, we'll try to decrypt with the provided password\n// In a real system, you'd verify the password against the stored hash\nconst decryptedData=customEncryption.decryptData(encryptedData);const record=JSON.parse(decryptedData);alert(\"\\uD83D\\uDD13 DECRYPTION SUCCESSFUL!\\n\\n\\uD83D\\uDCCB Title: \".concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat(((_myPatients$find3=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find3===void 0?void 0:_myPatients$find3.name)||record.patientId,\"\\n\\uD83D\\uDCC5 Date: \").concat(record.date,\"\\n\\uD83E\\uDE7A Diagnosis: \").concat(record.diagnosis,\"\\n\\uD83D\\uDC8A Prescription: \").concat(record.prescription,\"\\n\\uD83D\\uDCDD Description: \").concat(record.description,\"\\n\\n\\uD83D\\uDD12 Encryption Details:\\n\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Encrypted By: \").concat(record.encryptedBy||'Unknown',\"\\n\\uD83D\\uDCC5 Encrypted At: \").concat(record.encryptedAt?new Date(record.encryptedAt).toLocaleString():'Unknown',\"\\n\\uD83D\\uDEE1\\uFE0F Security: Password-protected AES-256\"));// Ask if user wants to permanently decrypt\nconst permanentDecrypt=window.confirm('🔓 Do you want to permanently decrypt this record? (This will remove encryption)');if(permanentDecrypt){setEncryptedRecords(prev=>{const updated=_objectSpread({},prev);delete updated[recordId];return updated;});setRecordEncryptionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[recordId]:false}));alert('✅ Record has been permanently decrypted and is now in plain text.');}}catch(error){alert('❌ Decryption failed. Incorrect password or corrupted data.');}}else{alert('❌ Password is required for decryption.');}}else{alert('❌ No encrypted data found for this record.');}};const handleViewRecord=recordId=>{const record=recentRecords.find(r=>r.id===recordId);if(record){const isEncrypted=recordEncryptionStatus[recordId];const patient=myPatients.find(p=>p.id===record.patientId);if(isEncrypted){const viewEncrypted=window.confirm(\"\\uD83D\\uDD12 This record is encrypted. \\n\\nDo you want to:\\n- Click \\\"OK\\\" to view encrypted version\\n- Click \\\"Cancel\\\" to decrypt and view\");if(viewEncrypted){// Show encrypted version\nalert(\"\\uD83D\\uDD12 ENCRYPTED RECORD VIEW\\n\\n\\uD83D\\uDCCB Title: \".concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||record.patientId,\"\\n\\uD83D\\uDCC5 Date: \").concat(record.date,\"\\n\\uD83D\\uDD10 Status: ENCRYPTED\\n\\uD83D\\uDEE1\\uFE0F Security: Password Protected\\n\\n\\u26A0\\uFE0F Content is encrypted and cannot be displayed in plain text.\\nUse the decrypt button to view the full content.\"));}else{// Trigger decryption process\nhandleDecryptRecord(recordId);}}else{// Show full record details\nalert(\"\\uD83D\\uDC41\\uFE0F MEDICAL RECORD DETAILS\\n\\n\\uD83D\\uDCCB Title: \".concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||record.patientId,\"\\n\\uD83D\\uDCE7 Email: \").concat((patient===null||patient===void 0?void 0:patient.email)||'N/A',\"\\n\\uD83D\\uDCC5 Date: \").concat(record.date,\"\\n\\uD83E\\uDE7A Diagnosis: \").concat(record.diagnosis,\"\\n\\uD83D\\uDC8A Prescription: \").concat(record.prescription,\"\\n\\uD83D\\uDCDD Description: \").concat(record.description,\"\\n\\n\\uD83D\\uDD17 Blockchain Details:\\n\\uD83E\\uDDF1 Hash: \").concat(record.blockchainHash||'N/A',\"\\n\\uD83D\\uDCCE IPFS: \").concat(record.ipfsHash||'N/A',\"\\n\\uD83C\\uDFA8 NFT Token: \").concat(record.nftTokenId||'Not minted',\"\\n\\u2705 Verified: \").concat(record.isVerified?'Yes':'No',\"\\n\\uD83D\\uDD10 Encryption: Not encrypted\"));}}};const toggleClipboardMonitoring=()=>{const newState=!clipboardMonitoring;setClipboardMonitoring(newState);if(newState){alert('🔍 Clipboard monitoring enabled. The system will monitor for suspicious wallet addresses.');// In a real application, you would start actual clipboard monitoring here\n}else{alert('⏹️ Clipboard monitoring disabled.');}};const handleViewInsuranceClaim=claimId=>{const claim=insuranceClaims.find(c=>c.id===claimId);if(claim){const patient=myPatients.find(p=>p.id===claim.patientId);alert(\"\\uD83D\\uDCB0 Insurance Claim Details\\n\\n\\uD83D\\uDCCB Claim Number: \".concat(claim.claimNumber,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||claim.patientId,\"\\n\\uD83D\\uDCB5 Amount: $\").concat(claim.amount.toFixed(2),\"\\n\\uD83D\\uDCCA Status: \").concat(claim.status.toUpperCase(),\"\\n\\uD83C\\uDFE5 Insurance Provider: \").concat(claim.insuranceProvider,\"\\n\\uD83D\\uDCC5 Submitted: \").concat(claim.submissionDate,\"\\n\").concat(claim.approvalDate?\"\\u2705 Approved: \".concat(claim.approvalDate):'⏳ Pending approval',\"\\n\\uD83D\\uDCDD Description: \").concat(claim.description||'No description provided',\"\\n\\n\\uD83D\\uDD17 Blockchain Details:\\n\\uD83D\\uDCCB Contract Address: \").concat(claim.smartContractAddress,\"\\n\\uD83C\\uDD94 Transaction ID: \").concat(claim.blockchainTxId,\"\\n\\u26D3\\uFE0F On-Chain Status: \").concat(claim.isProcessedOnChain?'Processed':'Pending',\"\\n\\n\\uD83D\\uDCC4 Related Records: \").concat(claim.relatedRecords.length,\" record(s)\\n\\uD83D\\uDCCE Documents: \").concat(claim.ipfsDocuments.length,\" file(s) on IPFS\"));}};const handleSaveRecord=()=>{if(!newRecordForm.title||!newRecordForm.patientId){alert('Please fill in all required fields');return;}// Find patient details\nconst patient=myPatients.find(p=>p.id===newRecordForm.patientId);if(!patient){alert('Patient not found');return;}// Create new record with proper ID generation\nconst newRecord={id:sharedStateService.generateId('record'),patientId:newRecordForm.patientId,doctorId:user.id,title:newRecordForm.title,description:newRecordForm.description,date:new Date().toISOString().split('T')[0],// Format as YYYY-MM-DD\ndiagnosis:newRecordForm.diagnosis,prescription:newRecordForm.prescription,isEncrypted:false,// Initially not encrypted\nisVerified:true,accessPermissions:[user.id,newRecordForm.patientId],blockchainHash:\"0x\".concat(Date.now().toString(16),\"abc\").concat(Math.random().toString(16).slice(2,8)),ipfsHash:\"Qm\".concat(Math.random().toString(36).slice(2,15)).concat(Date.now().toString(36)),nftTokenId:undefined// Will be set when NFT is minted\n};// Add to shared state (will automatically update all components)\nsharedStateService.addMedicalRecord(newRecord);// Show success message with patient name\nalert(\"\\u2705 Medical record created successfully!\\n\\n\\uD83D\\uDCCB Record: \".concat(newRecord.title,\"\\n\\uD83D\\uDC64 Patient: \").concat(patient.name,\"\\n\\uD83D\\uDCC5 Date: \").concat(newRecord.date,\"\\n\\uD83E\\uDE7A Diagnosis: \").concat(newRecord.diagnosis,\"\\n\\uD83D\\uDC8A Prescription: \").concat(newRecord.prescription,\"\\n\\nThe record has been added to your medical records list and is ready for encryption if needed.\"));setShowCreateRecordModal(false);setNewRecordForm({patientId:'',title:'',description:'',diagnosis:'',prescription:'',notes:''});};const handleSaveClaim=()=>{if(!newClaimForm.amount||!newClaimForm.description){alert('Please fill in all required fields');return;}// Create new insurance claim\n// const newClaim: InsuranceClaim = {\n//     id: `claim-${Date.now()}`,\n//     claimNumber: `CLAIM-${Date.now()}`,\n//     patientId: newClaimForm.patientId,\n//     providerId: user.id,\n//     doctorId: user.id,\n//     insuranceCompany: newClaimForm.insuranceProvider,\n//     insuranceProvider: newClaimForm.insuranceProvider,\n//     amount: parseFloat(newClaimForm.amount),\n//     status: 'pending',\n//     submittedAt: new Date().toISOString(),\n//     submissionDate: new Date().toLocaleDateString(),\n//     description: newClaimForm.description,\n//     relatedRecords: [],\n//     smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\n//     blockchainTxId: `0x${Date.now().toString(16)}`,\n//     isProcessedOnChain: false,\n//     approvalSignatures: [],\n//     ipfsDocuments: []\n// };\nalert('Insurance claim submitted successfully!');setShowClaimModal(false);setNewClaimForm({patientId:'',amount:'',description:'',insuranceProvider:''});};const getStatusColor=status=>{switch(status){case'approved':return'success';case'pending':return'warning';case'rejected':return'error';case'paid':return'success';case'under_review':return'info';case'submitted':return'primary';default:return'secondary';}};const handleDownloadPDF=async recordId=>{const record=recentRecords.find(r=>r.id===recordId);if(!record){alert('Record not found');return;}const patient=myPatients.find(p=>p.id===record.patientId);if(!patient){alert('Patient not found');return;}try{const wantEncryption=window.confirm(\"\\uD83D\\uDD10 PDF Download Options\\n\\nRecord: \".concat(record.title,\"\\nPatient: \").concat(patient.name,\"\\n\\nDo you want to:\\n\\u2022 Click \\\"OK\\\" to download an ENCRYPTED PDF (password protected)\\n\\u2022 Click \\\"Cancel\\\" to download a regular PDF\\n\\nNote: The PDF will include a large \\\"CONFIDENTIAL\\\" watermark at the top.\"));let password='';if(wantEncryption){password=prompt('🔒 Enter password for PDF encryption:')||'';if(!password.trim()){alert('❌ Password is required for encryption');return;}}// Download the PDF\nawait pdfService.downloadMedicalRecordPDF(record,patient,{includeWatermark:true,isEncrypted:wantEncryption,password:password});const encryptionStatus=wantEncryption?'ENCRYPTED':'UNENCRYPTED';alert(\"\\u2705 PDF Downloaded Successfully!\\n\\n\\uD83D\\uDCC4 File: medical_record_\".concat(record.id,\"_\").concat(patient.name.replace(/\\s+/g,'_')).concat(wantEncryption?'_encrypted':'',\".pdf\\n\\uD83D\\uDD10 Status: \").concat(encryptionStatus,\"\\n\\uD83D\\uDEA8 Watermark: CONFIDENTIAL (at top of document)\\n\\uD83D\\uDC64 Patient: \").concat(patient.name,\"\\n\\uD83D\\uDCCB Record: \").concat(record.title,\"\\n\\n\").concat(wantEncryption?'⚠️ Remember your password - you\\'ll need it to view the encrypted content!':'',\"\\n\\nThe PDF has been saved to your downloads folder.\"));}catch(error){console.error('PDF download error:',error);alert(\"\\u274C Failed to download PDF: \".concat(error instanceof Error?error.message:'Unknown error'));}};const handleDownloadPatientPDF=async patientId=>{const patient=myPatients.find(p=>p.id===patientId);if(!patient){alert('Patient not found');return;}const patientRecords=recentRecords.filter(record=>record.patientId===patientId);if(patientRecords.length===0){alert(\"No medical records found for \".concat(patient.name,\". Create some records first.\"));return;}try{const wantEncryption=window.confirm(\"\\uD83D\\uDD10 PDF Download Options for \".concat(patient.name,\"\\n\\nTotal Records: \").concat(patientRecords.length,\"\\n\\nDo you want to:\\n\\u2022 Click \\\"OK\\\" to download an ENCRYPTED PDF (password protected)\\n\\u2022 Click \\\"Cancel\\\" to download a regular PDF\\n\\nNote: The PDF will include a large \\\"CONFIDENTIAL\\\" watermark at the top.\"));let password='';if(wantEncryption){password=prompt('🔒 Enter password for PDF encryption:')||'';if(!password.trim()){alert('❌ Password is required for encryption');return;}}if(patientRecords.length===1){// Single record\nawait pdfService.downloadMedicalRecordPDF(patientRecords[0],patient,{includeWatermark:true,isEncrypted:wantEncryption,password:password});}else{// Multiple records - use batch PDF\nconst batchPDF=await pdfService.generateBatchPDF(patientRecords,[patient],{includeWatermark:true,isEncrypted:wantEncryption,password:password});// Create download link for batch PDF\nconst url=URL.createObjectURL(batchPDF);const link=document.createElement('a');link.href=url;const encryptionSuffix=wantEncryption?'_encrypted':'';const filename=\"medical_records_\".concat(patient.name.replace(/\\s+/g,'_'),\"_batch\").concat(encryptionSuffix,\".pdf\");link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);}const encryptionStatus=wantEncryption?'ENCRYPTED':'UNENCRYPTED';alert(\"\\u2705 PDF Downloaded Successfully!\\n\\n\\uD83D\\uDC64 Patient: \".concat(patient.name,\"\\n\\uD83D\\uDCC4 Records: \").concat(patientRecords.length,\" medical record(s)\\n\\uD83D\\uDD10 Status: \").concat(encryptionStatus,\"\\n\\uD83D\\uDEA8 Watermark: CONFIDENTIAL (at top of document)\\n\\n\").concat(wantEncryption?'⚠️ Remember your password - you\\'ll need it to view the encrypted content!':'',\"\\n\\nThe PDF has been saved to your downloads folder.\"));}catch(error){console.error('PDF download error:',error);alert(\"\\u274C Failed to download PDF: \".concat(error instanceof Error?error.message:'Unknown error'));}};const handleAddNewPatient=()=>{const patientName=prompt('👤 Enter new patient name:');if(!patientName||!patientName.trim()){alert('❌ Patient name is required');return;}const patientEmail=prompt('📧 Enter patient email:');if(!patientEmail||!patientEmail.trim()||!patientEmail.includes('@')){alert('❌ Valid email is required');return;}const patientDOB=prompt('🎂 Enter patient date of birth (YYYY-MM-DD):');if(!patientDOB||!patientDOB.match(/^\\d{4}-\\d{2}-\\d{2}$/)){alert('❌ Date of birth is required in YYYY-MM-DD format');return;}const phoneNumber=prompt('📞 Enter patient phone number:')||'';const address=prompt('🏠 Enter patient address:')||'';const emergencyContact=prompt('🚨 Enter emergency contact (Name - Phone):')||'';const insuranceProvider=prompt('🏥 Enter insurance provider:')||'None';const insurancePolicyNumber=prompt('📄 Enter insurance policy number:')||'';const newPatient={id:sharedStateService.generateId('patient'),name:patientName.trim(),email:patientEmail.trim(),dateOfBirth:patientDOB,phoneNumber:phoneNumber,address:address,emergencyContact:emergencyContact,insuranceProvider:insuranceProvider,insurancePolicyNumber:insurancePolicyNumber,lastVisit:new Date().toISOString().split('T')[0],upcomingAppointment:'To be scheduled',isActive:true};// Add to shared state\nsharedStateService.addPatient(newPatient);alert(\"\\u2705 New patient added successfully!\\n\\n\\uD83D\\uDC64 Name: \".concat(newPatient.name,\"\\n\\uD83D\\uDCE7 Email: \").concat(newPatient.email,\"\\n\\uD83C\\uDF82 DOB: \").concat(newPatient.dateOfBirth,\"\\n\\uD83D\\uDCDE Phone: \").concat(newPatient.phoneNumber,\"\\n\\uD83C\\uDFE5 Insurance: \").concat(newPatient.insuranceProvider,\"\\n\\nThe patient is now available for creating medical records.\"));};const handleViewNFT=nftId=>{const nft=nftRecords.find(n=>n.id===nftId);if(nft){const patient=myPatients.find(p=>p.id===nft.patientId);alert(\"\\uD83C\\uDFA8 NFT Health Record Details\\n\\n\\uD83C\\uDFF7\\uFE0F Name: \".concat(nft.name,\"\\n\\uD83D\\uDCDD Description: \").concat(nft.description,\"\\n\\uD83C\\uDD94 Token ID: \").concat(nft.tokenId,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||nft.patientId,\"\\n\\uD83D\\uDCCB Related Record: \").concat(nft.recordId,\"\\n\\n\\uD83D\\uDD17 Blockchain Details:\\n\\uD83C\\uDF10 Network: \").concat(nft.blockchainNetwork,\"\\n\\uD83D\\uDCCD Contract Address: \").concat(nft.contractAddress,\"\\n\\uD83D\\uDC64 Current Owner: \").concat(nft.currentOwner,\"\\n\\uD83D\\uDCC5 Mint Date: \").concat(new Date(nft.mintDate).toLocaleString(),\"\\n\\uD83D\\uDD04 Transferable: \").concat(nft.isTransferable?'Yes':'No',\"\\n\\uD83D\\uDD10 Access Level: \").concat(nft.accessLevel,\"\\n\\n\\uD83D\\uDCCE Metadata URI: \").concat(nft.metadataUri,\"\\n\\uD83D\\uDDBC\\uFE0F Image URL: \").concat(nft.imageUrl,\"\\n\\nThis NFT represents a verified medical record stored on the blockchain.\"));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-white shadow-sm border-b\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center h-16\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold text-gray-900\",children:\"\\uD83E\\uDE7A Doctor Dashboard\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[/*#__PURE__*/_jsx(Badge,{variant:\"success\",size:\"sm\",children:\"\\uD83D\\uDD12 HIPAA Compliant\"}),/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",className:\"ml-2\",children:\"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Medical Access\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(Timer,{duration:sessionTimeLeft,onExpire:handleSessionExpire,className:\"text-sm\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"h-8 w-8 rounded-full\",src:\"https://ui-avatars.com/api/?name=\".concat(user.name,\"&background=2563eb&color=fff\"),alt:user.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:user.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-600 font-semibold\",children:user.role.toUpperCase()})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onLogout,className:\"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\",children:\"Logout\"})]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white border-b\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsx(\"nav\",{className:\"flex space-x-8\",children:[{id:'patients',label:'👥 My Patients',icon:'👥'},{id:'records',label:'📋 Medical Records',icon:'📋'},{id:'insurance',label:'💰 Insurance Claims',icon:'💰'},{id:'nfts',label:'🎨 NFT Health Records',icon:'🎨'},{id:'security',label:'🔒 Security Tools',icon:'🔒'}].map(tab=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab(tab.id),className:\"py-4 px-1 border-b-2 font-medium text-sm \".concat(activeTab===tab.id?'border-blue-500 text-blue-600':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'),children:tab.label},tab.id))})})}),/*#__PURE__*/_jsxs(\"main\",{className:\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",children:[activeTab==='patients'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDC65 My Patients\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAddNewPatient,className:\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\",children:\"+ New Patient\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[myPatients.length,\" active patients\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid gap-6\",children:myPatients.map(patient=>/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-6 hover:shadow-md transition-shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"h-12 w-12 rounded-full\",src:\"https://ui-avatars.com/api/?name=\".concat(patient.name,\"&background=random\"),alt:patient.name}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-medium text-gray-900\",children:patient.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:patient.email}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"DOB: \",patient.dateOfBirth]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"Phone: \",patient.phoneNumber]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsx(Badge,{variant:\"success\",size:\"sm\",children:\"Active\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 mt-2\",children:[\"Last Visit: \",patient.lastVisit]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-blue-600 font-medium\",children:[\"Next: \",patient.upcomingAppointment]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-900\",children:\"Insurance\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:patient.insuranceProvider}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 font-mono\",children:patient.insurancePolicyNumber})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-900\",children:\"Emergency Contact\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:patient.emergencyContact})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 flex space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateRecord,className:\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\",children:\"\\uD83D\\uDCCB New Record\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSubmitInsuranceClaim(patient.id),className:\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\",children:\"\\uD83D\\uDCB0 Submit Claim\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewHistory(patient.id),className:\"bg-gray-600 text-white px-4 py-2 rounded text-sm hover:bg-gray-700\",children:\"\\uD83D\\uDC41\\uFE0F View History\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDownloadPatientPDF(patient.id),className:\"bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700\",children:\"\\uD83D\\uDCC4 Download Records\"})]})]},patient.id))})})]}),activeTab==='records'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDCCB Recent Medical Records\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateRecord,className:\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\",children:\"+ New Record\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:recentRecords.map(record=>{var _myPatients$find4;return/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-medium text-gray-900\",children:record.title}),recordEncryptionStatus[record.id]?/*#__PURE__*/_jsx(Badge,{variant:\"warning\",size:\"sm\",children:\"\\uD83D\\uDD12 ENCRYPTED\"}):/*#__PURE__*/_jsx(Badge,{variant:\"success\",size:\"sm\",children:\"\\uFFFD Plain Text\"}),/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",children:\"\\uD83E\\uDDF1 On-Chain\"}),record.nftTokenId&&/*#__PURE__*/_jsx(Badge,{variant:\"secondary\",size:\"sm\",children:\"\\uD83C\\uDFA8 NFT\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:record.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Patient:\"}),\" \",(_myPatients$find4=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find4===void 0?void 0:_myPatients$find4.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Date:\"}),\" \",record.date]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Diagnosis:\"}),\" \",record.diagnosis]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Prescription:\"}),\" \",record.prescription]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Blockchain:\"}),\" \",record.blockchainHash]}),record.ipfsHash&&/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"IPFS:\"}),\" \",record.ipfsHash]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4 flex flex-col space-y-2\",children:[!record.nftTokenId&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMintNFT(record.id),className:\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\",children:\"\\uD83C\\uDFA8 Mint NFT\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEncryptRecord(record.id),className:\"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\",children:\"\\uD83D\\uDD12 Encrypt\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDecryptRecord(record.id),className:\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\",children:\"\\uD83D\\uDD13 Decrypt\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewRecord(record.id),className:\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\",children:\"\\uD83D\\uDC41\\uFE0F View\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDownloadPDF(record.id),className:\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\",children:\"\\uD83D\\uDCC4 Download PDF\"}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700\",children:\"\\u270F\\uFE0F Edit\"})]})]})},record.id);})})})]}),activeTab==='insurance'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDCB0 Insurance Claims\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:insuranceClaims.map(claim=>{var _myPatients$find5,_claim$blockchainTxId;return/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-2\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-lg font-medium text-gray-900\",children:[\"Claim #\",claim.claimNumber]}),/*#__PURE__*/_jsx(Badge,{variant:getStatusColor(claim.status),size:\"sm\",children:claim.status.toUpperCase()}),claim.isProcessedOnChain&&/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",children:\"\\uD83E\\uDDF1 On-Chain\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:claim.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Patient:\"}),\" \",(_myPatients$find5=myPatients.find(p=>p.id===claim.patientId))===null||_myPatients$find5===void 0?void 0:_myPatients$find5.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Amount:\"}),\" $\",claim.amount.toFixed(2)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Submitted:\"}),\" \",claim.submissionDate]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Provider:\"}),\" \",claim.insuranceProvider]}),claim.approvalDate&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Approved:\"}),\" \",claim.approvalDate]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Contract:\"}),\" \",claim.smartContractAddress]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Tx ID:\"}),\" \",(_claim$blockchainTxId=claim.blockchainTxId)===null||_claim$blockchainTxId===void 0?void 0:_claim$blockchainTxId.substring(0,20),\"...\"]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-4\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewInsuranceClaim(claim.id),className:\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\",children:\"\\uD83D\\uDC41\\uFE0F View Details\"})})]})},claim.id);})})})]}),activeTab==='nfts'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83C\\uDFA8 NFT Health Records\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",children:nftRecords.map(nft=>{var _myPatients$find6;return/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-4 hover:shadow-md transition-shadow\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"aspect-square bg-gradient-to-br from-blue-400 to-purple-500 rounded-lg mb-4 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-4xl\",children:\"\\uD83C\\uDFE5\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:nft.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:nft.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs space-y-1\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Token ID:\"}),\" \",nft.tokenId]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Patient:\"}),\" \",(_myPatients$find6=myPatients.find(p=>p.id===nft.patientId))===null||_myPatients$find6===void 0?void 0:_myPatients$find6.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Network:\"}),\" \",nft.blockchainNetwork]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Minted:\"}),\" \",new Date(nft.mintDate).toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Contract:\"}),\" \",nft.contractAddress.substring(0,10),\"...\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between pt-2\",children:[/*#__PURE__*/_jsx(Badge,{variant:\"secondary\",size:\"sm\",children:nft.isTransferable?'Transferable':'Non-Transferable'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewNFT(nft.id),className:\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700\",children:\"\\uD83D\\uDC41\\uFE0F View NFT\"})]})]})]},nft.id);})})})]}),activeTab==='security'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDD12 Encryption & Security Tools\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mt-1\",children:\"Secure patient records with advanced encryption\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"\\uD83D\\uDD10 Record Encryption\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Encrypt sensitive medical records for enhanced security\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:recentRecords.slice(0,3).map(record=>{var _myPatients$find7;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 border rounded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium text-sm\",children:record.title}),recordEncryptionStatus[record.id]&&/*#__PURE__*/_jsx(Badge,{variant:\"warning\",size:\"sm\",children:\"\\uD83D\\uDD12 ENCRYPTED\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500\",children:[\"Patient: \",((_myPatients$find7=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find7===void 0?void 0:_myPatients$find7.name)||record.patientId]}),recordEncryptionStatus[record.id]&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-green-600\",children:\"\\uD83D\\uDEE1\\uFE0F Password Protected\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEncryptRecord(record.id),className:\"px-2 py-1 rounded text-xs \".concat(recordEncryptionStatus[record.id]?'bg-gray-400 text-gray-600 cursor-not-allowed':'bg-green-600 text-white hover:bg-green-700'),disabled:recordEncryptionStatus[record.id],children:\"\\uD83D\\uDD12 Encrypt\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDecryptRecord(record.id),className:\"px-2 py-1 rounded text-xs \".concat(recordEncryptionStatus[record.id]?'bg-orange-600 text-white hover:bg-orange-700':'bg-gray-400 text-gray-600 cursor-not-allowed'),disabled:!recordEncryptionStatus[record.id],children:\"\\uD83D\\uDD13 Decrypt\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDownloadPDF(record.id),className:\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700\",children:\"\\uD83D\\uDCC4 PDF\"})]})]},record.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:\"\\uD83D\\uDCCB Clipboard Security\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"Monitor clipboard for suspicious wallet addresses\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Clipboard Monitoring\"}),/*#__PURE__*/_jsx(Badge,{variant:clipboardMonitoring?'success':'secondary',size:\"sm\",children:clipboardMonitoring?'Active':'Inactive'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleClipboardMonitoring,className:\"w-full px-4 py-2 rounded text-sm \".concat(clipboardMonitoring?'bg-red-600 hover:bg-red-700 text-white':'bg-blue-600 hover:bg-blue-700 text-white'),children:clipboardMonitoring?'⏹️ Stop Monitoring':'🔍 Start Monitoring'}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Detects cryptocurrency wallet addresses\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Alerts on suspicious clipboard activity\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Protects against clipboard hijacking\"})]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-600 text-lg mr-2\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-yellow-800\",children:\"Security Notice\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-yellow-700 mt-1\",children:\"Always ensure patient records are encrypted before transmission. Use blockchain verification for data integrity and monitor for suspicious activities.\"})]})]})})]})]})})]}),showCreateRecordModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Create New Medical Record\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Patient\"}),/*#__PURE__*/_jsxs(\"select\",{value:newRecordForm.patientId,onChange:e=>setNewRecordForm(prev=>_objectSpread(_objectSpread({},prev),{},{patientId:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Patient\"}),myPatients.map(patient=>/*#__PURE__*/_jsx(\"option\",{value:patient.id,children:patient.name},patient.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newRecordForm.title,onChange:e=>setNewRecordForm(prev=>_objectSpread(_objectSpread({},prev),{},{title:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",placeholder:\"Record title\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Diagnosis\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newRecordForm.diagnosis,onChange:e=>setNewRecordForm(prev=>_objectSpread(_objectSpread({},prev),{},{diagnosis:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",placeholder:\"Diagnosis\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Prescription\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newRecordForm.prescription,onChange:e=>setNewRecordForm(prev=>_objectSpread(_objectSpread({},prev),{},{prescription:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",rows:3,placeholder:\"Prescription details\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newRecordForm.description,onChange:e=>setNewRecordForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",rows:3,placeholder:\"Additional notes\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3 mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowCreateRecordModal(false),className:\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveRecord,className:\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\",children:\"Create Record\"})]})]})})}),showClaimModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Submit Insurance Claim\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Patient\"}),/*#__PURE__*/_jsxs(\"select\",{value:newClaimForm.patientId,onChange:e=>setNewClaimForm(prev=>_objectSpread(_objectSpread({},prev),{},{patientId:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Patient\"}),myPatients.map(patient=>/*#__PURE__*/_jsx(\"option\",{value:patient.id,children:patient.name},patient.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Insurance Provider\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newClaimForm.insuranceProvider,onChange:e=>setNewClaimForm(prev=>_objectSpread(_objectSpread({},prev),{},{insuranceProvider:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",placeholder:\"Insurance company name\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Claim Amount ($)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:newClaimForm.amount,onChange:e=>setNewClaimForm(prev=>_objectSpread(_objectSpread({},prev),{},{amount:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",placeholder:\"0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newClaimForm.description,onChange:e=>setNewClaimForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",rows:4,placeholder:\"Claim description and details\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3 mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowClaimModal(false),className:\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveClaim,className:\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\",children:\"Submit Claim\"})]})]})})})]});};export default DoctorDashboard;","map":{"version":3,"names":["React","useState","useEffect","Badge","Timer","RoleBasedAccessService","EncryptionService","sharedStateService","pdfService","jsx","_jsx","jsxs","_jsxs","DoctorDashboard","_ref","user","onLogout","sessionTimeLeft","rbacService","activeTab","setActiveTab","showCreateRecordModal","setShowCreateRecordModal","showClaimModal","setShowClaimModal","setSelectedPatientId","clipboardMonitoring","setClipboardMonitoring","encryptedRecords","setEncryptedRecords","recordEncryptionStatus","setRecordEncryptionStatus","newRecordForm","setNewRecordForm","patientId","title","description","diagnosis","prescription","notes","newClaimForm","setNewClaimForm","amount","insuranceProvider","myPatients","setMyPatients","recentRecords","setRecentRecords","patients","getPatients","records","getMedicalRecordsByDoctor","id","unsubscribePatients","onPatientsChange","unsubscribeRecords","onMedicalRecordsChange","allRecords","doctorRecords","filter","record","doctorId","insuranceClaims","claimNumber","providerId","insuranceCompany","status","submittedAt","submissionDate","approvalDate","relatedRecords","smartContractAddress","blockchainTxId","isProcessedOnChain","approvalSignatures","ipfsDocuments","nftRecords","tokenId","recordId","name","imageUrl","metadataUri","contractAddress","blockchainNetwork","mintDate","currentOwner","isTransferable","accessLevel","setCurrentUser","handleSessionExpire","window","confirm","handleCreateRecord","handleSubmitInsuranceClaim","prev","_objectSpread","handleMintNFT","alert","concat","console","log","handleViewHistory","patient","find","p","patientRecords","length","historyDetails","map","date","join","email","dateOfBirth","phoneNumber","address","emergencyContact","lastVisit","upcomingAppointment","handleEncryptRecord","r","_myPatients$find","password","prompt","trim","_myPatients$find2","customEncryption","recordData","encryptedBy","encryptedAt","Date","toISOString","salt","generateSalt","deriveKey","encryptedData","encryptData","JSON","stringify","toLocaleString","error","handleDecryptRecord","_myPatients$find3","decryptedData","decryptData","parse","permanentDecrypt","updated","handleViewRecord","isEncrypted","viewEncrypted","blockchainHash","ipfsHash","nftTokenId","isVerified","toggleClipboardMonitoring","newState","handleViewInsuranceClaim","claimId","claim","c","toFixed","toUpperCase","handleSaveRecord","newRecord","generateId","split","accessPermissions","now","toString","Math","random","slice","undefined","addMedicalRecord","handleSaveClaim","getStatusColor","handleDownloadPDF","wantEncryption","downloadMedicalRecordPDF","includeWatermark","encryptionStatus","replace","Error","message","handleDownloadPatientPDF","batchPDF","generateBatchPDF","url","URL","createObjectURL","link","document","createElement","href","encryptionSuffix","filename","download","body","appendChild","click","removeChild","revokeObjectURL","handleAddNewPatient","patientName","patientEmail","includes","patientDOB","match","insurancePolicyNumber","newPatient","isActive","addPatient","handleViewNFT","nftId","nft","n","className","children","variant","size","duration","onExpire","src","alt","role","onClick","label","icon","tab","_myPatients$find4","_myPatients$find5","_claim$blockchainTxId","substring","_myPatients$find6","toLocaleDateString","_myPatients$find7","disabled","value","onChange","e","target","type","placeholder","rows"],"sources":["D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/src/components/Dashboard/DoctorDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Badge from '../UI/Badge';\r\nimport Timer from '../UI/Timer';\r\nimport { User, MedicalRecord, Patient, InsuranceClaim, NFTHealthRecord } from '../../types';\r\nimport { RoleBasedAccessService } from '../../services/rbacService';\r\nimport { EncryptionService } from '../../services/encryption';\r\nimport { sharedStateService } from '../../services/sharedState';\r\nimport { pdfService } from '../../services/pdfService';\r\n\r\ninterface DoctorDashboardProps {\r\n    user: User;\r\n    onLogout: () => void;\r\n}\r\n\r\nconst DoctorDashboard: React.FC<DoctorDashboardProps> = ({ user, onLogout }) => {\r\n    const [sessionTimeLeft] = useState(1800);\r\n    const [rbacService] = useState(new RoleBasedAccessService());\r\n    const [activeTab, setActiveTab] = useState<'patients' | 'records' | 'insurance' | 'nfts' | 'security'>('patients');\r\n\r\n    // Modal states\r\n    const [showCreateRecordModal, setShowCreateRecordModal] = useState(false);\r\n    const [showClaimModal, setShowClaimModal] = useState(false);\r\n    const [, setSelectedPatientId] = useState<string>('');\r\n\r\n    // Security states\r\n    const [clipboardMonitoring, setClipboardMonitoring] = useState(false);\r\n    const [encryptedRecords, setEncryptedRecords] = useState<{ [key: string]: string }>({});\r\n    const [recordEncryptionStatus, setRecordEncryptionStatus] = useState<{ [key: string]: boolean }>({});\r\n\r\n    // Form states\r\n    const [newRecordForm, setNewRecordForm] = useState({\r\n        patientId: '',\r\n        title: '',\r\n        description: '',\r\n        diagnosis: '',\r\n        prescription: '',\r\n        notes: ''\r\n    });\r\n\r\n    const [newClaimForm, setNewClaimForm] = useState({\r\n        patientId: '',\r\n        amount: '',\r\n        description: '',\r\n        insuranceProvider: ''\r\n    });\r\n\r\n    const [myPatients, setMyPatients] = useState<Patient[]>([]);\r\n    const [recentRecords, setRecentRecords] = useState<MedicalRecord[]>([]);\r\n\r\n    // Initialize data from shared state service\r\n    useEffect(() => {\r\n        const patients = sharedStateService.getPatients();\r\n        const records = sharedStateService.getMedicalRecordsByDoctor(user.id);\r\n\r\n        setMyPatients(patients);\r\n        setRecentRecords(records);\r\n\r\n        // Subscribe to changes\r\n        const unsubscribePatients = sharedStateService.onPatientsChange(setMyPatients);\r\n        const unsubscribeRecords = sharedStateService.onMedicalRecordsChange((allRecords) => {\r\n            const doctorRecords = allRecords.filter(record => record.doctorId === user.id);\r\n            setRecentRecords(doctorRecords);\r\n        });\r\n\r\n        return () => {\r\n            unsubscribePatients();\r\n            unsubscribeRecords();\r\n        };\r\n    }, [user.id]);\r\n\r\n    const [insuranceClaims] = useState<InsuranceClaim[]>([\r\n        {\r\n            id: 'claim-1',\r\n            claimNumber: 'CLM-2025-001',\r\n            patientId: 'patient-1',\r\n            providerId: user.id,\r\n            doctorId: user.id,\r\n            insuranceCompany: 'HealthFirst Insurance',\r\n            insuranceProvider: 'HealthFirst Insurance',\r\n            amount: 450.00,\r\n            status: 'approved',\r\n            submittedAt: '2025-07-01T10:00:00Z',\r\n            submissionDate: '2025-07-01',\r\n            approvalDate: '2025-07-03',\r\n            description: 'Annual physical examination and blood work',\r\n            relatedRecords: ['record-1'],\r\n            smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n            blockchainTxId: '0xabc123def456789abcdef123456789abc123def456789abcdef',\r\n            isProcessedOnChain: true,\r\n            approvalSignatures: [],\r\n            ipfsDocuments: []\r\n        },\r\n        {\r\n            id: 'claim-2',\r\n            claimNumber: 'CLM-2025-002',\r\n            patientId: 'patient-2',\r\n            providerId: user.id,\r\n            doctorId: user.id,\r\n            insuranceCompany: 'MediCare Plus',\r\n            insuranceProvider: 'MediCare Plus',\r\n            amount: 275.50,\r\n            status: 'pending',\r\n            submittedAt: '2025-07-04T14:30:00Z',\r\n            submissionDate: '2025-07-04',\r\n            description: 'Follow-up consultation and medication review',\r\n            relatedRecords: ['record-2'],\r\n            smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n            blockchainTxId: '0xdef456abc789123def456abc789123def456abc789123def',\r\n            isProcessedOnChain: false,\r\n            approvalSignatures: [],\r\n            ipfsDocuments: []\r\n        }\r\n    ]);\r\n\r\n    const [nftRecords] = useState<NFTHealthRecord[]>([\r\n        {\r\n            id: 'nft-1',\r\n            tokenId: 'HEALTH-NFT-001',\r\n            patientId: 'patient-1',\r\n            recordId: 'record-1',\r\n            name: 'Annual Physical 2025',\r\n            description: 'Comprehensive health examination record',\r\n            imageUrl: 'https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=NFT-001',\r\n            metadataUri: 'ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP',\r\n            contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\r\n            blockchainNetwork: 'Ethereum',\r\n            mintDate: '2025-07-04T10:30:00Z',\r\n            currentOwner: 'patient-1',\r\n            isTransferable: false,\r\n            accessLevel: 'doctor_patient'\r\n        },\r\n        {\r\n            id: 'nft-2',\r\n            tokenId: 'HEALTH-NFT-002',\r\n            patientId: 'patient-2',\r\n            recordId: 'record-2',\r\n            name: 'Follow-up Consultation',\r\n            description: 'Treatment follow-up and medication adjustment',\r\n            imageUrl: 'https://via.placeholder.com/200x200/059669/FFFFFF?text=NFT-002',\r\n            metadataUri: 'ipfs://QmY8AX6sRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0nQ',\r\n            contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\r\n            blockchainNetwork: 'Ethereum',\r\n            mintDate: '2025-07-03T14:45:00Z',\r\n            currentOwner: 'patient-2',\r\n            isTransferable: false,\r\n            accessLevel: 'doctor_patient'\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        rbacService.setCurrentUser(user);\r\n    }, [user, rbacService]);\r\n\r\n    const handleSessionExpire = () => {\r\n        window.confirm('Session expired for security. Please login again.') && onLogout();\r\n    };\r\n\r\n    const handleCreateRecord = () => {\r\n        setShowCreateRecordModal(true);\r\n    };\r\n\r\n    const handleSubmitInsuranceClaim = (patientId: string) => {\r\n        setSelectedPatientId(patientId);\r\n        setNewClaimForm(prev => ({ ...prev, patientId }));\r\n        setShowClaimModal(true);\r\n    };\r\n\r\n    const handleMintNFT = (recordId: string) => {\r\n        alert(`NFT minting initiated for record ${recordId}. This will create a secure, immutable NFT on the blockchain.`);\r\n        console.log(`Minting NFT for record: ${recordId}`);\r\n    };\r\n\r\n    const handleViewHistory = (patientId: string) => {\r\n        const patient = myPatients.find(p => p.id === patientId);\r\n        const patientRecords = recentRecords.filter(record => record.patientId === patientId);\r\n\r\n        if (patient && patientRecords.length > 0) {\r\n            const historyDetails = patientRecords.map(record =>\r\n                `📋 ${record.title} (${record.date})\\n   Diagnosis: ${record.diagnosis}\\n   Prescription: ${record.prescription}`\r\n            ).join('\\n\\n');\r\n\r\n            alert(`👥 Medical History for ${patient.name}\r\n📧 Email: ${patient.email}\r\n🎂 DOB: ${patient.dateOfBirth}\r\n🏥 Insurance: ${patient.insuranceProvider}\r\n📞 Phone: ${patient.phoneNumber}\r\n🏠 Address: ${patient.address}\r\n🚨 Emergency Contact: ${patient.emergencyContact}\r\n📅 Last Visit: ${patient.lastVisit}\r\n⏭️ Next Appointment: ${patient.upcomingAppointment}\r\n\r\n📋 MEDICAL RECORDS:\r\n${historyDetails}\r\n\r\nTotal Records: ${patientRecords.length}`);\r\n        } else {\r\n            alert(`No medical history found for this patient.`);\r\n        }\r\n    };\r\n\r\n    const handleEncryptRecord = (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (record) {\r\n            // Check if already encrypted\r\n            if (recordEncryptionStatus[recordId]) {\r\n                alert('⚠️ This record is already encrypted. Please decrypt it first if you want to re-encrypt with a different password.');\r\n                return;\r\n            }\r\n\r\n            const password = prompt(`🔒 Enter a password to encrypt \"${record.title}\" for patient: ${myPatients.find(p => p.id === record.patientId)?.name || record.patientId}`);\r\n            if (password && password.trim()) {\r\n                try {\r\n                    // Create a custom encryption service with the user's password\r\n                    const customEncryption = new EncryptionService();\r\n                    const recordData = {\r\n                        ...record,\r\n                        encryptedBy: user.name,\r\n                        encryptedAt: new Date().toISOString()\r\n                    };\r\n\r\n                    // Use password-based encryption\r\n                    const salt = customEncryption.generateSalt();\r\n                    customEncryption.deriveKey(password, salt); // Generate derived key for security\r\n                    const encryptedData = customEncryption.encryptData(JSON.stringify(recordData));\r\n\r\n                    // Store the encrypted data and metadata\r\n                    setEncryptedRecords(prev => ({ ...prev, [recordId]: encryptedData }));\r\n                    setRecordEncryptionStatus(prev => ({ ...prev, [recordId]: true }));\r\n\r\n                    alert(`🔒 SUCCESS! Record \"${record.title}\" has been encrypted with your custom password.\r\n                    \r\n📋 Record: ${record.title}\r\n👤 Patient: ${myPatients.find(p => p.id === record.patientId)?.name}\r\n🔐 Status: ENCRYPTED\r\n🛡️ Security Level: AES-256 + Password Protection\r\n📅 Encrypted At: ${new Date().toLocaleString()}\r\n👨‍⚕️ Encrypted By: ${user.name}\r\n\r\n⚠️ Remember your password - it will be required for decryption!`);\r\n                } catch (error) {\r\n                    alert('❌ Encryption failed. Please try again.');\r\n                }\r\n            } else {\r\n                alert('❌ Password is required for encryption.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDecryptRecord = (recordId: string) => {\r\n        // Check if record is encrypted\r\n        if (!recordEncryptionStatus[recordId]) {\r\n            alert('ℹ️ This record is not encrypted. No decryption needed.');\r\n            return;\r\n        }\r\n\r\n        const encryptedData = encryptedRecords[recordId];\r\n        if (encryptedData) {\r\n            const password = prompt(`🔓 Enter the password to decrypt this record:`);\r\n            if (password && password.trim()) {\r\n                try {\r\n                    const customEncryption = new EncryptionService();\r\n\r\n                    // For demo purposes, we'll try to decrypt with the provided password\r\n                    // In a real system, you'd verify the password against the stored hash\r\n                    const decryptedData = customEncryption.decryptData(encryptedData);\r\n                    const record = JSON.parse(decryptedData);\r\n\r\n                    alert(`🔓 DECRYPTION SUCCESSFUL!\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${myPatients.find(p => p.id === record.patientId)?.name || record.patientId}\r\n📅 Date: ${record.date}\r\n🩺 Diagnosis: ${record.diagnosis}\r\n💊 Prescription: ${record.prescription}\r\n📝 Description: ${record.description}\r\n\r\n🔒 Encryption Details:\r\n👨‍⚕️ Encrypted By: ${record.encryptedBy || 'Unknown'}\r\n📅 Encrypted At: ${record.encryptedAt ? new Date(record.encryptedAt).toLocaleString() : 'Unknown'}\r\n🛡️ Security: Password-protected AES-256`);\r\n\r\n                    // Ask if user wants to permanently decrypt\r\n                    const permanentDecrypt = window.confirm('🔓 Do you want to permanently decrypt this record? (This will remove encryption)');\r\n                    if (permanentDecrypt) {\r\n                        setEncryptedRecords(prev => {\r\n                            const updated = { ...prev };\r\n                            delete updated[recordId];\r\n                            return updated;\r\n                        });\r\n                        setRecordEncryptionStatus(prev => ({ ...prev, [recordId]: false }));\r\n                        alert('✅ Record has been permanently decrypted and is now in plain text.');\r\n                    }\r\n                } catch (error) {\r\n                    alert('❌ Decryption failed. Incorrect password or corrupted data.');\r\n                }\r\n            } else {\r\n                alert('❌ Password is required for decryption.');\r\n            }\r\n        } else {\r\n            alert('❌ No encrypted data found for this record.');\r\n        }\r\n    };\r\n\r\n    const handleViewRecord = (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (record) {\r\n            const isEncrypted = recordEncryptionStatus[recordId];\r\n            const patient = myPatients.find(p => p.id === record.patientId);\r\n\r\n            if (isEncrypted) {\r\n                const viewEncrypted = window.confirm(`🔒 This record is encrypted. \r\n\r\nDo you want to:\r\n- Click \"OK\" to view encrypted version\r\n- Click \"Cancel\" to decrypt and view`);\r\n\r\n                if (viewEncrypted) {\r\n                    // Show encrypted version\r\n                    alert(`🔒 ENCRYPTED RECORD VIEW\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${patient?.name || record.patientId}\r\n📅 Date: ${record.date}\r\n🔐 Status: ENCRYPTED\r\n🛡️ Security: Password Protected\r\n\r\n⚠️ Content is encrypted and cannot be displayed in plain text.\r\nUse the decrypt button to view the full content.`);\r\n                } else {\r\n                    // Trigger decryption process\r\n                    handleDecryptRecord(recordId);\r\n                }\r\n            } else {\r\n                // Show full record details\r\n                alert(`👁️ MEDICAL RECORD DETAILS\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${patient?.name || record.patientId}\r\n📧 Email: ${patient?.email || 'N/A'}\r\n📅 Date: ${record.date}\r\n🩺 Diagnosis: ${record.diagnosis}\r\n💊 Prescription: ${record.prescription}\r\n📝 Description: ${record.description}\r\n\r\n🔗 Blockchain Details:\r\n🧱 Hash: ${record.blockchainHash || 'N/A'}\r\n📎 IPFS: ${record.ipfsHash || 'N/A'}\r\n🎨 NFT Token: ${record.nftTokenId || 'Not minted'}\r\n✅ Verified: ${record.isVerified ? 'Yes' : 'No'}\r\n🔐 Encryption: Not encrypted`);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleClipboardMonitoring = () => {\r\n        const newState = !clipboardMonitoring;\r\n        setClipboardMonitoring(newState);\r\n        if (newState) {\r\n            alert('🔍 Clipboard monitoring enabled. The system will monitor for suspicious wallet addresses.');\r\n            // In a real application, you would start actual clipboard monitoring here\r\n        } else {\r\n            alert('⏹️ Clipboard monitoring disabled.');\r\n        }\r\n    };\r\n\r\n    const handleViewInsuranceClaim = (claimId: string) => {\r\n        const claim = insuranceClaims.find(c => c.id === claimId);\r\n        if (claim) {\r\n            const patient = myPatients.find(p => p.id === claim.patientId);\r\n            alert(`💰 Insurance Claim Details\r\n\r\n📋 Claim Number: ${claim.claimNumber}\r\n👤 Patient: ${patient?.name || claim.patientId}\r\n💵 Amount: $${claim.amount.toFixed(2)}\r\n📊 Status: ${claim.status.toUpperCase()}\r\n🏥 Insurance Provider: ${claim.insuranceProvider}\r\n📅 Submitted: ${claim.submissionDate}\r\n${claim.approvalDate ? `✅ Approved: ${claim.approvalDate}` : '⏳ Pending approval'}\r\n📝 Description: ${claim.description || 'No description provided'}\r\n\r\n🔗 Blockchain Details:\r\n📋 Contract Address: ${claim.smartContractAddress}\r\n🆔 Transaction ID: ${claim.blockchainTxId}\r\n⛓️ On-Chain Status: ${claim.isProcessedOnChain ? 'Processed' : 'Pending'}\r\n\r\n📄 Related Records: ${claim.relatedRecords.length} record(s)\r\n📎 Documents: ${claim.ipfsDocuments.length} file(s) on IPFS`);\r\n        }\r\n    };\r\n\r\n    const handleSaveRecord = () => {\r\n        if (!newRecordForm.title || !newRecordForm.patientId) {\r\n            alert('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        // Find patient details\r\n        const patient = myPatients.find(p => p.id === newRecordForm.patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        // Create new record with proper ID generation\r\n        const newRecord: MedicalRecord = {\r\n            id: sharedStateService.generateId('record'),\r\n            patientId: newRecordForm.patientId,\r\n            doctorId: user.id,\r\n            title: newRecordForm.title,\r\n            description: newRecordForm.description,\r\n            date: new Date().toISOString().split('T')[0], // Format as YYYY-MM-DD\r\n            diagnosis: newRecordForm.diagnosis,\r\n            prescription: newRecordForm.prescription,\r\n            isEncrypted: false, // Initially not encrypted\r\n            isVerified: true,\r\n            accessPermissions: [user.id, newRecordForm.patientId],\r\n            blockchainHash: `0x${Date.now().toString(16)}abc${Math.random().toString(16).slice(2, 8)}`,\r\n            ipfsHash: `Qm${Math.random().toString(36).slice(2, 15)}${Date.now().toString(36)}`,\r\n            nftTokenId: undefined // Will be set when NFT is minted\r\n        };\r\n\r\n        // Add to shared state (will automatically update all components)\r\n        sharedStateService.addMedicalRecord(newRecord);\r\n\r\n        // Show success message with patient name\r\n        alert(`✅ Medical record created successfully!\r\n\r\n📋 Record: ${newRecord.title}\r\n👤 Patient: ${patient.name}\r\n📅 Date: ${newRecord.date}\r\n🩺 Diagnosis: ${newRecord.diagnosis}\r\n💊 Prescription: ${newRecord.prescription}\r\n\r\nThe record has been added to your medical records list and is ready for encryption if needed.`);\r\n\r\n        setShowCreateRecordModal(false);\r\n        setNewRecordForm({\r\n            patientId: '',\r\n            title: '',\r\n            description: '',\r\n            diagnosis: '',\r\n            prescription: '',\r\n            notes: ''\r\n        });\r\n    };\r\n\r\n    const handleSaveClaim = () => {\r\n        if (!newClaimForm.amount || !newClaimForm.description) {\r\n            alert('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        // Create new insurance claim\r\n        // const newClaim: InsuranceClaim = {\r\n        //     id: `claim-${Date.now()}`,\r\n        //     claimNumber: `CLAIM-${Date.now()}`,\r\n        //     patientId: newClaimForm.patientId,\r\n        //     providerId: user.id,\r\n        //     doctorId: user.id,\r\n        //     insuranceCompany: newClaimForm.insuranceProvider,\r\n        //     insuranceProvider: newClaimForm.insuranceProvider,\r\n        //     amount: parseFloat(newClaimForm.amount),\r\n        //     status: 'pending',\r\n        //     submittedAt: new Date().toISOString(),\r\n        //     submissionDate: new Date().toLocaleDateString(),\r\n        //     description: newClaimForm.description,\r\n        //     relatedRecords: [],\r\n        //     smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n        //     blockchainTxId: `0x${Date.now().toString(16)}`,\r\n        //     isProcessedOnChain: false,\r\n        //     approvalSignatures: [],\r\n        //     ipfsDocuments: []\r\n        // };\r\n\r\n        alert('Insurance claim submitted successfully!');\r\n        setShowClaimModal(false);\r\n        setNewClaimForm({\r\n            patientId: '',\r\n            amount: '',\r\n            description: '',\r\n            insuranceProvider: ''\r\n        });\r\n    };\r\n\r\n    const getStatusColor = (status: string) => {\r\n        switch (status) {\r\n            case 'approved': return 'success';\r\n            case 'pending': return 'warning';\r\n            case 'rejected': return 'error';\r\n            case 'paid': return 'success';\r\n            case 'under_review': return 'info';\r\n            case 'submitted': return 'primary';\r\n            default: return 'secondary';\r\n        }\r\n    };\r\n\r\n    const handleDownloadPDF = async (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (!record) {\r\n            alert('Record not found');\r\n            return;\r\n        }\r\n\r\n        const patient = myPatients.find(p => p.id === record.patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const wantEncryption = window.confirm(`🔐 PDF Download Options\r\n\r\nRecord: ${record.title}\r\nPatient: ${patient.name}\r\n\r\nDo you want to:\r\n• Click \"OK\" to download an ENCRYPTED PDF (password protected)\r\n• Click \"Cancel\" to download a regular PDF\r\n\r\nNote: The PDF will include a large \"CONFIDENTIAL\" watermark at the top.`);\r\n\r\n            let password = '';\r\n            if (wantEncryption) {\r\n                password = prompt('🔒 Enter password for PDF encryption:') || '';\r\n                if (!password.trim()) {\r\n                    alert('❌ Password is required for encryption');\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Download the PDF\r\n            await pdfService.downloadMedicalRecordPDF(record, patient, {\r\n                includeWatermark: true,\r\n                isEncrypted: wantEncryption,\r\n                password: password\r\n            });\r\n\r\n            const encryptionStatus = wantEncryption ? 'ENCRYPTED' : 'UNENCRYPTED';\r\n            alert(`✅ PDF Downloaded Successfully!\r\n\r\n📄 File: medical_record_${record.id}_${patient.name.replace(/\\s+/g, '_')}${wantEncryption ? '_encrypted' : ''}.pdf\r\n🔐 Status: ${encryptionStatus}\r\n🚨 Watermark: CONFIDENTIAL (at top of document)\r\n👤 Patient: ${patient.name}\r\n📋 Record: ${record.title}\r\n\r\n${wantEncryption ? '⚠️ Remember your password - you\\'ll need it to view the encrypted content!' : ''}\r\n\r\nThe PDF has been saved to your downloads folder.`);\r\n        } catch (error) {\r\n            console.error('PDF download error:', error);\r\n            alert(`❌ Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        }\r\n    };\r\n\r\n    const handleDownloadPatientPDF = async (patientId: string) => {\r\n        const patient = myPatients.find(p => p.id === patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        const patientRecords = recentRecords.filter(record => record.patientId === patientId);\r\n\r\n        if (patientRecords.length === 0) {\r\n            alert(`No medical records found for ${patient.name}. Create some records first.`);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const wantEncryption = window.confirm(`🔐 PDF Download Options for ${patient.name}\r\n\r\nTotal Records: ${patientRecords.length}\r\n\r\nDo you want to:\r\n• Click \"OK\" to download an ENCRYPTED PDF (password protected)\r\n• Click \"Cancel\" to download a regular PDF\r\n\r\nNote: The PDF will include a large \"CONFIDENTIAL\" watermark at the top.`);\r\n\r\n            let password = '';\r\n            if (wantEncryption) {\r\n                password = prompt('🔒 Enter password for PDF encryption:') || '';\r\n                if (!password.trim()) {\r\n                    alert('❌ Password is required for encryption');\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (patientRecords.length === 1) {\r\n                // Single record\r\n                await pdfService.downloadMedicalRecordPDF(patientRecords[0], patient, {\r\n                    includeWatermark: true,\r\n                    isEncrypted: wantEncryption,\r\n                    password: password\r\n                });\r\n            } else {\r\n                // Multiple records - use batch PDF\r\n                const batchPDF = await pdfService.generateBatchPDF(patientRecords, [patient], {\r\n                    includeWatermark: true,\r\n                    isEncrypted: wantEncryption,\r\n                    password: password\r\n                });\r\n\r\n                // Create download link for batch PDF\r\n                const url = URL.createObjectURL(batchPDF);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n\r\n                const encryptionSuffix = wantEncryption ? '_encrypted' : '';\r\n                const filename = `medical_records_${patient.name.replace(/\\s+/g, '_')}_batch${encryptionSuffix}.pdf`;\r\n                link.download = filename;\r\n\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            }\r\n\r\n            const encryptionStatus = wantEncryption ? 'ENCRYPTED' : 'UNENCRYPTED';\r\n            alert(`✅ PDF Downloaded Successfully!\r\n\r\n👤 Patient: ${patient.name}\r\n📄 Records: ${patientRecords.length} medical record(s)\r\n🔐 Status: ${encryptionStatus}\r\n🚨 Watermark: CONFIDENTIAL (at top of document)\r\n\r\n${wantEncryption ? '⚠️ Remember your password - you\\'ll need it to view the encrypted content!' : ''}\r\n\r\nThe PDF has been saved to your downloads folder.`);\r\n        } catch (error) {\r\n            console.error('PDF download error:', error);\r\n            alert(`❌ Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        }\r\n    };\r\n\r\n    const handleAddNewPatient = () => {\r\n        const patientName = prompt('👤 Enter new patient name:');\r\n        if (!patientName || !patientName.trim()) {\r\n            alert('❌ Patient name is required');\r\n            return;\r\n        }\r\n\r\n        const patientEmail = prompt('📧 Enter patient email:');\r\n        if (!patientEmail || !patientEmail.trim() || !patientEmail.includes('@')) {\r\n            alert('❌ Valid email is required');\r\n            return;\r\n        }\r\n\r\n        const patientDOB = prompt('🎂 Enter patient date of birth (YYYY-MM-DD):');\r\n        if (!patientDOB || !patientDOB.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\r\n            alert('❌ Date of birth is required in YYYY-MM-DD format');\r\n            return;\r\n        }\r\n\r\n        const phoneNumber = prompt('📞 Enter patient phone number:') || '';\r\n        const address = prompt('🏠 Enter patient address:') || '';\r\n        const emergencyContact = prompt('🚨 Enter emergency contact (Name - Phone):') || '';\r\n        const insuranceProvider = prompt('🏥 Enter insurance provider:') || 'None';\r\n        const insurancePolicyNumber = prompt('📄 Enter insurance policy number:') || '';\r\n\r\n        const newPatient: Patient = {\r\n            id: sharedStateService.generateId('patient'),\r\n            name: patientName.trim(),\r\n            email: patientEmail.trim(),\r\n            dateOfBirth: patientDOB,\r\n            phoneNumber: phoneNumber,\r\n            address: address,\r\n            emergencyContact: emergencyContact,\r\n            insuranceProvider: insuranceProvider,\r\n            insurancePolicyNumber: insurancePolicyNumber,\r\n            lastVisit: new Date().toISOString().split('T')[0],\r\n            upcomingAppointment: 'To be scheduled',\r\n            isActive: true\r\n        };\r\n\r\n        // Add to shared state\r\n        sharedStateService.addPatient(newPatient);\r\n\r\n        alert(`✅ New patient added successfully!\r\n\r\n👤 Name: ${newPatient.name}\r\n📧 Email: ${newPatient.email}\r\n🎂 DOB: ${newPatient.dateOfBirth}\r\n📞 Phone: ${newPatient.phoneNumber}\r\n🏥 Insurance: ${newPatient.insuranceProvider}\r\n\r\nThe patient is now available for creating medical records.`);\r\n    };\r\n\r\n    const handleViewNFT = (nftId: string) => {\r\n        const nft = nftRecords.find(n => n.id === nftId);\r\n        if (nft) {\r\n            const patient = myPatients.find(p => p.id === nft.patientId);\r\n            \r\n            alert(`🎨 NFT Health Record Details\r\n\r\n🏷️ Name: ${nft.name}\r\n📝 Description: ${nft.description}\r\n🆔 Token ID: ${nft.tokenId}\r\n👤 Patient: ${patient?.name || nft.patientId}\r\n📋 Related Record: ${nft.recordId}\r\n\r\n🔗 Blockchain Details:\r\n🌐 Network: ${nft.blockchainNetwork}\r\n📍 Contract Address: ${nft.contractAddress}\r\n👤 Current Owner: ${nft.currentOwner}\r\n📅 Mint Date: ${new Date(nft.mintDate).toLocaleString()}\r\n🔄 Transferable: ${nft.isTransferable ? 'Yes' : 'No'}\r\n🔐 Access Level: ${nft.accessLevel}\r\n\r\n📎 Metadata URI: ${nft.metadataUri}\r\n🖼️ Image URL: ${nft.imageUrl}\r\n\r\nThis NFT represents a verified medical record stored on the blockchain.`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50\">\r\n            {/* Header */}\r\n            <header className=\"bg-white shadow-sm border-b\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                    <div className=\"flex justify-between items-center h-16\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"flex-shrink-0\">\r\n                                <h1 className=\"text-xl font-bold text-gray-900\">🩺 Doctor Dashboard</h1>\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <Badge variant=\"success\" size=\"sm\">🔒 HIPAA Compliant</Badge>\r\n                                <Badge variant=\"primary\" size=\"sm\" className=\"ml-2\">👨‍⚕️ Medical Access</Badge>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center space-x-4\">\r\n                            <Timer\r\n                                duration={sessionTimeLeft}\r\n                                onExpire={handleSessionExpire}\r\n                                className=\"text-sm\"\r\n                            />\r\n\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <img\r\n                                    className=\"h-8 w-8 rounded-full\"\r\n                                    src={`https://ui-avatars.com/api/?name=${user.name}&background=2563eb&color=fff`}\r\n                                    alt={user.name}\r\n                                />\r\n                                <div className=\"text-sm\">\r\n                                    <div className=\"font-medium text-gray-900\">{user.name}</div>\r\n                                    <div className=\"text-blue-600 font-semibold\">{user.role.toUpperCase()}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button\r\n                                onClick={onLogout}\r\n                                className=\"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\"\r\n                            >\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            {/* Navigation Tabs */}\r\n            <div className=\"bg-white border-b\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                    <nav className=\"flex space-x-8\">\r\n                        {[\r\n                            { id: 'patients', label: '👥 My Patients', icon: '👥' },\r\n                            { id: 'records', label: '📋 Medical Records', icon: '📋' },\r\n                            { id: 'insurance', label: '💰 Insurance Claims', icon: '💰' },\r\n                            { id: 'nfts', label: '🎨 NFT Health Records', icon: '🎨' },\r\n                            { id: 'security', label: '🔒 Security Tools', icon: '🔒' }\r\n                        ].map((tab) => (\r\n                            <button\r\n                                key={tab.id}\r\n                                onClick={() => setActiveTab(tab.id as any)}\r\n                                className={`py-4 px-1 border-b-2 font-medium text-sm ${activeTab === tab.id\r\n                                    ? 'border-blue-500 text-blue-600'\r\n                                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                                    }`}\r\n                            >\r\n                                {tab.label}\r\n                            </button>\r\n                        ))}\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Main Content */}\r\n            <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n\r\n                {/* Patients Tab */}\r\n                {activeTab === 'patients' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">👥 My Patients</h3>\r\n                            <div className=\"flex items-center space-x-4\">\r\n                                <button\r\n                                    onClick={handleAddNewPatient}\r\n                                    className=\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\"\r\n                                >\r\n                                    + New Patient\r\n                                </button>\r\n                                <div className=\"text-sm text-gray-500\">\r\n                                    {myPatients.length} active patients\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"grid gap-6\">\r\n                                {myPatients.map((patient) => (\r\n                                    <div key={patient.id} className=\"border rounded-lg p-6 hover:shadow-md transition-shadow\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex items-center space-x-4\">\r\n                                                <img\r\n                                                    className=\"h-12 w-12 rounded-full\"\r\n                                                    src={`https://ui-avatars.com/api/?name=${patient.name}&background=random`}\r\n                                                    alt={patient.name}\r\n                                                />\r\n                                                <div>\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">{patient.name}</h4>\r\n                                                    <p className=\"text-sm text-gray-500\">{patient.email}</p>\r\n                                                    <p className=\"text-sm text-gray-500\">DOB: {patient.dateOfBirth}</p>\r\n                                                    <p className=\"text-sm text-gray-500\">Phone: {patient.phoneNumber}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <Badge variant=\"success\" size=\"sm\">Active</Badge>\r\n                                                <p className=\"text-sm text-gray-500 mt-2\">Last Visit: {patient.lastVisit}</p>\r\n                                                <p className=\"text-sm text-blue-600 font-medium\">Next: {patient.upcomingAppointment}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                            <div>\r\n                                                <p className=\"text-sm font-medium text-gray-900\">Insurance</p>\r\n                                                <p className=\"text-sm text-gray-500\">{patient.insuranceProvider}</p>\r\n                                                <p className=\"text-sm text-gray-400 font-mono\">{patient.insurancePolicyNumber}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-sm font-medium text-gray-900\">Emergency Contact</p>\r\n                                                <p className=\"text-sm text-gray-500\">{patient.emergencyContact}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"mt-4 flex space-x-3\">\r\n                                            <button\r\n                                                onClick={handleCreateRecord}\r\n                                                className=\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\"\r\n                                            >\r\n                                                📋 New Record\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleSubmitInsuranceClaim(patient.id)}\r\n                                                className=\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\"\r\n                                            >\r\n                                                💰 Submit Claim\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleViewHistory(patient.id)}\r\n                                                className=\"bg-gray-600 text-white px-4 py-2 rounded text-sm hover:bg-gray-700\"\r\n                                            >\r\n                                                👁️ View History\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleDownloadPatientPDF(patient.id)}\r\n                                                className=\"bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700\"\r\n                                            >\r\n                                                📄 Download Records\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Medical Records Tab */}\r\n                {activeTab === 'records' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">📋 Recent Medical Records</h3>\r\n                            <button\r\n                                onClick={handleCreateRecord}\r\n                                className=\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\"\r\n                            >\r\n                                + New Record\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"space-y-6\">\r\n                                {recentRecords.map((record) => (\r\n                                    <div key={record.id} className=\"border rounded-lg p-6\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">{record.title}</h4>\r\n                                                    {recordEncryptionStatus[record.id] ? (\r\n                                                        <Badge variant=\"warning\" size=\"sm\">🔒 ENCRYPTED</Badge>\r\n                                                    ) : (\r\n                                                        <Badge variant=\"success\" size=\"sm\">� Plain Text</Badge>\r\n                                                    )}\r\n                                                    <Badge variant=\"primary\" size=\"sm\">🧱 On-Chain</Badge>\r\n                                                    {record.nftTokenId && (\r\n                                                        <Badge variant=\"secondary\" size=\"sm\">🎨 NFT</Badge>\r\n                                                    )}\r\n                                                </div>\r\n                                                <p className=\"text-sm text-gray-600 mb-2\">{record.description}</p>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === record.patientId)?.name}</p>\r\n                                                        <p><span className=\"font-medium\">Date:</span> {record.date}</p>\r\n                                                        <p><span className=\"font-medium\">Diagnosis:</span> {record.diagnosis}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Prescription:</span> {record.prescription}</p>\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Blockchain:</span> {record.blockchainHash}</p>\r\n                                                        {record.ipfsHash && (\r\n                                                            <p className=\"font-mono text-xs\"><span className=\"font-medium\">IPFS:</span> {record.ipfsHash}</p>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"ml-4 flex flex-col space-y-2\">\r\n                                                {!record.nftTokenId && (\r\n                                                    <button\r\n                                                        onClick={() => handleMintNFT(record.id)}\r\n                                                        className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\"\r\n                                                    >\r\n                                                        🎨 Mint NFT\r\n                                                    </button>\r\n                                                )}\r\n                                                <button\r\n                                                    onClick={() => handleEncryptRecord(record.id)}\r\n                                                    className=\"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\"\r\n                                                >\r\n                                                    🔒 Encrypt\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDecryptRecord(record.id)}\r\n                                                    className=\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\"\r\n                                                >\r\n                                                    🔓 Decrypt\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleViewRecord(record.id)}\r\n                                                    className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\"\r\n                                                >\r\n                                                    👁️ View\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDownloadPDF(record.id)}\r\n                                                    className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\"\r\n                                                >\r\n                                                    📄 Download PDF\r\n                                                </button>\r\n                                                <button className=\"bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700\">\r\n                                                    ✏️ Edit\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Insurance Claims Tab */}\r\n                {activeTab === 'insurance' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">💰 Insurance Claims</h3>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"space-y-6\">\r\n                                {insuranceClaims.map((claim) => (\r\n                                    <div key={claim.id} className=\"border rounded-lg p-6\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">Claim #{claim.claimNumber}</h4>\r\n                                                    <Badge variant={getStatusColor(claim.status)} size=\"sm\">\r\n                                                        {claim.status.toUpperCase()}\r\n                                                    </Badge>\r\n                                                    {claim.isProcessedOnChain && (\r\n                                                        <Badge variant=\"primary\" size=\"sm\">🧱 On-Chain</Badge>\r\n                                                    )}\r\n                                                </div>\r\n                                                <p className=\"text-sm text-gray-600 mb-2\">{claim.description}</p>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === claim.patientId)?.name}</p>\r\n                                                        <p><span className=\"font-medium\">Amount:</span> ${claim.amount.toFixed(2)}</p>\r\n                                                        <p><span className=\"font-medium\">Submitted:</span> {claim.submissionDate}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Provider:</span> {claim.insuranceProvider}</p>\r\n                                                        {claim.approvalDate && (\r\n                                                            <p><span className=\"font-medium\">Approved:</span> {claim.approvalDate}</p>\r\n                                                        )}\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Contract:</span> {claim.smartContractAddress}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Tx ID:</span> {claim.blockchainTxId?.substring(0, 20)}...</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"ml-4\">\r\n                                                <button\r\n                                                    onClick={() => handleViewInsuranceClaim(claim.id)}\r\n                                                    className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\"\r\n                                                >\r\n                                                    👁️ View Details\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* NFT Health Records Tab */}\r\n                {activeTab === 'nfts' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">🎨 NFT Health Records</h3>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                                {nftRecords.map((nft) => (\r\n                                    <div key={nft.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                                        <div className=\"aspect-square bg-gradient-to-br from-blue-400 to-purple-500 rounded-lg mb-4 flex items-center justify-center\">\r\n                                            <span className=\"text-white text-4xl\">🏥</span>\r\n                                        </div>\r\n                                        <div className=\"space-y-2\">\r\n                                            <h4 className=\"font-medium text-gray-900\">{nft.name}</h4>\r\n                                            <p className=\"text-sm text-gray-600\">{nft.description}</p>\r\n                                            <div className=\"text-xs space-y-1\">\r\n                                                <p><span className=\"font-medium\">Token ID:</span> {nft.tokenId}</p>\r\n                                                <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === nft.patientId)?.name}</p>\r\n                                                <p><span className=\"font-medium\">Network:</span> {nft.blockchainNetwork}</p>\r\n                                                <p><span className=\"font-medium\">Minted:</span> {new Date(nft.mintDate).toLocaleDateString()}</p>\r\n                                                <p className=\"font-mono\"><span className=\"font-medium\">Contract:</span> {nft.contractAddress.substring(0, 10)}...</p>\r\n                                            </div>\r\n                                            <div className=\"flex items-center justify-between pt-2\">\r\n                                                <Badge variant=\"secondary\" size=\"sm\">\r\n                                                    {nft.isTransferable ? 'Transferable' : 'Non-Transferable'}\r\n                                                </Badge>\r\n                                                <button\r\n                                                    onClick={() => handleViewNFT(nft.id)}\r\n                                                    className=\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700\"\r\n                                                >\r\n                                                    👁️ View NFT\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Security Tools Tab */}\r\n                {activeTab === 'security' && (\r\n                    <div className=\"space-y-6\">\r\n                        <div className=\"bg-white shadow rounded-lg\">\r\n                            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                                <h3 className=\"text-lg font-medium text-gray-900\">🔒 Encryption & Security Tools</h3>\r\n                                <p className=\"text-sm text-gray-500 mt-1\">Secure patient records with advanced encryption</p>\r\n                            </div>\r\n                            <div className=\"p-6\">\r\n                                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                                    <div className=\"space-y-4\">\r\n                                        <h4 className=\"font-medium text-gray-900\">🔐 Record Encryption</h4>\r\n                                        <p className=\"text-sm text-gray-600\">Encrypt sensitive medical records for enhanced security</p>\r\n                                        <div className=\"space-y-2\">\r\n                                            {recentRecords.slice(0, 3).map((record) => (\r\n                                                <div key={record.id} className=\"flex items-center justify-between p-3 border rounded\">\r\n                                                    <div className=\"flex-1\">\r\n                                                        <div className=\"flex items-center space-x-2\">\r\n                                                            <p className=\"font-medium text-sm\">{record.title}</p>\r\n                                                            {recordEncryptionStatus[record.id] && (\r\n                                                                <Badge variant=\"warning\" size=\"sm\">🔒 ENCRYPTED</Badge>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        <p className=\"text-xs text-gray-500\">\r\n                                                            Patient: {myPatients.find(p => p.id === record.patientId)?.name || record.patientId}\r\n                                                        </p>\r\n                                                        {recordEncryptionStatus[record.id] && (\r\n                                                            <p className=\"text-xs text-green-600\">🛡️ Password Protected</p>\r\n                                                        )}\r\n                                                    </div>\r\n                                                    <div className=\"flex space-x-2\">\r\n                                                        <button\r\n                                                            onClick={() => handleEncryptRecord(record.id)}\r\n                                                            className={`px-2 py-1 rounded text-xs ${recordEncryptionStatus[record.id]\r\n                                                                ? 'bg-gray-400 text-gray-600 cursor-not-allowed'\r\n                                                                : 'bg-green-600 text-white hover:bg-green-700'}`}\r\n                                                            disabled={recordEncryptionStatus[record.id]}\r\n                                                        >\r\n                                                            🔒 Encrypt\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => handleDecryptRecord(record.id)}\r\n                                                            className={`px-2 py-1 rounded text-xs ${recordEncryptionStatus[record.id]\r\n                                                                ? 'bg-orange-600 text-white hover:bg-orange-700'\r\n                                                                : 'bg-gray-400 text-gray-600 cursor-not-allowed'}`}\r\n                                                            disabled={!recordEncryptionStatus[record.id]}\r\n                                                        >\r\n                                                            🔓 Decrypt\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => handleDownloadPDF(record.id)}\r\n                                                            className=\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700\"\r\n                                                        >\r\n                                                            📄 PDF\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"space-y-4\">\r\n                                        <h4 className=\"font-medium text-gray-900\">📋 Clipboard Security</h4>\r\n                                        <p className=\"text-sm text-gray-600\">Monitor clipboard for suspicious wallet addresses</p>\r\n                                        <div className=\"p-4 border rounded-lg\">\r\n                                            <div className=\"flex items-center justify-between mb-3\">\r\n                                                <span className=\"text-sm font-medium\">Clipboard Monitoring</span>\r\n                                                <Badge variant={clipboardMonitoring ? 'success' : 'secondary'} size=\"sm\">\r\n                                                    {clipboardMonitoring ? 'Active' : 'Inactive'}\r\n                                                </Badge>\r\n                                            </div>\r\n                                            <button\r\n                                                onClick={toggleClipboardMonitoring}\r\n                                                className={`w-full px-4 py-2 rounded text-sm ${clipboardMonitoring\r\n                                                    ? 'bg-red-600 hover:bg-red-700 text-white'\r\n                                                    : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n                                                    }`}\r\n                                            >\r\n                                                {clipboardMonitoring ? '⏹️ Stop Monitoring' : '🔍 Start Monitoring'}\r\n                                            </button>\r\n                                            <div className=\"mt-3 text-xs text-gray-500\">\r\n                                                <p>• Detects cryptocurrency wallet addresses</p>\r\n                                                <p>• Alerts on suspicious clipboard activity</p>\r\n                                                <p>• Protects against clipboard hijacking</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                                    <div className=\"flex items-start\">\r\n                                        <span className=\"text-yellow-600 text-lg mr-2\">⚠️</span>\r\n                                        <div>\r\n                                            <h5 className=\"font-medium text-yellow-800\">Security Notice</h5>\r\n                                            <p className=\"text-sm text-yellow-700 mt-1\">\r\n                                                Always ensure patient records are encrypted before transmission.\r\n                                                Use blockchain verification for data integrity and monitor for suspicious activities.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </main>\r\n\r\n            {/* Create Record Modal */}\r\n            {showCreateRecordModal && (\r\n                <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n                    <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\r\n                        <div className=\"mt-3\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New Medical Record</h3>\r\n                            <div className=\"space-y-4\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Patient</label>\r\n                                    <select\r\n                                        value={newRecordForm.patientId}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, patientId: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                    >\r\n                                        <option value=\"\">Select Patient</option>\r\n                                        {myPatients.map((patient) => (\r\n                                            <option key={patient.id} value={patient.id}>{patient.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Title</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newRecordForm.title}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, title: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"Record title\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Diagnosis</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newRecordForm.diagnosis}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, diagnosis: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"Diagnosis\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Prescription</label>\r\n                                    <textarea\r\n                                        value={newRecordForm.prescription}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, prescription: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        rows={3}\r\n                                        placeholder=\"Prescription details\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n                                    <textarea\r\n                                        value={newRecordForm.description}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, description: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        rows={3}\r\n                                        placeholder=\"Additional notes\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex justify-end space-x-3 mt-6\">\r\n                                <button\r\n                                    onClick={() => setShowCreateRecordModal(false)}\r\n                                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    onClick={handleSaveRecord}\r\n                                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n                                >\r\n                                    Create Record\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Insurance Claim Modal */}\r\n            {showClaimModal && (\r\n                <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n                    <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\r\n                        <div className=\"mt-3\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Submit Insurance Claim</h3>\r\n                            <div className=\"space-y-4\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Patient</label>\r\n                                    <select\r\n                                        value={newClaimForm.patientId}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, patientId: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                    >\r\n                                        <option value=\"\">Select Patient</option>\r\n                                        {myPatients.map((patient) => (\r\n                                            <option key={patient.id} value={patient.id}>{patient.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Insurance Provider</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newClaimForm.insuranceProvider}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, insuranceProvider: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"Insurance company name\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Claim Amount ($)</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={newClaimForm.amount}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, amount: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"0.00\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n                                    <textarea\r\n                                        value={newClaimForm.description}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, description: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        rows={4}\r\n                                        placeholder=\"Claim description and details\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex justify-end space-x-3 mt-6\">\r\n                                <button\r\n                                    onClick={() => setShowClaimModal(false)}\r\n                                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    onClick={handleSaveClaim}\r\n                                    className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\r\n                                >\r\n                                    Submit Claim\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}