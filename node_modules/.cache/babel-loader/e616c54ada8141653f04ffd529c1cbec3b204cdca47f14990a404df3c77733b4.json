{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATA\\\\CAREER\\\\INTERNSHIPS\\\\EMRChains Internship NSTP\\\\PROJECTS\\\\HEALTHCARE_SYSTEM\\\\src\\\\components\\\\Dashboard\\\\DoctorDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Badge from '../UI/Badge';\nimport Timer from '../UI/Timer';\nimport { RoleBasedAccessService } from '../../services/rbacService';\nimport { EncryptionService } from '../../services/encryption';\nimport { sharedStateService } from '../../services/sharedState';\nimport { pdfService } from '../../services/pdfService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [sessionTimeLeft] = useState(1800);\n  const [rbacService] = useState(new RoleBasedAccessService());\n  const [activeTab, setActiveTab] = useState('patients');\n\n  // Modal states\n  const [showCreateRecordModal, setShowCreateRecordModal] = useState(false);\n  const [showClaimModal, setShowClaimModal] = useState(false);\n  const [, setSelectedPatientId] = useState('');\n\n  // Security states\n  const [clipboardMonitoring, setClipboardMonitoring] = useState(false);\n  const [encryptedRecords, setEncryptedRecords] = useState({});\n  const [recordEncryptionStatus, setRecordEncryptionStatus] = useState({});\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [selectedEncryptedFiles, setSelectedEncryptedFiles] = useState([]);\n\n  // Form states\n  const [newRecordForm, setNewRecordForm] = useState({\n    patientId: '',\n    title: '',\n    description: '',\n    diagnosis: '',\n    prescription: '',\n    notes: ''\n  });\n  const [newClaimForm, setNewClaimForm] = useState({\n    patientId: '',\n    amount: '',\n    description: '',\n    insuranceProvider: ''\n  });\n  const [myPatients, setMyPatients] = useState([]);\n  const [recentRecords, setRecentRecords] = useState([]);\n\n  // Initialize data from shared state service\n  useEffect(() => {\n    const patients = sharedStateService.getPatients();\n    // Get ALL medical records (not just doctor's own records) so doctor can see patient-added records\n    const allRecords = sharedStateService.getMedicalRecords();\n    setMyPatients(patients);\n    setRecentRecords(allRecords);\n\n    // Subscribe to changes\n    const unsubscribePatients = sharedStateService.onPatientsChange(setMyPatients);\n    const unsubscribeRecords = sharedStateService.onMedicalRecordsChange(allRecords => {\n      // Show all records so doctor can see patient-added records\n      setRecentRecords(allRecords);\n    });\n    return () => {\n      unsubscribePatients();\n      unsubscribeRecords();\n    };\n  }, [user.id]);\n  const [insuranceClaims] = useState([{\n    id: 'claim-1',\n    claimNumber: 'CLM-2025-001',\n    patientId: 'patient-1',\n    providerId: user.id,\n    doctorId: user.id,\n    insuranceCompany: 'HealthFirst Insurance',\n    insuranceProvider: 'HealthFirst Insurance',\n    amount: 450.00,\n    status: 'approved',\n    submittedAt: '2025-07-01T10:00:00Z',\n    submissionDate: '2025-07-01',\n    approvalDate: '2025-07-03',\n    description: 'Annual physical examination and blood work',\n    relatedRecords: ['record-1'],\n    smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\n    blockchainTxId: '0xabc123def456789abcdef123456789abc123def456789abcdef',\n    isProcessedOnChain: true,\n    approvalSignatures: [],\n    ipfsDocuments: []\n  }, {\n    id: 'claim-2',\n    claimNumber: 'CLM-2025-002',\n    patientId: 'patient-2',\n    providerId: user.id,\n    doctorId: user.id,\n    insuranceCompany: 'MediCare Plus',\n    insuranceProvider: 'MediCare Plus',\n    amount: 275.50,\n    status: 'pending',\n    submittedAt: '2025-07-04T14:30:00Z',\n    submissionDate: '2025-07-04',\n    description: 'Follow-up consultation and medication review',\n    relatedRecords: ['record-2'],\n    smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\n    blockchainTxId: '0xdef456abc789123def456abc789123def456abc789123def',\n    isProcessedOnChain: false,\n    approvalSignatures: [],\n    ipfsDocuments: []\n  }]);\n  const [nftRecords] = useState([{\n    id: 'nft-1',\n    tokenId: 'HEALTH-NFT-001',\n    patientId: 'patient-1',\n    recordId: 'record-1',\n    name: 'Annual Physical 2025',\n    description: 'Comprehensive health examination record',\n    imageUrl: 'https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=NFT-001',\n    metadataUri: 'ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP',\n    contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\n    blockchainNetwork: 'Ethereum',\n    mintDate: '2025-07-04T10:30:00Z',\n    currentOwner: 'patient-1',\n    isTransferable: false,\n    accessLevel: 'doctor_patient'\n  }, {\n    id: 'nft-2',\n    tokenId: 'HEALTH-NFT-002',\n    patientId: 'patient-2',\n    recordId: 'record-2',\n    name: 'Follow-up Consultation',\n    description: 'Treatment follow-up and medication adjustment',\n    imageUrl: 'https://via.placeholder.com/200x200/059669/FFFFFF?text=NFT-002',\n    metadataUri: 'ipfs://QmY8AX6sRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0nQ',\n    contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\n    blockchainNetwork: 'Ethereum',\n    mintDate: '2025-07-03T14:45:00Z',\n    currentOwner: 'patient-2',\n    isTransferable: false,\n    accessLevel: 'doctor_patient'\n  }]);\n  useEffect(() => {\n    rbacService.setCurrentUser(user);\n  }, [user, rbacService]);\n  const handleSessionExpire = () => {\n    window.confirm('Session expired for security. Please login again.') && onLogout();\n  };\n  const handleCreateRecord = () => {\n    setShowCreateRecordModal(true);\n  };\n  const handleSubmitInsuranceClaim = patientId => {\n    setSelectedPatientId(patientId);\n    setNewClaimForm(prev => ({\n      ...prev,\n      patientId\n    }));\n    setShowClaimModal(true);\n  };\n  const handleMintNFT = recordId => {\n    alert(`NFT minting initiated for record ${recordId}. This will create a secure, immutable NFT on the blockchain.`);\n    console.log(`Minting NFT for record: ${recordId}`);\n  };\n  const handleViewHistory = patientId => {\n    const patient = myPatients.find(p => p.id === patientId);\n    const patientRecords = recentRecords.filter(record => record.patientId === patientId);\n    if (patient && patientRecords.length > 0) {\n      const historyDetails = patientRecords.map(record => `üìã ${record.title} (${record.date})\\n   Diagnosis: ${record.diagnosis}\\n   Prescription: ${record.prescription}`).join('\\n\\n');\n      alert(`üë• Medical History for ${patient.name}\nüìß Email: ${patient.email}\nüéÇ DOB: ${patient.dateOfBirth}\nüè• Insurance: ${patient.insuranceProvider}\nüìû Phone: ${patient.phoneNumber}\nüè† Address: ${patient.address}\nüö® Emergency Contact: ${patient.emergencyContact}\nüìÖ Last Visit: ${patient.lastVisit}\n‚è≠Ô∏è Next Appointment: ${patient.upcomingAppointment}\n\nüìã MEDICAL RECORDS:\n${historyDetails}\n\nTotal Records: ${patientRecords.length}`);\n    } else {\n      alert(`No medical history found for this patient.`);\n    }\n  };\n  const handleEncryptRecord = recordId => {\n    const record = recentRecords.find(r => r.id === recordId);\n    if (record) {\n      var _myPatients$find;\n      // Check if already encrypted\n      if (recordEncryptionStatus[recordId]) {\n        alert('‚ö†Ô∏è This record is already encrypted. Please decrypt it first if you want to re-encrypt with a different password.');\n        return;\n      }\n      const password = prompt(`üîí Enter a password to encrypt \"${record.title}\" for patient: ${((_myPatients$find = myPatients.find(p => p.id === record.patientId)) === null || _myPatients$find === void 0 ? void 0 : _myPatients$find.name) || record.patientId}`);\n      if (password && password.trim()) {\n        try {\n          var _myPatients$find2;\n          // Create a custom encryption service with the user's password\n          const customEncryption = new EncryptionService();\n          const recordData = {\n            ...record,\n            encryptedBy: user.name,\n            encryptedAt: new Date().toISOString()\n          };\n\n          // Use password-based encryption\n          const salt = customEncryption.generateSalt();\n          customEncryption.deriveKey(password, salt); // Generate derived key for security\n          const encryptedData = customEncryption.encryptData(JSON.stringify(recordData));\n\n          // Store the encrypted data and metadata\n          setEncryptedRecords(prev => ({\n            ...prev,\n            [recordId]: encryptedData\n          }));\n          setRecordEncryptionStatus(prev => ({\n            ...prev,\n            [recordId]: true\n          }));\n          alert(`üîí SUCCESS! Record \"${record.title}\" has been encrypted with your custom password.\n                    \nüìã Record: ${record.title}\nüë§ Patient: ${(_myPatients$find2 = myPatients.find(p => p.id === record.patientId)) === null || _myPatients$find2 === void 0 ? void 0 : _myPatients$find2.name}\nüîê Status: ENCRYPTED\nüõ°Ô∏è Security Level: AES-256 + Password Protection\nüìÖ Encrypted At: ${new Date().toLocaleString()}\nüë®‚Äç‚öïÔ∏è Encrypted By: ${user.name}\n\n‚ö†Ô∏è Remember your password - it will be required for decryption!`);\n        } catch (error) {\n          alert('‚ùå Encryption failed. Please try again.');\n        }\n      } else {\n        alert('‚ùå Password is required for encryption.');\n      }\n    }\n  };\n  const handleDecryptRecord = recordId => {\n    // Check if record is encrypted\n    if (!recordEncryptionStatus[recordId]) {\n      alert('‚ÑπÔ∏è This record is not encrypted. No decryption needed.');\n      return;\n    }\n    const encryptedData = encryptedRecords[recordId];\n    if (encryptedData) {\n      const password = prompt(`üîì Enter the password to decrypt this record:`);\n      if (password && password.trim()) {\n        try {\n          var _myPatients$find3;\n          const customEncryption = new EncryptionService();\n\n          // For demo purposes, we'll try to decrypt with the provided password\n          // In a real system, you'd verify the password against the stored hash\n          const decryptedData = customEncryption.decryptData(encryptedData);\n          const record = JSON.parse(decryptedData);\n          alert(`üîì DECRYPTION SUCCESSFUL!\n\nüìã Title: ${record.title}\nüë§ Patient: ${((_myPatients$find3 = myPatients.find(p => p.id === record.patientId)) === null || _myPatients$find3 === void 0 ? void 0 : _myPatients$find3.name) || record.patientId}\nüìÖ Date: ${record.date}\nü©∫ Diagnosis: ${record.diagnosis}\nüíä Prescription: ${record.prescription}\nüìù Description: ${record.description}\n\nüîí Encryption Details:\nüë®‚Äç‚öïÔ∏è Encrypted By: ${record.encryptedBy || 'Unknown'}\nüìÖ Encrypted At: ${record.encryptedAt ? new Date(record.encryptedAt).toLocaleString() : 'Unknown'}\nüõ°Ô∏è Security: Password-protected AES-256`);\n\n          // Ask if user wants to permanently decrypt\n          const permanentDecrypt = window.confirm('üîì Do you want to permanently decrypt this record? (This will remove encryption)');\n          if (permanentDecrypt) {\n            setEncryptedRecords(prev => {\n              const updated = {\n                ...prev\n              };\n              delete updated[recordId];\n              return updated;\n            });\n            setRecordEncryptionStatus(prev => ({\n              ...prev,\n              [recordId]: false\n            }));\n            alert('‚úÖ Record has been permanently decrypted and is now in plain text.');\n          }\n        } catch (error) {\n          alert('‚ùå Decryption failed. Incorrect password or corrupted data.');\n        }\n      } else {\n        alert('‚ùå Password is required for decryption.');\n      }\n    } else {\n      alert('‚ùå No encrypted data found for this record.');\n    }\n  };\n  const handleViewRecord = recordId => {\n    const record = recentRecords.find(r => r.id === recordId);\n    if (record) {\n      const isEncrypted = recordEncryptionStatus[recordId];\n      const patient = myPatients.find(p => p.id === record.patientId);\n      if (isEncrypted) {\n        const viewEncrypted = window.confirm(`üîí This record is encrypted. \n\nDo you want to:\n- Click \"OK\" to view encrypted version\n- Click \"Cancel\" to decrypt and view`);\n        if (viewEncrypted) {\n          // Show encrypted version\n          alert(`üîí ENCRYPTED RECORD VIEW\n\nüìã Title: ${record.title}\nüë§ Patient: ${(patient === null || patient === void 0 ? void 0 : patient.name) || record.patientId}\nüìÖ Date: ${record.date}\nüîê Status: ENCRYPTED\nüõ°Ô∏è Security: Password Protected\n\n‚ö†Ô∏è Content is encrypted and cannot be displayed in plain text.\nUse the decrypt button to view the full content.`);\n        } else {\n          // Trigger decryption process\n          handleDecryptRecord(recordId);\n        }\n      } else {\n        // Show full record details\n        alert(`üëÅÔ∏è MEDICAL RECORD DETAILS\n\nüìã Title: ${record.title}\nüë§ Patient: ${(patient === null || patient === void 0 ? void 0 : patient.name) || record.patientId}\nüìß Email: ${(patient === null || patient === void 0 ? void 0 : patient.email) || 'N/A'}\nüìÖ Date: ${record.date}\nü©∫ Diagnosis: ${record.diagnosis}\nüíä Prescription: ${record.prescription}\nüìù Description: ${record.description}\n\nüîó Blockchain Details:\nüß± Hash: ${record.blockchainHash || 'N/A'}\nüìé IPFS: ${record.ipfsHash || 'N/A'}\nüé® NFT Token: ${record.nftTokenId || 'Not minted'}\n‚úÖ Verified: ${record.isVerified ? 'Yes' : 'No'}\nüîê Encryption: Not encrypted`);\n      }\n    }\n  };\n  const toggleClipboardMonitoring = () => {\n    const newState = !clipboardMonitoring;\n    setClipboardMonitoring(newState);\n    if (newState) {\n      alert('üîç Clipboard monitoring enabled. The system will monitor for suspicious wallet addresses.');\n      // In a real application, you would start actual clipboard monitoring here\n    } else {\n      alert('‚èπÔ∏è Clipboard monitoring disabled.');\n    }\n  };\n  const handleViewInsuranceClaim = claimId => {\n    const claim = insuranceClaims.find(c => c.id === claimId);\n    if (claim) {\n      const patient = myPatients.find(p => p.id === claim.patientId);\n      alert(`üí∞ Insurance Claim Details\n\nüìã Claim Number: ${claim.claimNumber}\nüë§ Patient: ${(patient === null || patient === void 0 ? void 0 : patient.name) || claim.patientId}\nüíµ Amount: $${claim.amount.toFixed(2)}\nüìä Status: ${claim.status.toUpperCase()}\nüè• Insurance Provider: ${claim.insuranceProvider}\nüìÖ Submitted: ${claim.submissionDate}\n${claim.approvalDate ? `‚úÖ Approved: ${claim.approvalDate}` : '‚è≥ Pending approval'}\nüìù Description: ${claim.description || 'No description provided'}\n\nüîó Blockchain Details:\nüìã Contract Address: ${claim.smartContractAddress}\nüÜî Transaction ID: ${claim.blockchainTxId}\n‚õìÔ∏è On-Chain Status: ${claim.isProcessedOnChain ? 'Processed' : 'Pending'}\n\nüìÑ Related Records: ${claim.relatedRecords.length} record(s)\nüìé Documents: ${claim.ipfsDocuments.length} file(s) on IPFS`);\n    }\n  };\n  const handleSaveRecord = () => {\n    if (!newRecordForm.title || !newRecordForm.patientId) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    // Find patient details\n    const patient = myPatients.find(p => p.id === newRecordForm.patientId);\n    if (!patient) {\n      alert('Patient not found');\n      return;\n    }\n\n    // Create new record with proper ID generation\n    const newRecord = {\n      id: sharedStateService.generateId('record'),\n      patientId: newRecordForm.patientId,\n      doctorId: user.id,\n      title: newRecordForm.title,\n      description: newRecordForm.description,\n      date: new Date().toISOString().split('T')[0],\n      // Format as YYYY-MM-DD\n      diagnosis: newRecordForm.diagnosis,\n      prescription: newRecordForm.prescription,\n      isEncrypted: false,\n      // Initially not encrypted\n      isVerified: true,\n      accessPermissions: [user.id, newRecordForm.patientId],\n      blockchainHash: `0x${Date.now().toString(16)}abc${Math.random().toString(16).slice(2, 8)}`,\n      ipfsHash: `Qm${Math.random().toString(36).slice(2, 15)}${Date.now().toString(36)}`,\n      nftTokenId: undefined // Will be set when NFT is minted\n    };\n\n    // Add to shared state (will automatically update all components)\n    sharedStateService.addMedicalRecord(newRecord);\n\n    // Show success message with patient name\n    alert(`‚úÖ Medical record created successfully!\n\nüìã Record: ${newRecord.title}\nüë§ Patient: ${patient.name}\nüìÖ Date: ${newRecord.date}\nü©∫ Diagnosis: ${newRecord.diagnosis}\nüíä Prescription: ${newRecord.prescription}\n\nThe record has been added to your medical records list and is ready for encryption if needed.`);\n    setShowCreateRecordModal(false);\n    setNewRecordForm({\n      patientId: '',\n      title: '',\n      description: '',\n      diagnosis: '',\n      prescription: '',\n      notes: ''\n    });\n  };\n  const handleSaveClaim = () => {\n    if (!newClaimForm.amount || !newClaimForm.description) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    // Create new insurance claim\n    // const newClaim: InsuranceClaim = {\n    //     id: `claim-${Date.now()}`,\n    //     claimNumber: `CLAIM-${Date.now()}`,\n    //     patientId: newClaimForm.patientId,\n    //     providerId: user.id,\n    //     doctorId: user.id,\n    //     insuranceCompany: newClaimForm.insuranceProvider,\n    //     insuranceProvider: newClaimForm.insuranceProvider,\n    //     amount: parseFloat(newClaimForm.amount),\n    //     status: 'pending',\n    //     submittedAt: new Date().toISOString(),\n    //     submissionDate: new Date().toLocaleDateString(),\n    //     description: newClaimForm.description,\n    //     relatedRecords: [],\n    //     smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\n    //     blockchainTxId: `0x${Date.now().toString(16)}`,\n    //     isProcessedOnChain: false,\n    //     approvalSignatures: [],\n    //     ipfsDocuments: []\n    // };\n\n    alert('Insurance claim submitted successfully!');\n    setShowClaimModal(false);\n    setNewClaimForm({\n      patientId: '',\n      amount: '',\n      description: '',\n      insuranceProvider: ''\n    });\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'approved':\n        return 'success';\n      case 'pending':\n        return 'warning';\n      case 'rejected':\n        return 'error';\n      case 'paid':\n        return 'success';\n      case 'under_review':\n        return 'info';\n      case 'submitted':\n        return 'primary';\n      default:\n        return 'secondary';\n    }\n  };\n  const handleDownloadPDF = async recordId => {\n    const record = recentRecords.find(r => r.id === recordId);\n    if (!record) {\n      alert('Record not found');\n      return;\n    }\n    const patient = myPatients.find(p => p.id === record.patientId);\n    if (!patient) {\n      alert('Patient not found');\n      return;\n    }\n    try {\n      // Always download unencrypted PDF (encryption will be done in Security Tools)\n      await pdfService.downloadMedicalRecordPDF(record, patient, {\n        includeWatermark: true,\n        isEncrypted: false,\n        password: ''\n      });\n      alert(`‚úÖ PDF Downloaded Successfully!\n\nüìÑ File: medical_record_${record.id}_${patient.name.replace(/\\s+/g, '_')}.pdf\nüîê Status: UNENCRYPTED (ready for encryption in Security Tools)\nüö® Watermark: CONFIDENTIAL (at top of document)\nüë§ Patient: ${patient.name}\nüìã Record: ${record.title}\n\nüí° Next Steps:\n1. Go to Security Tools tab\n2. Select this PDF file to encrypt\n3. Choose a strong password for encryption\n\nThe PDF has been saved to your downloads folder.`);\n    } catch (error) {\n      console.error('PDF download error:', error);\n      alert(`‚ùå Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  };\n  const handleDownloadPatientPDF = async patientId => {\n    const patient = myPatients.find(p => p.id === patientId);\n    if (!patient) {\n      alert('Patient not found');\n      return;\n    }\n    const patientRecords = recentRecords.filter(record => record.patientId === patientId);\n    if (patientRecords.length === 0) {\n      alert(`No medical records found for ${patient.name}. Create some records first.`);\n      return;\n    }\n    try {\n      if (patientRecords.length === 1) {\n        // Single record\n        await pdfService.downloadMedicalRecordPDF(patientRecords[0], patient, {\n          includeWatermark: true,\n          isEncrypted: false,\n          password: ''\n        });\n      } else {\n        // Multiple records - use batch PDF\n        const batchPDF = await pdfService.generateBatchPDF(patientRecords, [patient], {\n          includeWatermark: true,\n          isEncrypted: false,\n          password: ''\n        });\n\n        // Create download link for batch PDF\n        const url = URL.createObjectURL(batchPDF);\n        const link = document.createElement('a');\n        link.href = url;\n        const filename = `medical_records_${patient.name.replace(/\\s+/g, '_')}_batch.pdf`;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      }\n      alert(`‚úÖ PDF Downloaded Successfully!\n\nüë§ Patient: ${patient.name}\nüìÑ Records: ${patientRecords.length} medical record(s)\nüîê Status: UNENCRYPTED (ready for encryption in Security Tools)\nüö® Watermark: CONFIDENTIAL (at top of document)\n\nüí° Next Steps:\n1. Go to Security Tools tab\n2. Select this PDF file to encrypt\n3. Choose a strong password for encryption\n\nThe PDF has been saved to your downloads folder.`);\n    } catch (error) {\n      console.error('PDF download error:', error);\n      alert(`‚ùå Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  };\n  const handleAddNewPatient = () => {\n    const patientName = prompt('üë§ Enter new patient name:');\n    if (!patientName || !patientName.trim()) {\n      alert('‚ùå Patient name is required');\n      return;\n    }\n    const patientEmail = prompt('üìß Enter patient email:');\n    if (!patientEmail || !patientEmail.trim() || !patientEmail.includes('@')) {\n      alert('‚ùå Valid email is required');\n      return;\n    }\n    const patientDOB = prompt('üéÇ Enter patient date of birth (YYYY-MM-DD):');\n    if (!patientDOB || !patientDOB.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n      alert('‚ùå Date of birth is required in YYYY-MM-DD format');\n      return;\n    }\n    const phoneNumber = prompt('üìû Enter patient phone number:') || '';\n    const address = prompt('üè† Enter patient address:') || '';\n    const emergencyContact = prompt('üö® Enter emergency contact (Name - Phone):') || '';\n    const insuranceProvider = prompt('üè• Enter insurance provider:') || 'None';\n    const insurancePolicyNumber = prompt('üìÑ Enter insurance policy number:') || '';\n    const newPatient = {\n      id: sharedStateService.generateId('patient'),\n      name: patientName.trim(),\n      email: patientEmail.trim(),\n      dateOfBirth: patientDOB,\n      phoneNumber: phoneNumber,\n      address: address,\n      emergencyContact: emergencyContact,\n      insuranceProvider: insuranceProvider,\n      insurancePolicyNumber: insurancePolicyNumber,\n      lastVisit: new Date().toISOString().split('T')[0],\n      upcomingAppointment: 'To be scheduled',\n      isActive: true\n    };\n\n    // Add to shared state\n    sharedStateService.addPatient(newPatient);\n    alert(`‚úÖ New patient added successfully!\n\nüë§ Name: ${newPatient.name}\nüìß Email: ${newPatient.email}\nüéÇ DOB: ${newPatient.dateOfBirth}\nüìû Phone: ${newPatient.phoneNumber}\nüè• Insurance: ${newPatient.insuranceProvider}\n\nThe patient is now available for creating medical records.`);\n  };\n  const handleViewNFT = nftId => {\n    const nft = nftRecords.find(n => n.id === nftId);\n    if (!nft) {\n      alert('‚ùå NFT not found. Please try again.');\n      return;\n    }\n    const patient = myPatients.find(p => p.id === nft.patientId);\n    const relatedRecord = recentRecords.find(r => r.id === nft.recordId);\n    alert(`üé® NFT Health Record Details\n\nüè∑Ô∏è Name: ${nft.name}\nüìù Description: ${nft.description}\nüÜî Token ID: ${nft.tokenId}\nüë§ Patient: ${(patient === null || patient === void 0 ? void 0 : patient.name) || nft.patientId}\nüìã Related Record: ${(relatedRecord === null || relatedRecord === void 0 ? void 0 : relatedRecord.title) || nft.recordId}\n\nüîó Blockchain Details:\nüåê Network: ${nft.blockchainNetwork}\nüìç Contract Address: ${nft.contractAddress}\nüë§ Current Owner: ${nft.currentOwner}\nüìÖ Mint Date: ${new Date(nft.mintDate).toLocaleString()}\nüîÑ Transferable: ${nft.isTransferable ? 'Yes' : 'No'}\nüîê Access Level: ${nft.accessLevel}\n\nüìé Metadata URI: ${nft.metadataUri}\nüñºÔ∏è Image URL: ${nft.imageUrl}\n\n‚úÖ This NFT represents a verified medical record stored securely on the blockchain.\nüõ°Ô∏è The NFT provides immutable proof of medical data authenticity.`);\n  };\n\n  // File encryption handlers\n  const handleFileSelection = event => {\n    const files = event.target.files;\n    if (files) {\n      const pdfFiles = Array.from(files).filter(file => file.type === 'application/pdf');\n      if (pdfFiles.length !== files.length) {\n        alert('‚ö†Ô∏è Only PDF files are allowed. Non-PDF files have been filtered out.');\n      }\n      setSelectedFiles(prev => [...prev, ...pdfFiles]);\n    }\n  };\n  const removeSelectedFile = index => {\n    setSelectedFiles(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleEncryptSelectedFiles = async () => {\n    if (selectedFiles.length === 0) {\n      alert('‚ùå Please select PDF files to encrypt first.');\n      return;\n    }\n    const password = prompt('üîí Enter password to encrypt the selected PDF files:');\n    if (!password || !password.trim()) {\n      alert('‚ùå Password is required for encryption.');\n      return;\n    }\n    try {\n      const encryptedFiles = [];\n      for (const file of selectedFiles) {\n        // Read file as base64\n        const reader = new FileReader();\n        const fileData = await new Promise(resolve => {\n          reader.onload = () => resolve(reader.result);\n          reader.readAsDataURL(file);\n        });\n\n        // Encrypt the file data\n        const customEncryption = new EncryptionService();\n        const salt = customEncryption.generateSalt();\n        customEncryption.deriveKey(password, salt);\n        const encryptedData = customEncryption.encryptData(fileData);\n        encryptedFiles.push({\n          name: file.name.replace('.pdf', '.enc'),\n          // Change extension to .enc\n          encryptedData: encryptedData\n        });\n      }\n\n      // Create download links for encrypted files\n      encryptedFiles.forEach(({\n        name,\n        encryptedData\n      }) => {\n        const blob = new Blob([encryptedData], {\n          type: 'application/octet-stream'\n        });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = name;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      });\n      alert(`‚úÖ Successfully encrypted and downloaded ${encryptedFiles.length} file(s)!\n\nüîê Encryption Details:\nüìÑ Files: ${encryptedFiles.map(f => f.name).join(', ')}\nüõ°Ô∏è Security: AES-256 with password protection\nüìÖ Encrypted: ${new Date().toLocaleString()}\nüîí Format: .enc (encrypted files)\n\n‚ö†Ô∏è Remember your password - you'll need it to decrypt these .enc files!\nüîÑ The encrypted .enc files have been downloaded to your computer.`);\n\n      // Clear selected files\n      setSelectedFiles([]);\n\n      // Reset file input\n      const fileInput = document.getElementById('pdf-file-input');\n      if (fileInput) {\n        fileInput.value = '';\n      }\n    } catch (error) {\n      console.error('File encryption error:', error);\n      alert('‚ùå Failed to encrypt files. Please try again.');\n    }\n  };\n\n  // Encrypted file handlers\n  const handleEncryptedFileSelection = event => {\n    const files = event.target.files;\n    if (files) {\n      const encFiles = Array.from(files).filter(file => file.name.endsWith('.enc'));\n      if (encFiles.length !== files.length) {\n        alert('‚ö†Ô∏è Only .enc files are allowed. Non-.enc files have been filtered out.');\n      }\n      setSelectedEncryptedFiles(prev => [...prev, ...encFiles]);\n    }\n  };\n  const removeSelectedEncryptedFile = index => {\n    setSelectedEncryptedFiles(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleDecryptSelectedFiles = async () => {\n    if (selectedEncryptedFiles.length === 0) {\n      alert('‚ùå Please select .enc files to decrypt first.');\n      return;\n    }\n    const password = prompt('üîì Enter password to decrypt the selected .enc files:');\n    if (!password || !password.trim()) {\n      alert('‚ùå Password is required for decryption.');\n      return;\n    }\n    try {\n      const decryptedFiles = [];\n      for (const file of selectedEncryptedFiles) {\n        // Read encrypted file content\n        const reader = new FileReader();\n        const encryptedContent = await new Promise(resolve => {\n          reader.onload = () => resolve(reader.result);\n          reader.readAsText(file);\n        });\n        try {\n          // Decrypt the file data\n          const customEncryption = new EncryptionService();\n          const decryptedData = customEncryption.decryptData(encryptedContent);\n          decryptedFiles.push({\n            name: file.name.replace('.enc', '.pdf'),\n            // Change extension back to .pdf\n            decryptedData: decryptedData\n          });\n        } catch (decryptError) {\n          alert(`‚ùå Failed to decrypt ${file.name}. Incorrect password or corrupted file.`);\n          continue;\n        }\n      }\n      if (decryptedFiles.length === 0) {\n        alert('‚ùå No files were successfully decrypted. Please check your password.');\n        return;\n      }\n\n      // Create download links for decrypted files\n      decryptedFiles.forEach(({\n        name,\n        decryptedData\n      }) => {\n        // Convert base64 back to blob\n        const byteCharacters = atob(decryptedData.split(',')[1]);\n        const byteNumbers = new Array(byteCharacters.length);\n        for (let i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        const blob = new Blob([byteArray], {\n          type: 'application/pdf'\n        });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = name;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      });\n      alert(`‚úÖ Successfully decrypted and downloaded ${decryptedFiles.length} PDF file(s)!\n\nüîì Decryption Details:\nüìÑ Files: ${decryptedFiles.map(f => f.name).join(', ')}\nüõ°Ô∏è Security: Successfully decrypted with correct password\nüìÖ Decrypted: ${new Date().toLocaleString()}\nüìÑ Format: .pdf (original PDF files restored)\n\n‚úÖ Your PDF files are now available and ready to use!\nüîÑ The decrypted PDF files have been downloaded to your computer.`);\n\n      // Clear selected encrypted files\n      setSelectedEncryptedFiles([]);\n\n      // Reset file input\n      const encFileInput = document.getElementById('enc-file-input');\n      if (encFileInput) {\n        encFileInput.value = '';\n      }\n    } catch (error) {\n      console.error('File decryption error:', error);\n      alert('‚ùå Failed to decrypt files. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center h-16\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-xl font-bold text-gray-900\",\n                children: \"\\uD83E\\uDE7A Doctor Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-4\",\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"success\",\n                size: \"sm\",\n                children: \"\\uD83D\\uDD12 HIPAA Compliant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"primary\",\n                size: \"sm\",\n                className: \"ml-2\",\n                children: \"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Medical Access\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(Timer, {\n              duration: sessionTimeLeft,\n              onExpire: handleSessionExpire,\n              className: \"text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"h-8 w-8 rounded-full\",\n                src: `https://ui-avatars.com/api/?name=${user.name}&background=2563eb&color=fff`,\n                alt: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-gray-900\",\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 915,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-blue-600 font-semibold\",\n                  children: user.role.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onLogout,\n              className: \"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"flex space-x-8\",\n          children: [{\n            id: 'patients',\n            label: 'üë• My Patients',\n            icon: 'üë•'\n          }, {\n            id: 'records',\n            label: 'üìã Medical Records',\n            icon: 'üìã'\n          }, {\n            id: 'insurance',\n            label: 'üí∞ Insurance Claims',\n            icon: 'üí∞'\n          }, {\n            id: 'nfts',\n            label: 'üé® NFT Health Records',\n            icon: 'üé®'\n          }, {\n            id: 'security',\n            label: 'üîí Security Tools',\n            icon: 'üîí'\n          }].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(tab.id),\n            className: `py-4 px-1 border-b-2 font-medium text-sm ${activeTab === tab.id ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`,\n            children: tab.label\n          }, tab.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: [activeTab === 'patients' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"\\uD83D\\uDC65 My Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddNewPatient,\n              className: \"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\",\n              children: \"+ New Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 966,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: [myPatients.length, \" active patients\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 965,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid gap-6\",\n            children: myPatients.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border rounded-lg p-6 hover:shadow-md transition-shadow\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"h-12 w-12 rounded-full\",\n                    src: `https://ui-avatars.com/api/?name=${patient.name}&background=random`,\n                    alt: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 983,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"text-lg font-medium text-gray-900\",\n                      children: patient.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 989,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-500\",\n                      children: patient.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 990,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-500\",\n                      children: [\"DOB: \", patient.dateOfBirth]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 991,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-500\",\n                      children: [\"Phone: \", patient.phoneNumber]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 992,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 988,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: [/*#__PURE__*/_jsxDEV(Badge, {\n                    variant: \"success\",\n                    size: \"sm\",\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 996,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-500 mt-2\",\n                    children: [\"Last Visit: \", patient.lastVisit]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 997,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-blue-600 font-medium\",\n                    children: [\"Next: \", patient.upcomingAppointment]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 998,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: \"Insurance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1003,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-500\",\n                    children: patient.insuranceProvider\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1004,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-400 font-mono\",\n                    children: patient.insurancePolicyNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1005,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1002,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: \"Emergency Contact\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1008,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-500\",\n                    children: patient.emergencyContact\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1009,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1007,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1001,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 flex space-x-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleCreateRecord,\n                  className: \"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\",\n                  children: \"\\uD83D\\uDCCB New Record\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1013,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSubmitInsuranceClaim(patient.id),\n                  className: \"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\",\n                  children: \"\\uD83D\\uDCB0 Submit Claim\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1019,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleViewHistory(patient.id),\n                  className: \"bg-gray-600 text-white px-4 py-2 rounded text-sm hover:bg-gray-700\",\n                  children: \"\\uD83D\\uDC41\\uFE0F View History\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1025,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDownloadPatientPDF(patient.id),\n                  className: \"bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700\",\n                  children: \"\\uD83D\\uDCC4 Download Records\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1031,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 41\n              }, this)]\n            }, patient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 21\n      }, this), activeTab === 'records' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"\\uD83D\\uDCCB Recent Medical Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateRecord,\n            className: \"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\",\n            children: \"+ New Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: recentRecords.map(record => {\n              var _myPatients$find4;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-6\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center space-x-2 mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"text-lg font-medium text-gray-900\",\n                        children: record.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1064,\n                        columnNumber: 53\n                      }, this), record.doctorId === user.id ? /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"primary\",\n                        size: \"sm\",\n                        children: \"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Doctor Added\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1066,\n                        columnNumber: 57\n                      }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"info\",\n                        size: \"sm\",\n                        children: \"\\uD83D\\uDC64 Patient Added\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1068,\n                        columnNumber: 57\n                      }, this), recordEncryptionStatus[record.id] ? /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"warning\",\n                        size: \"sm\",\n                        children: \"\\uD83D\\uDD12 ENCRYPTED\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1071,\n                        columnNumber: 57\n                      }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"success\",\n                        size: \"sm\",\n                        children: \"\\uD83D\\uDCC4 Plain Text\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1073,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"primary\",\n                        size: \"sm\",\n                        children: \"\\uD83E\\uDDF1 On-Chain\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1075,\n                        columnNumber: 53\n                      }, this), record.nftTokenId && /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"secondary\",\n                        size: \"sm\",\n                        children: \"\\uD83C\\uDFA8 NFT\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1077,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1063,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-600 mb-2\",\n                      children: record.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1080,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Patient:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1083,\n                            columnNumber: 60\n                          }, this), \" \", (_myPatients$find4 = myPatients.find(p => p.id === record.patientId)) === null || _myPatients$find4 === void 0 ? void 0 : _myPatients$find4.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1083,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Date:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1084,\n                            columnNumber: 60\n                          }, this), \" \", record.date]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1084,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Diagnosis:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1085,\n                            columnNumber: 60\n                          }, this), \" \", record.diagnosis]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1085,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1082,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Prescription:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1088,\n                            columnNumber: 60\n                          }, this), \" \", record.prescription]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1088,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-mono text-xs\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Blockchain:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1089,\n                            columnNumber: 90\n                          }, this), \" \", record.blockchainHash]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1089,\n                          columnNumber: 57\n                        }, this), record.ipfsHash && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-mono text-xs\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"IPFS:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1091,\n                            columnNumber: 94\n                          }, this), \" \", record.ipfsHash]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1091,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1087,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1081,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1062,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ml-4 flex flex-col space-y-2\",\n                    children: [!record.nftTokenId && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleMintNFT(record.id),\n                      className: \"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\",\n                      children: \"\\uD83C\\uDFA8 Mint NFT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1098,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEncryptRecord(record.id),\n                      className: \"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\",\n                      children: \"\\uD83D\\uDD12 Encrypt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1105,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDecryptRecord(record.id),\n                      className: \"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\",\n                      children: \"\\uD83D\\uDD13 Decrypt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1111,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleViewRecord(record.id),\n                      className: \"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\",\n                      children: \"\\uD83D\\uDC41\\uFE0F View\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1117,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDownloadPDF(record.id),\n                      className: \"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\",\n                      children: \"\\uD83D\\uDCC4 Download PDF\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1123,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700\",\n                      children: \"\\u270F\\uFE0F Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1129,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1096,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1061,\n                  columnNumber: 41\n                }, this)\n              }, record.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1060,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 21\n      }, this), activeTab === 'insurance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"\\uD83D\\uDCB0 Insurance Claims\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1145,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: insuranceClaims.map(claim => {\n              var _myPatients$find5, _claim$blockchainTxId;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-6\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center space-x-2 mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"text-lg font-medium text-gray-900\",\n                        children: [\"Claim #\", claim.claimNumber]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1154,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: getStatusColor(claim.status),\n                        size: \"sm\",\n                        children: claim.status.toUpperCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1155,\n                        columnNumber: 53\n                      }, this), claim.isProcessedOnChain && /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"primary\",\n                        size: \"sm\",\n                        children: \"\\uD83E\\uDDF1 On-Chain\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1159,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1153,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-600 mb-2\",\n                      children: claim.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1162,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Patient:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1165,\n                            columnNumber: 60\n                          }, this), \" \", (_myPatients$find5 = myPatients.find(p => p.id === claim.patientId)) === null || _myPatients$find5 === void 0 ? void 0 : _myPatients$find5.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1165,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Amount:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1166,\n                            columnNumber: 60\n                          }, this), \" $\", claim.amount.toFixed(2)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1166,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Submitted:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1167,\n                            columnNumber: 60\n                          }, this), \" \", claim.submissionDate]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1167,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1164,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Provider:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1170,\n                            columnNumber: 60\n                          }, this), \" \", claim.insuranceProvider]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1170,\n                          columnNumber: 57\n                        }, this), claim.approvalDate && /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Approved:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1172,\n                            columnNumber: 64\n                          }, this), \" \", claim.approvalDate]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1172,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-mono text-xs\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Contract:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1174,\n                            columnNumber: 90\n                          }, this), \" \", claim.smartContractAddress]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1174,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1169,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-mono text-xs\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Tx ID:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1177,\n                            columnNumber: 90\n                          }, this), \" \", (_claim$blockchainTxId = claim.blockchainTxId) === null || _claim$blockchainTxId === void 0 ? void 0 : _claim$blockchainTxId.substring(0, 20), \"...\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1177,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1176,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1163,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1152,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ml-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleViewInsuranceClaim(claim.id),\n                      className: \"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\",\n                      children: \"\\uD83D\\uDC41\\uFE0F View Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1182,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1181,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1151,\n                  columnNumber: 41\n                }, this)\n              }, claim.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 21\n      }, this), activeTab === 'nfts' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"\\uD83C\\uDFA8 NFT Health Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n            children: nftRecords.map(nft => {\n              var _myPatients$find6;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-4 hover:shadow-md transition-shadow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"aspect-square bg-gradient-to-br from-blue-400 to-purple-500 rounded-lg mb-4 flex items-center justify-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-white text-4xl\",\n                    children: \"\\uD83C\\uDFE5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1208,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1207,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-gray-900\",\n                    children: nft.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1211,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-600\",\n                    children: nft.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1212,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs space-y-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium\",\n                        children: \"Token ID:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1214,\n                        columnNumber: 52\n                      }, this), \" \", nft.tokenId]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1214,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium\",\n                        children: \"Patient:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1215,\n                        columnNumber: 52\n                      }, this), \" \", (_myPatients$find6 = myPatients.find(p => p.id === nft.patientId)) === null || _myPatients$find6 === void 0 ? void 0 : _myPatients$find6.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1215,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium\",\n                        children: \"Network:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1216,\n                        columnNumber: 52\n                      }, this), \" \", nft.blockchainNetwork]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1216,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium\",\n                        children: \"Minted:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1217,\n                        columnNumber: 52\n                      }, this), \" \", new Date(nft.mintDate).toLocaleDateString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1217,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"font-mono\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium\",\n                        children: \"Contract:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1218,\n                        columnNumber: 74\n                      }, this), \" \", nft.contractAddress.substring(0, 10), \"...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1218,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1213,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between pt-2\",\n                    children: [/*#__PURE__*/_jsxDEV(Badge, {\n                      variant: \"secondary\",\n                      size: \"sm\",\n                      children: nft.isTransferable ? 'Transferable' : 'Non-Transferable'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1221,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex space-x-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleViewNFT(nft.id),\n                        className: \"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700 font-medium\",\n                        children: \"\\uD83D\\uDC41\\uFE0F View NFT\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1225,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          const relatedRecord = recentRecords.find(r => r.id === nft.recordId);\n                          if (relatedRecord) {\n                            handleDownloadPDF(relatedRecord.id);\n                          } else {\n                            alert('Related medical record not found');\n                          }\n                        },\n                        className: \"bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700\",\n                        children: \"\\uD83D\\uDCC4 PDF\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1231,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1224,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1220,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1210,\n                  columnNumber: 41\n                }, this)]\n              }, nft.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1206,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1199,\n        columnNumber: 21\n      }, this), activeTab === 'security' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-6 py-4 border-b border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium text-gray-900\",\n              children: \"\\uD83D\\uDD12 Encryption & Security Tools\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1259,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 mt-1\",\n              children: \"Secure patient records with advanced encryption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1260,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1258,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium text-gray-900\",\n                  children: \"\\uD83D\\uDD10 PDF File Encryption\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1265,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Choose PDF files from your computer to encrypt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1266,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-4 border-2 border-dashed border-gray-300 rounded-lg bg-gray-50\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-4xl mb-4 block\",\n                        children: \"\\uD83D\\uDD12\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1270,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"font-medium text-gray-900 mb-2\",\n                        children: \"Encrypt PDF Files\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1271,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-sm text-gray-600 mb-4\",\n                        children: \"Select PDF files from your computer to encrypt with password protection\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1272,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        accept: \".pdf\",\n                        multiple: true,\n                        onChange: handleFileSelection,\n                        className: \"hidden\",\n                        id: \"pdf-file-input\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1273,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"pdf-file-input\",\n                        className: \"bg-green-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-green-700 inline-block\",\n                        children: \"\\uD83D\\uDCC1 Choose PDF Files to Encrypt\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1281,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1269,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1268,\n                    columnNumber: 45\n                  }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-4 border rounded-lg bg-blue-50\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"font-medium text-blue-900 mb-2\",\n                      children: [\"Selected Files (\", selectedFiles.length, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1292,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center justify-between p-2 bg-white rounded\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex items-center space-x-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-blue-600\",\n                            children: \"\\uD83D\\uDCC4\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1297,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-sm font-medium\",\n                            children: file.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1298,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-xs text-gray-500\",\n                            children: [\"(\", Math.round(file.size / 1024), \" KB)\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1299,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1296,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => removeSelectedFile(index),\n                          className: \"text-red-600 hover:text-red-800 text-xs\",\n                          children: \"\\u274C Remove\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1301,\n                          columnNumber: 65\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1295,\n                        columnNumber: 61\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1293,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleEncryptSelectedFiles,\n                      className: \"w-full mt-3 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\",\n                      children: \"\\uD83D\\uDD12 Encrypt Selected Files\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1310,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1291,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-4 border rounded-lg bg-orange-50\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"font-medium text-orange-900 mb-2\",\n                      children: \"\\uD83D\\uDCCB PDF Encryption/Decryption Workflow\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1320,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-orange-700 mb-3\",\n                      children: [\"\\uD83D\\uDD12 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Encryption:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1322,\n                        columnNumber: 56\n                      }, this), \" PDF \\u2192 .enc (encrypted file)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1322,\n                        columnNumber: 112\n                      }, this), \"\\uD83D\\uDD13 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Decryption:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1323,\n                        columnNumber: 56\n                      }, this), \" .enc \\u2192 PDF (original file)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1323,\n                        columnNumber: 111\n                      }, this), \"\\uD83D\\uDCA1 Export PDFs from Medical Records, then encrypt here\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1321,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => setActiveTab('records'),\n                      className: \"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\",\n                      children: \"\\uD83D\\uDCCB Go to Medical Records\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1326,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1319,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1267,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1264,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium text-gray-900\",\n                  children: \"\\uFFFD PDF File Decryption\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1337,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Choose encrypted (.enc) files from your computer to decrypt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1338,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-4 border-2 border-dashed border-orange-300 rounded-lg bg-orange-50\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-4xl mb-4 block\",\n                        children: \"\\uD83D\\uDD13\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1342,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"font-medium text-gray-900 mb-2\",\n                        children: \"Decrypt Encrypted Files\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1343,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-sm text-gray-600 mb-4\",\n                        children: \"Select .enc files from your computer to decrypt with password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1344,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        accept: \".enc\",\n                        multiple: true,\n                        onChange: handleEncryptedFileSelection,\n                        className: \"hidden\",\n                        id: \"enc-file-input\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1345,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"enc-file-input\",\n                        className: \"bg-orange-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-orange-700 inline-block\",\n                        children: \"\\uD83D\\uDCC1 Choose .enc Files to Decrypt\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1353,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1341,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1340,\n                    columnNumber: 45\n                  }, this), selectedEncryptedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-4 border rounded-lg bg-orange-50\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"font-medium text-orange-900 mb-2\",\n                      children: [\"Selected Encrypted Files (\", selectedEncryptedFiles.length, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1364,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: selectedEncryptedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center justify-between p-2 bg-white rounded\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex items-center space-x-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-orange-600\",\n                            children: \"\\uD83D\\uDD12\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1369,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-sm font-medium\",\n                            children: file.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1370,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-xs text-gray-500\",\n                            children: [\"(\", Math.round(file.size / 1024), \" KB)\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1371,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1368,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => removeSelectedEncryptedFile(index),\n                          className: \"text-red-600 hover:text-red-800 text-xs\",\n                          children: \"\\u274C Remove\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1373,\n                          columnNumber: 65\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1367,\n                        columnNumber: 61\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1365,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleDecryptSelectedFiles,\n                      className: \"w-full mt-3 bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700\",\n                      children: \"\\uFFFD Decrypt Selected Files\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1382,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1363,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1339,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium text-gray-900\",\n                  children: \"\\uD83D\\uDCCB Clipboard Security\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1392,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Monitor clipboard for suspicious wallet addresses\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1393,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-4 border rounded-lg\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm font-medium\",\n                      children: \"Clipboard Monitoring\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1396,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                      variant: clipboardMonitoring ? 'success' : 'secondary',\n                      size: \"sm\",\n                      children: clipboardMonitoring ? 'Active' : 'Inactive'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1397,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1395,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: toggleClipboardMonitoring,\n                    className: `w-full px-4 py-2 rounded text-sm ${clipboardMonitoring ? 'bg-red-600 hover:bg-red-700 text-white' : 'bg-blue-600 hover:bg-blue-700 text-white'}`,\n                    children: clipboardMonitoring ? '‚èπÔ∏è Stop Monitoring' : 'üîç Start Monitoring'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1401,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-3 text-xs text-gray-500\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"\\u2022 Detects cryptocurrency wallet addresses\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1411,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"\\u2022 Alerts on suspicious clipboard activity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1412,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"\\u2022 Protects against clipboard hijacking\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1413,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1410,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1394,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1336,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1263,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-yellow-600 text-lg mr-2\",\n                  children: \"\\u26A0\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1421,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"font-medium text-yellow-800\",\n                    children: \"Security Notice\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1423,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-yellow-700 mt-1\",\n                    children: \"Always ensure patient records are encrypted before transmission. Use blockchain verification for data integrity and monitor for suspicious activities.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1424,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1422,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1420,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1419,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1262,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1256,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 13\n    }, this), showCreateRecordModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900 mb-4\",\n            children: \"Create New Medical Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1442,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1445,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newRecordForm.patientId,\n                onChange: e => setNewRecordForm(prev => ({\n                  ...prev,\n                  patientId: e.target.value\n                })),\n                className: \"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1451,\n                  columnNumber: 41\n                }, this), myPatients.map(patient => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: patient.id,\n                  children: patient.name\n                }, patient.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1453,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1446,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1444,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1458,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newRecordForm.title,\n                onChange: e => setNewRecordForm(prev => ({\n                  ...prev,\n                  title: e.target.value\n                })),\n                className: \"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",\n                placeholder: \"Record title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1459,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1457,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Diagnosis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1468,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newRecordForm.diagnosis,\n                onChange: e => setNewRecordForm(prev => ({\n                  ...prev,\n                  diagnosis: e.target.value\n                })),\n                className: \"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",\n                placeholder: \"Diagnosis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1469,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1467,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Prescription\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1478,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: newRecordForm.prescription,\n                onChange: e => setNewRecordForm(prev => ({\n                  ...prev,\n                  prescription: e.target.value\n                })),\n                className: \"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",\n                rows: 3,\n                placeholder: \"Prescription details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1479,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1477,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1488,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: newRecordForm.description,\n                onChange: e => setNewRecordForm(prev => ({\n                  ...prev,\n                  description: e.target.value\n                })),\n                className: \"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",\n                rows: 3,\n                placeholder: \"Additional notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1489,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1487,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1443,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCreateRecordModal(false),\n              className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1499,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveRecord,\n              className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\",\n              children: \"Create Record\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1505,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1498,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1440,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1439,\n      columnNumber: 17\n    }, this), showClaimModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900 mb-4\",\n            children: \"Submit Insurance Claim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1522,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1525,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newClaimForm.patientId,\n                onChange: e => setNewClaimForm(prev => ({\n                  ...prev,\n                  patientId: e.target.value\n                })),\n                className: \"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1531,\n                  columnNumber: 41\n                }, this), myPatients.map(patient => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: patient.id,\n                  children: patient.name\n                }, patient.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1533,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1526,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1524,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Insurance Provider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1538,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newClaimForm.insuranceProvider,\n                onChange: e => setNewClaimForm(prev => ({\n                  ...prev,\n                  insuranceProvider: e.target.value\n                })),\n                className: \"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",\n                placeholder: \"Insurance company name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1539,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1537,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Claim Amount ($)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1548,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: newClaimForm.amount,\n                onChange: e => setNewClaimForm(prev => ({\n                  ...prev,\n                  amount: e.target.value\n                })),\n                className: \"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",\n                placeholder: \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1549,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1547,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1558,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: newClaimForm.description,\n                onChange: e => setNewClaimForm(prev => ({\n                  ...prev,\n                  description: e.target.value\n                })),\n                className: \"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\",\n                rows: 4,\n                placeholder: \"Claim description and details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1559,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1557,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1523,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowClaimModal(false),\n              className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1569,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveClaim,\n              className: \"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\",\n              children: \"Submit Claim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1575,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1568,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1521,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1520,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1519,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 886,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorDashboard, \"l3VkXXY49VZ9LwzlAy9X7rDeIaI=\");\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Badge","Timer","RoleBasedAccessService","EncryptionService","sharedStateService","pdfService","jsxDEV","_jsxDEV","DoctorDashboard","user","onLogout","_s","sessionTimeLeft","rbacService","activeTab","setActiveTab","showCreateRecordModal","setShowCreateRecordModal","showClaimModal","setShowClaimModal","setSelectedPatientId","clipboardMonitoring","setClipboardMonitoring","encryptedRecords","setEncryptedRecords","recordEncryptionStatus","setRecordEncryptionStatus","selectedFiles","setSelectedFiles","selectedEncryptedFiles","setSelectedEncryptedFiles","newRecordForm","setNewRecordForm","patientId","title","description","diagnosis","prescription","notes","newClaimForm","setNewClaimForm","amount","insuranceProvider","myPatients","setMyPatients","recentRecords","setRecentRecords","patients","getPatients","allRecords","getMedicalRecords","unsubscribePatients","onPatientsChange","unsubscribeRecords","onMedicalRecordsChange","id","insuranceClaims","claimNumber","providerId","doctorId","insuranceCompany","status","submittedAt","submissionDate","approvalDate","relatedRecords","smartContractAddress","blockchainTxId","isProcessedOnChain","approvalSignatures","ipfsDocuments","nftRecords","tokenId","recordId","name","imageUrl","metadataUri","contractAddress","blockchainNetwork","mintDate","currentOwner","isTransferable","accessLevel","setCurrentUser","handleSessionExpire","window","confirm","handleCreateRecord","handleSubmitInsuranceClaim","prev","handleMintNFT","alert","console","log","handleViewHistory","patient","find","p","patientRecords","filter","record","length","historyDetails","map","date","join","email","dateOfBirth","phoneNumber","address","emergencyContact","lastVisit","upcomingAppointment","handleEncryptRecord","r","_myPatients$find","password","prompt","trim","_myPatients$find2","customEncryption","recordData","encryptedBy","encryptedAt","Date","toISOString","salt","generateSalt","deriveKey","encryptedData","encryptData","JSON","stringify","toLocaleString","error","handleDecryptRecord","_myPatients$find3","decryptedData","decryptData","parse","permanentDecrypt","updated","handleViewRecord","isEncrypted","viewEncrypted","blockchainHash","ipfsHash","nftTokenId","isVerified","toggleClipboardMonitoring","newState","handleViewInsuranceClaim","claimId","claim","c","toFixed","toUpperCase","handleSaveRecord","newRecord","generateId","split","accessPermissions","now","toString","Math","random","slice","undefined","addMedicalRecord","handleSaveClaim","getStatusColor","handleDownloadPDF","downloadMedicalRecordPDF","includeWatermark","replace","Error","message","handleDownloadPatientPDF","batchPDF","generateBatchPDF","url","URL","createObjectURL","link","document","createElement","href","filename","download","body","appendChild","click","removeChild","revokeObjectURL","handleAddNewPatient","patientName","patientEmail","includes","patientDOB","match","insurancePolicyNumber","newPatient","isActive","addPatient","handleViewNFT","nftId","nft","n","relatedRecord","handleFileSelection","event","files","target","pdfFiles","Array","from","file","type","removeSelectedFile","index","_","i","handleEncryptSelectedFiles","encryptedFiles","reader","FileReader","fileData","Promise","resolve","onload","result","readAsDataURL","push","forEach","blob","Blob","f","fileInput","getElementById","value","handleEncryptedFileSelection","encFiles","endsWith","removeSelectedEncryptedFile","handleDecryptSelectedFiles","decryptedFiles","encryptedContent","readAsText","decryptError","byteCharacters","atob","byteNumbers","charCodeAt","byteArray","Uint8Array","encFileInput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","duration","onExpire","src","alt","role","onClick","label","icon","tab","_myPatients$find4","_myPatients$find5","_claim$blockchainTxId","substring","_myPatients$find6","toLocaleDateString","accept","multiple","onChange","htmlFor","round","e","placeholder","rows","_c","$RefreshReg$"],"sources":["D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/src/components/Dashboard/DoctorDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Badge from '../UI/Badge';\r\nimport Timer from '../UI/Timer';\r\nimport { User, MedicalRecord, Patient, InsuranceClaim, NFTHealthRecord } from '../../types';\r\nimport { RoleBasedAccessService } from '../../services/rbacService';\r\nimport { EncryptionService } from '../../services/encryption';\r\nimport { sharedStateService } from '../../services/sharedState';\r\nimport { pdfService } from '../../services/pdfService';\r\n\r\ninterface DoctorDashboardProps {\r\n    user: User;\r\n    onLogout: () => void;\r\n}\r\n\r\nconst DoctorDashboard: React.FC<DoctorDashboardProps> = ({ user, onLogout }) => {\r\n    const [sessionTimeLeft] = useState(1800);\r\n    const [rbacService] = useState(new RoleBasedAccessService());\r\n    const [activeTab, setActiveTab] = useState<'patients' | 'records' | 'insurance' | 'nfts' | 'security'>('patients');\r\n\r\n    // Modal states\r\n    const [showCreateRecordModal, setShowCreateRecordModal] = useState(false);\r\n    const [showClaimModal, setShowClaimModal] = useState(false);\r\n    const [, setSelectedPatientId] = useState<string>('');\r\n\r\n    // Security states\r\n    const [clipboardMonitoring, setClipboardMonitoring] = useState(false);\r\n    const [encryptedRecords, setEncryptedRecords] = useState<{ [key: string]: string }>({});\r\n    const [recordEncryptionStatus, setRecordEncryptionStatus] = useState<{ [key: string]: boolean }>({});\r\n    const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\r\n    const [selectedEncryptedFiles, setSelectedEncryptedFiles] = useState<File[]>([]);\r\n\r\n    // Form states\r\n    const [newRecordForm, setNewRecordForm] = useState({\r\n        patientId: '',\r\n        title: '',\r\n        description: '',\r\n        diagnosis: '',\r\n        prescription: '',\r\n        notes: ''\r\n    });\r\n\r\n    const [newClaimForm, setNewClaimForm] = useState({\r\n        patientId: '',\r\n        amount: '',\r\n        description: '',\r\n        insuranceProvider: ''\r\n    });\r\n\r\n    const [myPatients, setMyPatients] = useState<Patient[]>([]);\r\n    const [recentRecords, setRecentRecords] = useState<MedicalRecord[]>([]);\r\n\r\n    // Initialize data from shared state service\r\n    useEffect(() => {\r\n        const patients = sharedStateService.getPatients();\r\n        // Get ALL medical records (not just doctor's own records) so doctor can see patient-added records\r\n        const allRecords = sharedStateService.getMedicalRecords();\r\n\r\n        setMyPatients(patients);\r\n        setRecentRecords(allRecords);\r\n\r\n        // Subscribe to changes\r\n        const unsubscribePatients = sharedStateService.onPatientsChange(setMyPatients);\r\n        const unsubscribeRecords = sharedStateService.onMedicalRecordsChange((allRecords) => {\r\n            // Show all records so doctor can see patient-added records\r\n            setRecentRecords(allRecords);\r\n        });\r\n\r\n        return () => {\r\n            unsubscribePatients();\r\n            unsubscribeRecords();\r\n        };\r\n    }, [user.id]);\r\n\r\n    const [insuranceClaims] = useState<InsuranceClaim[]>([\r\n        {\r\n            id: 'claim-1',\r\n            claimNumber: 'CLM-2025-001',\r\n            patientId: 'patient-1',\r\n            providerId: user.id,\r\n            doctorId: user.id,\r\n            insuranceCompany: 'HealthFirst Insurance',\r\n            insuranceProvider: 'HealthFirst Insurance',\r\n            amount: 450.00,\r\n            status: 'approved',\r\n            submittedAt: '2025-07-01T10:00:00Z',\r\n            submissionDate: '2025-07-01',\r\n            approvalDate: '2025-07-03',\r\n            description: 'Annual physical examination and blood work',\r\n            relatedRecords: ['record-1'],\r\n            smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n            blockchainTxId: '0xabc123def456789abcdef123456789abc123def456789abcdef',\r\n            isProcessedOnChain: true,\r\n            approvalSignatures: [],\r\n            ipfsDocuments: []\r\n        },\r\n        {\r\n            id: 'claim-2',\r\n            claimNumber: 'CLM-2025-002',\r\n            patientId: 'patient-2',\r\n            providerId: user.id,\r\n            doctorId: user.id,\r\n            insuranceCompany: 'MediCare Plus',\r\n            insuranceProvider: 'MediCare Plus',\r\n            amount: 275.50,\r\n            status: 'pending',\r\n            submittedAt: '2025-07-04T14:30:00Z',\r\n            submissionDate: '2025-07-04',\r\n            description: 'Follow-up consultation and medication review',\r\n            relatedRecords: ['record-2'],\r\n            smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n            blockchainTxId: '0xdef456abc789123def456abc789123def456abc789123def',\r\n            isProcessedOnChain: false,\r\n            approvalSignatures: [],\r\n            ipfsDocuments: []\r\n        }\r\n    ]);\r\n\r\n    const [nftRecords] = useState<NFTHealthRecord[]>([\r\n        {\r\n            id: 'nft-1',\r\n            tokenId: 'HEALTH-NFT-001',\r\n            patientId: 'patient-1',\r\n            recordId: 'record-1',\r\n            name: 'Annual Physical 2025',\r\n            description: 'Comprehensive health examination record',\r\n            imageUrl: 'https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=NFT-001',\r\n            metadataUri: 'ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP',\r\n            contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\r\n            blockchainNetwork: 'Ethereum',\r\n            mintDate: '2025-07-04T10:30:00Z',\r\n            currentOwner: 'patient-1',\r\n            isTransferable: false,\r\n            accessLevel: 'doctor_patient'\r\n        },\r\n        {\r\n            id: 'nft-2',\r\n            tokenId: 'HEALTH-NFT-002',\r\n            patientId: 'patient-2',\r\n            recordId: 'record-2',\r\n            name: 'Follow-up Consultation',\r\n            description: 'Treatment follow-up and medication adjustment',\r\n            imageUrl: 'https://via.placeholder.com/200x200/059669/FFFFFF?text=NFT-002',\r\n            metadataUri: 'ipfs://QmY8AX6sRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0nQ',\r\n            contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\r\n            blockchainNetwork: 'Ethereum',\r\n            mintDate: '2025-07-03T14:45:00Z',\r\n            currentOwner: 'patient-2',\r\n            isTransferable: false,\r\n            accessLevel: 'doctor_patient'\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        rbacService.setCurrentUser(user);\r\n    }, [user, rbacService]);\r\n\r\n    const handleSessionExpire = () => {\r\n        window.confirm('Session expired for security. Please login again.') && onLogout();\r\n    };\r\n\r\n    const handleCreateRecord = () => {\r\n        setShowCreateRecordModal(true);\r\n    };\r\n\r\n    const handleSubmitInsuranceClaim = (patientId: string) => {\r\n        setSelectedPatientId(patientId);\r\n        setNewClaimForm(prev => ({ ...prev, patientId }));\r\n        setShowClaimModal(true);\r\n    };\r\n\r\n    const handleMintNFT = (recordId: string) => {\r\n        alert(`NFT minting initiated for record ${recordId}. This will create a secure, immutable NFT on the blockchain.`);\r\n        console.log(`Minting NFT for record: ${recordId}`);\r\n    };\r\n\r\n    const handleViewHistory = (patientId: string) => {\r\n        const patient = myPatients.find(p => p.id === patientId);\r\n        const patientRecords = recentRecords.filter(record => record.patientId === patientId);\r\n\r\n        if (patient && patientRecords.length > 0) {\r\n            const historyDetails = patientRecords.map(record =>\r\n                `üìã ${record.title} (${record.date})\\n   Diagnosis: ${record.diagnosis}\\n   Prescription: ${record.prescription}`\r\n            ).join('\\n\\n');\r\n\r\n            alert(`üë• Medical History for ${patient.name}\r\nüìß Email: ${patient.email}\r\nüéÇ DOB: ${patient.dateOfBirth}\r\nüè• Insurance: ${patient.insuranceProvider}\r\nüìû Phone: ${patient.phoneNumber}\r\nüè† Address: ${patient.address}\r\nüö® Emergency Contact: ${patient.emergencyContact}\r\nüìÖ Last Visit: ${patient.lastVisit}\r\n‚è≠Ô∏è Next Appointment: ${patient.upcomingAppointment}\r\n\r\nüìã MEDICAL RECORDS:\r\n${historyDetails}\r\n\r\nTotal Records: ${patientRecords.length}`);\r\n        } else {\r\n            alert(`No medical history found for this patient.`);\r\n        }\r\n    };\r\n\r\n    const handleEncryptRecord = (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (record) {\r\n            // Check if already encrypted\r\n            if (recordEncryptionStatus[recordId]) {\r\n                alert('‚ö†Ô∏è This record is already encrypted. Please decrypt it first if you want to re-encrypt with a different password.');\r\n                return;\r\n            }\r\n\r\n            const password = prompt(`üîí Enter a password to encrypt \"${record.title}\" for patient: ${myPatients.find(p => p.id === record.patientId)?.name || record.patientId}`);\r\n            if (password && password.trim()) {\r\n                try {\r\n                    // Create a custom encryption service with the user's password\r\n                    const customEncryption = new EncryptionService();\r\n                    const recordData = {\r\n                        ...record,\r\n                        encryptedBy: user.name,\r\n                        encryptedAt: new Date().toISOString()\r\n                    };\r\n\r\n                    // Use password-based encryption\r\n                    const salt = customEncryption.generateSalt();\r\n                    customEncryption.deriveKey(password, salt); // Generate derived key for security\r\n                    const encryptedData = customEncryption.encryptData(JSON.stringify(recordData));\r\n\r\n                    // Store the encrypted data and metadata\r\n                    setEncryptedRecords(prev => ({ ...prev, [recordId]: encryptedData }));\r\n                    setRecordEncryptionStatus(prev => ({ ...prev, [recordId]: true }));\r\n\r\n                    alert(`üîí SUCCESS! Record \"${record.title}\" has been encrypted with your custom password.\r\n                    \r\nüìã Record: ${record.title}\r\nüë§ Patient: ${myPatients.find(p => p.id === record.patientId)?.name}\r\nüîê Status: ENCRYPTED\r\nüõ°Ô∏è Security Level: AES-256 + Password Protection\r\nüìÖ Encrypted At: ${new Date().toLocaleString()}\r\nüë®‚Äç‚öïÔ∏è Encrypted By: ${user.name}\r\n\r\n‚ö†Ô∏è Remember your password - it will be required for decryption!`);\r\n                } catch (error) {\r\n                    alert('‚ùå Encryption failed. Please try again.');\r\n                }\r\n            } else {\r\n                alert('‚ùå Password is required for encryption.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDecryptRecord = (recordId: string) => {\r\n        // Check if record is encrypted\r\n        if (!recordEncryptionStatus[recordId]) {\r\n            alert('‚ÑπÔ∏è This record is not encrypted. No decryption needed.');\r\n            return;\r\n        }\r\n\r\n        const encryptedData = encryptedRecords[recordId];\r\n        if (encryptedData) {\r\n            const password = prompt(`üîì Enter the password to decrypt this record:`);\r\n            if (password && password.trim()) {\r\n                try {\r\n                    const customEncryption = new EncryptionService();\r\n\r\n                    // For demo purposes, we'll try to decrypt with the provided password\r\n                    // In a real system, you'd verify the password against the stored hash\r\n                    const decryptedData = customEncryption.decryptData(encryptedData);\r\n                    const record = JSON.parse(decryptedData);\r\n\r\n                    alert(`üîì DECRYPTION SUCCESSFUL!\r\n\r\nüìã Title: ${record.title}\r\nüë§ Patient: ${myPatients.find(p => p.id === record.patientId)?.name || record.patientId}\r\nüìÖ Date: ${record.date}\r\nü©∫ Diagnosis: ${record.diagnosis}\r\nüíä Prescription: ${record.prescription}\r\nüìù Description: ${record.description}\r\n\r\nüîí Encryption Details:\r\nüë®‚Äç‚öïÔ∏è Encrypted By: ${record.encryptedBy || 'Unknown'}\r\nüìÖ Encrypted At: ${record.encryptedAt ? new Date(record.encryptedAt).toLocaleString() : 'Unknown'}\r\nüõ°Ô∏è Security: Password-protected AES-256`);\r\n\r\n                    // Ask if user wants to permanently decrypt\r\n                    const permanentDecrypt = window.confirm('üîì Do you want to permanently decrypt this record? (This will remove encryption)');\r\n                    if (permanentDecrypt) {\r\n                        setEncryptedRecords(prev => {\r\n                            const updated = { ...prev };\r\n                            delete updated[recordId];\r\n                            return updated;\r\n                        });\r\n                        setRecordEncryptionStatus(prev => ({ ...prev, [recordId]: false }));\r\n                        alert('‚úÖ Record has been permanently decrypted and is now in plain text.');\r\n                    }\r\n                } catch (error) {\r\n                    alert('‚ùå Decryption failed. Incorrect password or corrupted data.');\r\n                }\r\n            } else {\r\n                alert('‚ùå Password is required for decryption.');\r\n            }\r\n        } else {\r\n            alert('‚ùå No encrypted data found for this record.');\r\n        }\r\n    };\r\n\r\n    const handleViewRecord = (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (record) {\r\n            const isEncrypted = recordEncryptionStatus[recordId];\r\n            const patient = myPatients.find(p => p.id === record.patientId);\r\n\r\n            if (isEncrypted) {\r\n                const viewEncrypted = window.confirm(`üîí This record is encrypted. \r\n\r\nDo you want to:\r\n- Click \"OK\" to view encrypted version\r\n- Click \"Cancel\" to decrypt and view`);\r\n\r\n                if (viewEncrypted) {\r\n                    // Show encrypted version\r\n                    alert(`üîí ENCRYPTED RECORD VIEW\r\n\r\nüìã Title: ${record.title}\r\nüë§ Patient: ${patient?.name || record.patientId}\r\nüìÖ Date: ${record.date}\r\nüîê Status: ENCRYPTED\r\nüõ°Ô∏è Security: Password Protected\r\n\r\n‚ö†Ô∏è Content is encrypted and cannot be displayed in plain text.\r\nUse the decrypt button to view the full content.`);\r\n                } else {\r\n                    // Trigger decryption process\r\n                    handleDecryptRecord(recordId);\r\n                }\r\n            } else {\r\n                // Show full record details\r\n                alert(`üëÅÔ∏è MEDICAL RECORD DETAILS\r\n\r\nüìã Title: ${record.title}\r\nüë§ Patient: ${patient?.name || record.patientId}\r\nüìß Email: ${patient?.email || 'N/A'}\r\nüìÖ Date: ${record.date}\r\nü©∫ Diagnosis: ${record.diagnosis}\r\nüíä Prescription: ${record.prescription}\r\nüìù Description: ${record.description}\r\n\r\nüîó Blockchain Details:\r\nüß± Hash: ${record.blockchainHash || 'N/A'}\r\nüìé IPFS: ${record.ipfsHash || 'N/A'}\r\nüé® NFT Token: ${record.nftTokenId || 'Not minted'}\r\n‚úÖ Verified: ${record.isVerified ? 'Yes' : 'No'}\r\nüîê Encryption: Not encrypted`);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleClipboardMonitoring = () => {\r\n        const newState = !clipboardMonitoring;\r\n        setClipboardMonitoring(newState);\r\n        if (newState) {\r\n            alert('üîç Clipboard monitoring enabled. The system will monitor for suspicious wallet addresses.');\r\n            // In a real application, you would start actual clipboard monitoring here\r\n        } else {\r\n            alert('‚èπÔ∏è Clipboard monitoring disabled.');\r\n        }\r\n    };\r\n\r\n    const handleViewInsuranceClaim = (claimId: string) => {\r\n        const claim = insuranceClaims.find(c => c.id === claimId);\r\n        if (claim) {\r\n            const patient = myPatients.find(p => p.id === claim.patientId);\r\n            alert(`üí∞ Insurance Claim Details\r\n\r\nüìã Claim Number: ${claim.claimNumber}\r\nüë§ Patient: ${patient?.name || claim.patientId}\r\nüíµ Amount: $${claim.amount.toFixed(2)}\r\nüìä Status: ${claim.status.toUpperCase()}\r\nüè• Insurance Provider: ${claim.insuranceProvider}\r\nüìÖ Submitted: ${claim.submissionDate}\r\n${claim.approvalDate ? `‚úÖ Approved: ${claim.approvalDate}` : '‚è≥ Pending approval'}\r\nüìù Description: ${claim.description || 'No description provided'}\r\n\r\nüîó Blockchain Details:\r\nüìã Contract Address: ${claim.smartContractAddress}\r\nüÜî Transaction ID: ${claim.blockchainTxId}\r\n‚õìÔ∏è On-Chain Status: ${claim.isProcessedOnChain ? 'Processed' : 'Pending'}\r\n\r\nüìÑ Related Records: ${claim.relatedRecords.length} record(s)\r\nüìé Documents: ${claim.ipfsDocuments.length} file(s) on IPFS`);\r\n        }\r\n    };\r\n\r\n    const handleSaveRecord = () => {\r\n        if (!newRecordForm.title || !newRecordForm.patientId) {\r\n            alert('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        // Find patient details\r\n        const patient = myPatients.find(p => p.id === newRecordForm.patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        // Create new record with proper ID generation\r\n        const newRecord: MedicalRecord = {\r\n            id: sharedStateService.generateId('record'),\r\n            patientId: newRecordForm.patientId,\r\n            doctorId: user.id,\r\n            title: newRecordForm.title,\r\n            description: newRecordForm.description,\r\n            date: new Date().toISOString().split('T')[0], // Format as YYYY-MM-DD\r\n            diagnosis: newRecordForm.diagnosis,\r\n            prescription: newRecordForm.prescription,\r\n            isEncrypted: false, // Initially not encrypted\r\n            isVerified: true,\r\n            accessPermissions: [user.id, newRecordForm.patientId],\r\n            blockchainHash: `0x${Date.now().toString(16)}abc${Math.random().toString(16).slice(2, 8)}`,\r\n            ipfsHash: `Qm${Math.random().toString(36).slice(2, 15)}${Date.now().toString(36)}`,\r\n            nftTokenId: undefined // Will be set when NFT is minted\r\n        };\r\n\r\n        // Add to shared state (will automatically update all components)\r\n        sharedStateService.addMedicalRecord(newRecord);\r\n\r\n        // Show success message with patient name\r\n        alert(`‚úÖ Medical record created successfully!\r\n\r\nüìã Record: ${newRecord.title}\r\nüë§ Patient: ${patient.name}\r\nüìÖ Date: ${newRecord.date}\r\nü©∫ Diagnosis: ${newRecord.diagnosis}\r\nüíä Prescription: ${newRecord.prescription}\r\n\r\nThe record has been added to your medical records list and is ready for encryption if needed.`);\r\n\r\n        setShowCreateRecordModal(false);\r\n        setNewRecordForm({\r\n            patientId: '',\r\n            title: '',\r\n            description: '',\r\n            diagnosis: '',\r\n            prescription: '',\r\n            notes: ''\r\n        });\r\n    };\r\n\r\n    const handleSaveClaim = () => {\r\n        if (!newClaimForm.amount || !newClaimForm.description) {\r\n            alert('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        // Create new insurance claim\r\n        // const newClaim: InsuranceClaim = {\r\n        //     id: `claim-${Date.now()}`,\r\n        //     claimNumber: `CLAIM-${Date.now()}`,\r\n        //     patientId: newClaimForm.patientId,\r\n        //     providerId: user.id,\r\n        //     doctorId: user.id,\r\n        //     insuranceCompany: newClaimForm.insuranceProvider,\r\n        //     insuranceProvider: newClaimForm.insuranceProvider,\r\n        //     amount: parseFloat(newClaimForm.amount),\r\n        //     status: 'pending',\r\n        //     submittedAt: new Date().toISOString(),\r\n        //     submissionDate: new Date().toLocaleDateString(),\r\n        //     description: newClaimForm.description,\r\n        //     relatedRecords: [],\r\n        //     smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n        //     blockchainTxId: `0x${Date.now().toString(16)}`,\r\n        //     isProcessedOnChain: false,\r\n        //     approvalSignatures: [],\r\n        //     ipfsDocuments: []\r\n        // };\r\n\r\n        alert('Insurance claim submitted successfully!');\r\n        setShowClaimModal(false);\r\n        setNewClaimForm({\r\n            patientId: '',\r\n            amount: '',\r\n            description: '',\r\n            insuranceProvider: ''\r\n        });\r\n    };\r\n\r\n    const getStatusColor = (status: string) => {\r\n        switch (status) {\r\n            case 'approved': return 'success';\r\n            case 'pending': return 'warning';\r\n            case 'rejected': return 'error';\r\n            case 'paid': return 'success';\r\n            case 'under_review': return 'info';\r\n            case 'submitted': return 'primary';\r\n            default: return 'secondary';\r\n        }\r\n    };\r\n\r\n    const handleDownloadPDF = async (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (!record) {\r\n            alert('Record not found');\r\n            return;\r\n        }\r\n\r\n        const patient = myPatients.find(p => p.id === record.patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Always download unencrypted PDF (encryption will be done in Security Tools)\r\n            await pdfService.downloadMedicalRecordPDF(record, patient, {\r\n                includeWatermark: true,\r\n                isEncrypted: false,\r\n                password: ''\r\n            });\r\n\r\n            alert(`‚úÖ PDF Downloaded Successfully!\r\n\r\nüìÑ File: medical_record_${record.id}_${patient.name.replace(/\\s+/g, '_')}.pdf\r\nüîê Status: UNENCRYPTED (ready for encryption in Security Tools)\r\nüö® Watermark: CONFIDENTIAL (at top of document)\r\nüë§ Patient: ${patient.name}\r\nüìã Record: ${record.title}\r\n\r\nüí° Next Steps:\r\n1. Go to Security Tools tab\r\n2. Select this PDF file to encrypt\r\n3. Choose a strong password for encryption\r\n\r\nThe PDF has been saved to your downloads folder.`);\r\n        } catch (error) {\r\n            console.error('PDF download error:', error);\r\n            alert(`‚ùå Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        }\r\n    };\r\n\r\n    const handleDownloadPatientPDF = async (patientId: string) => {\r\n        const patient = myPatients.find(p => p.id === patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        const patientRecords = recentRecords.filter(record => record.patientId === patientId);\r\n\r\n        if (patientRecords.length === 0) {\r\n            alert(`No medical records found for ${patient.name}. Create some records first.`);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (patientRecords.length === 1) {\r\n                // Single record\r\n                await pdfService.downloadMedicalRecordPDF(patientRecords[0], patient, {\r\n                    includeWatermark: true,\r\n                    isEncrypted: false,\r\n                    password: ''\r\n                });\r\n            } else {\r\n                // Multiple records - use batch PDF\r\n                const batchPDF = await pdfService.generateBatchPDF(patientRecords, [patient], {\r\n                    includeWatermark: true,\r\n                    isEncrypted: false,\r\n                    password: ''\r\n                });\r\n\r\n                // Create download link for batch PDF\r\n                const url = URL.createObjectURL(batchPDF);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n\r\n                const filename = `medical_records_${patient.name.replace(/\\s+/g, '_')}_batch.pdf`;\r\n                link.download = filename;\r\n\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            }\r\n\r\n            alert(`‚úÖ PDF Downloaded Successfully!\r\n\r\nüë§ Patient: ${patient.name}\r\nüìÑ Records: ${patientRecords.length} medical record(s)\r\nüîê Status: UNENCRYPTED (ready for encryption in Security Tools)\r\nüö® Watermark: CONFIDENTIAL (at top of document)\r\n\r\nüí° Next Steps:\r\n1. Go to Security Tools tab\r\n2. Select this PDF file to encrypt\r\n3. Choose a strong password for encryption\r\n\r\nThe PDF has been saved to your downloads folder.`);\r\n        } catch (error) {\r\n            console.error('PDF download error:', error);\r\n            alert(`‚ùå Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        }\r\n    };\r\n\r\n    const handleAddNewPatient = () => {\r\n        const patientName = prompt('üë§ Enter new patient name:');\r\n        if (!patientName || !patientName.trim()) {\r\n            alert('‚ùå Patient name is required');\r\n            return;\r\n        }\r\n\r\n        const patientEmail = prompt('üìß Enter patient email:');\r\n        if (!patientEmail || !patientEmail.trim() || !patientEmail.includes('@')) {\r\n            alert('‚ùå Valid email is required');\r\n            return;\r\n        }\r\n\r\n        const patientDOB = prompt('üéÇ Enter patient date of birth (YYYY-MM-DD):');\r\n        if (!patientDOB || !patientDOB.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\r\n            alert('‚ùå Date of birth is required in YYYY-MM-DD format');\r\n            return;\r\n        }\r\n\r\n        const phoneNumber = prompt('üìû Enter patient phone number:') || '';\r\n        const address = prompt('üè† Enter patient address:') || '';\r\n        const emergencyContact = prompt('üö® Enter emergency contact (Name - Phone):') || '';\r\n        const insuranceProvider = prompt('üè• Enter insurance provider:') || 'None';\r\n        const insurancePolicyNumber = prompt('üìÑ Enter insurance policy number:') || '';\r\n\r\n        const newPatient: Patient = {\r\n            id: sharedStateService.generateId('patient'),\r\n            name: patientName.trim(),\r\n            email: patientEmail.trim(),\r\n            dateOfBirth: patientDOB,\r\n            phoneNumber: phoneNumber,\r\n            address: address,\r\n            emergencyContact: emergencyContact,\r\n            insuranceProvider: insuranceProvider,\r\n            insurancePolicyNumber: insurancePolicyNumber,\r\n            lastVisit: new Date().toISOString().split('T')[0],\r\n            upcomingAppointment: 'To be scheduled',\r\n            isActive: true\r\n        };\r\n\r\n        // Add to shared state\r\n        sharedStateService.addPatient(newPatient);\r\n\r\n        alert(`‚úÖ New patient added successfully!\r\n\r\nüë§ Name: ${newPatient.name}\r\nüìß Email: ${newPatient.email}\r\nüéÇ DOB: ${newPatient.dateOfBirth}\r\nüìû Phone: ${newPatient.phoneNumber}\r\nüè• Insurance: ${newPatient.insuranceProvider}\r\n\r\nThe patient is now available for creating medical records.`);\r\n    };\r\n\r\n    const handleViewNFT = (nftId: string) => {\r\n        const nft = nftRecords.find(n => n.id === nftId);\r\n        if (!nft) {\r\n            alert('‚ùå NFT not found. Please try again.');\r\n            return;\r\n        }\r\n\r\n        const patient = myPatients.find(p => p.id === nft.patientId);\r\n        const relatedRecord = recentRecords.find(r => r.id === nft.recordId);\r\n\r\n        alert(`üé® NFT Health Record Details\r\n\r\nüè∑Ô∏è Name: ${nft.name}\r\nüìù Description: ${nft.description}\r\nüÜî Token ID: ${nft.tokenId}\r\nüë§ Patient: ${patient?.name || nft.patientId}\r\nüìã Related Record: ${relatedRecord?.title || nft.recordId}\r\n\r\nüîó Blockchain Details:\r\nüåê Network: ${nft.blockchainNetwork}\r\nüìç Contract Address: ${nft.contractAddress}\r\nüë§ Current Owner: ${nft.currentOwner}\r\nüìÖ Mint Date: ${new Date(nft.mintDate).toLocaleString()}\r\nüîÑ Transferable: ${nft.isTransferable ? 'Yes' : 'No'}\r\nüîê Access Level: ${nft.accessLevel}\r\n\r\nüìé Metadata URI: ${nft.metadataUri}\r\nüñºÔ∏è Image URL: ${nft.imageUrl}\r\n\r\n‚úÖ This NFT represents a verified medical record stored securely on the blockchain.\r\nüõ°Ô∏è The NFT provides immutable proof of medical data authenticity.`);\r\n    };\r\n\r\n    // File encryption handlers\r\n    const handleFileSelection = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = event.target.files;\r\n        if (files) {\r\n            const pdfFiles = Array.from(files).filter(file => file.type === 'application/pdf');\r\n            if (pdfFiles.length !== files.length) {\r\n                alert('‚ö†Ô∏è Only PDF files are allowed. Non-PDF files have been filtered out.');\r\n            }\r\n            setSelectedFiles(prev => [...prev, ...pdfFiles]);\r\n        }\r\n    };\r\n\r\n    const removeSelectedFile = (index: number) => {\r\n        setSelectedFiles(prev => prev.filter((_, i) => i !== index));\r\n    }; const handleEncryptSelectedFiles = async () => {\r\n        if (selectedFiles.length === 0) {\r\n            alert('‚ùå Please select PDF files to encrypt first.');\r\n            return;\r\n        }\r\n\r\n        const password = prompt('üîí Enter password to encrypt the selected PDF files:');\r\n        if (!password || !password.trim()) {\r\n            alert('‚ùå Password is required for encryption.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const encryptedFiles: { name: string; encryptedData: string }[] = [];\r\n\r\n            for (const file of selectedFiles) {\r\n                // Read file as base64\r\n                const reader = new FileReader();\r\n                const fileData = await new Promise<string>((resolve) => {\r\n                    reader.onload = () => resolve(reader.result as string);\r\n                    reader.readAsDataURL(file);\r\n                });\r\n\r\n                // Encrypt the file data\r\n                const customEncryption = new EncryptionService();\r\n                const salt = customEncryption.generateSalt();\r\n                customEncryption.deriveKey(password, salt);\r\n                const encryptedData = customEncryption.encryptData(fileData);\r\n\r\n                encryptedFiles.push({\r\n                    name: file.name.replace('.pdf', '.enc'), // Change extension to .enc\r\n                    encryptedData: encryptedData\r\n                });\r\n            }\r\n\r\n            // Create download links for encrypted files\r\n            encryptedFiles.forEach(({ name, encryptedData }) => {\r\n                const blob = new Blob([encryptedData], { type: 'application/octet-stream' });\r\n                const url = URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.download = name;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            });\r\n\r\n            alert(`‚úÖ Successfully encrypted and downloaded ${encryptedFiles.length} file(s)!\r\n\r\nüîê Encryption Details:\r\nüìÑ Files: ${encryptedFiles.map(f => f.name).join(', ')}\r\nüõ°Ô∏è Security: AES-256 with password protection\r\nüìÖ Encrypted: ${new Date().toLocaleString()}\r\nüîí Format: .enc (encrypted files)\r\n\r\n‚ö†Ô∏è Remember your password - you'll need it to decrypt these .enc files!\r\nüîÑ The encrypted .enc files have been downloaded to your computer.`);\r\n\r\n            // Clear selected files\r\n            setSelectedFiles([]);\r\n\r\n            // Reset file input\r\n            const fileInput = document.getElementById('pdf-file-input') as HTMLInputElement;\r\n            if (fileInput) {\r\n                fileInput.value = '';\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('File encryption error:', error);\r\n            alert('‚ùå Failed to encrypt files. Please try again.');\r\n        }\r\n    };\r\n\r\n    // Encrypted file handlers\r\n    const handleEncryptedFileSelection = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = event.target.files;\r\n        if (files) {\r\n            const encFiles = Array.from(files).filter(file => file.name.endsWith('.enc'));\r\n            if (encFiles.length !== files.length) {\r\n                alert('‚ö†Ô∏è Only .enc files are allowed. Non-.enc files have been filtered out.');\r\n            }\r\n            setSelectedEncryptedFiles(prev => [...prev, ...encFiles]);\r\n        }\r\n    };\r\n\r\n    const removeSelectedEncryptedFile = (index: number) => {\r\n        setSelectedEncryptedFiles(prev => prev.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const handleDecryptSelectedFiles = async () => {\r\n        if (selectedEncryptedFiles.length === 0) {\r\n            alert('‚ùå Please select .enc files to decrypt first.');\r\n            return;\r\n        }\r\n\r\n        const password = prompt('üîì Enter password to decrypt the selected .enc files:');\r\n        if (!password || !password.trim()) {\r\n            alert('‚ùå Password is required for decryption.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const decryptedFiles: { name: string; decryptedData: string }[] = [];\r\n\r\n            for (const file of selectedEncryptedFiles) {\r\n                // Read encrypted file content\r\n                const reader = new FileReader();\r\n                const encryptedContent = await new Promise<string>((resolve) => {\r\n                    reader.onload = () => resolve(reader.result as string);\r\n                    reader.readAsText(file);\r\n                });\r\n\r\n                try {\r\n                    // Decrypt the file data\r\n                    const customEncryption = new EncryptionService();\r\n                    const decryptedData = customEncryption.decryptData(encryptedContent);\r\n\r\n                    decryptedFiles.push({\r\n                        name: file.name.replace('.enc', '.pdf'), // Change extension back to .pdf\r\n                        decryptedData: decryptedData\r\n                    });\r\n                } catch (decryptError) {\r\n                    alert(`‚ùå Failed to decrypt ${file.name}. Incorrect password or corrupted file.`);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (decryptedFiles.length === 0) {\r\n                alert('‚ùå No files were successfully decrypted. Please check your password.');\r\n                return;\r\n            }\r\n\r\n            // Create download links for decrypted files\r\n            decryptedFiles.forEach(({ name, decryptedData }) => {\r\n                // Convert base64 back to blob\r\n                const byteCharacters = atob(decryptedData.split(',')[1]);\r\n                const byteNumbers = new Array(byteCharacters.length);\r\n                for (let i = 0; i < byteCharacters.length; i++) {\r\n                    byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n                }\r\n                const byteArray = new Uint8Array(byteNumbers);\r\n                const blob = new Blob([byteArray], { type: 'application/pdf' });\r\n\r\n                const url = URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.download = name;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            });\r\n\r\n            alert(`‚úÖ Successfully decrypted and downloaded ${decryptedFiles.length} PDF file(s)!\r\n\r\nüîì Decryption Details:\r\nüìÑ Files: ${decryptedFiles.map(f => f.name).join(', ')}\r\nüõ°Ô∏è Security: Successfully decrypted with correct password\r\nüìÖ Decrypted: ${new Date().toLocaleString()}\r\nüìÑ Format: .pdf (original PDF files restored)\r\n\r\n‚úÖ Your PDF files are now available and ready to use!\r\nüîÑ The decrypted PDF files have been downloaded to your computer.`);\r\n\r\n            // Clear selected encrypted files\r\n            setSelectedEncryptedFiles([]);\r\n\r\n            // Reset file input\r\n            const encFileInput = document.getElementById('enc-file-input') as HTMLInputElement;\r\n            if (encFileInput) {\r\n                encFileInput.value = '';\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('File decryption error:', error);\r\n            alert('‚ùå Failed to decrypt files. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50\">\r\n            {/* Header */}\r\n            <header className=\"bg-white shadow-sm border-b\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                    <div className=\"flex justify-between items-center h-16\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"flex-shrink-0\">\r\n                                <h1 className=\"text-xl font-bold text-gray-900\">ü©∫ Doctor Dashboard</h1>\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <Badge variant=\"success\" size=\"sm\">üîí HIPAA Compliant</Badge>\r\n                                <Badge variant=\"primary\" size=\"sm\" className=\"ml-2\">üë®‚Äç‚öïÔ∏è Medical Access</Badge>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center space-x-4\">\r\n                            <Timer\r\n                                duration={sessionTimeLeft}\r\n                                onExpire={handleSessionExpire}\r\n                                className=\"text-sm\"\r\n                            />\r\n\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <img\r\n                                    className=\"h-8 w-8 rounded-full\"\r\n                                    src={`https://ui-avatars.com/api/?name=${user.name}&background=2563eb&color=fff`}\r\n                                    alt={user.name}\r\n                                />\r\n                                <div className=\"text-sm\">\r\n                                    <div className=\"font-medium text-gray-900\">{user.name}</div>\r\n                                    <div className=\"text-blue-600 font-semibold\">{user.role.toUpperCase()}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button\r\n                                onClick={onLogout}\r\n                                className=\"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\"\r\n                            >\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            {/* Navigation Tabs */}\r\n            <div className=\"bg-white border-b\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                    <nav className=\"flex space-x-8\">\r\n                        {[\r\n                            { id: 'patients', label: 'üë• My Patients', icon: 'üë•' },\r\n                            { id: 'records', label: 'üìã Medical Records', icon: 'üìã' },\r\n                            { id: 'insurance', label: 'üí∞ Insurance Claims', icon: 'üí∞' },\r\n                            { id: 'nfts', label: 'üé® NFT Health Records', icon: 'üé®' },\r\n                            { id: 'security', label: 'üîí Security Tools', icon: 'üîí' }\r\n                        ].map((tab) => (\r\n                            <button\r\n                                key={tab.id}\r\n                                onClick={() => setActiveTab(tab.id as any)}\r\n                                className={`py-4 px-1 border-b-2 font-medium text-sm ${activeTab === tab.id\r\n                                    ? 'border-blue-500 text-blue-600'\r\n                                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                                    }`}\r\n                            >\r\n                                {tab.label}\r\n                            </button>\r\n                        ))}\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Main Content */}\r\n            <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n\r\n                {/* Patients Tab */}\r\n                {activeTab === 'patients' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">üë• My Patients</h3>\r\n                            <div className=\"flex items-center space-x-4\">\r\n                                <button\r\n                                    onClick={handleAddNewPatient}\r\n                                    className=\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\"\r\n                                >\r\n                                    + New Patient\r\n                                </button>\r\n                                <div className=\"text-sm text-gray-500\">\r\n                                    {myPatients.length} active patients\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"grid gap-6\">\r\n                                {myPatients.map((patient) => (\r\n                                    <div key={patient.id} className=\"border rounded-lg p-6 hover:shadow-md transition-shadow\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex items-center space-x-4\">\r\n                                                <img\r\n                                                    className=\"h-12 w-12 rounded-full\"\r\n                                                    src={`https://ui-avatars.com/api/?name=${patient.name}&background=random`}\r\n                                                    alt={patient.name}\r\n                                                />\r\n                                                <div>\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">{patient.name}</h4>\r\n                                                    <p className=\"text-sm text-gray-500\">{patient.email}</p>\r\n                                                    <p className=\"text-sm text-gray-500\">DOB: {patient.dateOfBirth}</p>\r\n                                                    <p className=\"text-sm text-gray-500\">Phone: {patient.phoneNumber}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <Badge variant=\"success\" size=\"sm\">Active</Badge>\r\n                                                <p className=\"text-sm text-gray-500 mt-2\">Last Visit: {patient.lastVisit}</p>\r\n                                                <p className=\"text-sm text-blue-600 font-medium\">Next: {patient.upcomingAppointment}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                            <div>\r\n                                                <p className=\"text-sm font-medium text-gray-900\">Insurance</p>\r\n                                                <p className=\"text-sm text-gray-500\">{patient.insuranceProvider}</p>\r\n                                                <p className=\"text-sm text-gray-400 font-mono\">{patient.insurancePolicyNumber}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-sm font-medium text-gray-900\">Emergency Contact</p>\r\n                                                <p className=\"text-sm text-gray-500\">{patient.emergencyContact}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"mt-4 flex space-x-3\">\r\n                                            <button\r\n                                                onClick={handleCreateRecord}\r\n                                                className=\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\"\r\n                                            >\r\n                                                üìã New Record\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleSubmitInsuranceClaim(patient.id)}\r\n                                                className=\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\"\r\n                                            >\r\n                                                üí∞ Submit Claim\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleViewHistory(patient.id)}\r\n                                                className=\"bg-gray-600 text-white px-4 py-2 rounded text-sm hover:bg-gray-700\"\r\n                                            >\r\n                                                üëÅÔ∏è View History\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleDownloadPatientPDF(patient.id)}\r\n                                                className=\"bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700\"\r\n                                            >\r\n                                                üìÑ Download Records\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Medical Records Tab */}\r\n                {activeTab === 'records' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">üìã Recent Medical Records</h3>\r\n                            <button\r\n                                onClick={handleCreateRecord}\r\n                                className=\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\"\r\n                            >\r\n                                + New Record\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"space-y-6\">\r\n                                {recentRecords.map((record) => (\r\n                                    <div key={record.id} className=\"border rounded-lg p-6\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">{record.title}</h4>\r\n                                                    {record.doctorId === user.id ? (\r\n                                                        <Badge variant=\"primary\" size=\"sm\">üë®‚Äç‚öïÔ∏è Doctor Added</Badge>\r\n                                                    ) : (\r\n                                                        <Badge variant=\"info\" size=\"sm\">üë§ Patient Added</Badge>\r\n                                                    )}\r\n                                                    {recordEncryptionStatus[record.id] ? (\r\n                                                        <Badge variant=\"warning\" size=\"sm\">üîí ENCRYPTED</Badge>\r\n                                                    ) : (\r\n                                                        <Badge variant=\"success\" size=\"sm\">üìÑ Plain Text</Badge>\r\n                                                    )}\r\n                                                    <Badge variant=\"primary\" size=\"sm\">üß± On-Chain</Badge>\r\n                                                    {record.nftTokenId && (\r\n                                                        <Badge variant=\"secondary\" size=\"sm\">üé® NFT</Badge>\r\n                                                    )}\r\n                                                </div>\r\n                                                <p className=\"text-sm text-gray-600 mb-2\">{record.description}</p>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === record.patientId)?.name}</p>\r\n                                                        <p><span className=\"font-medium\">Date:</span> {record.date}</p>\r\n                                                        <p><span className=\"font-medium\">Diagnosis:</span> {record.diagnosis}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Prescription:</span> {record.prescription}</p>\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Blockchain:</span> {record.blockchainHash}</p>\r\n                                                        {record.ipfsHash && (\r\n                                                            <p className=\"font-mono text-xs\"><span className=\"font-medium\">IPFS:</span> {record.ipfsHash}</p>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"ml-4 flex flex-col space-y-2\">\r\n                                                {!record.nftTokenId && (\r\n                                                    <button\r\n                                                        onClick={() => handleMintNFT(record.id)}\r\n                                                        className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\"\r\n                                                    >\r\n                                                        üé® Mint NFT\r\n                                                    </button>\r\n                                                )}\r\n                                                <button\r\n                                                    onClick={() => handleEncryptRecord(record.id)}\r\n                                                    className=\"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\"\r\n                                                >\r\n                                                    üîí Encrypt\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDecryptRecord(record.id)}\r\n                                                    className=\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\"\r\n                                                >\r\n                                                    üîì Decrypt\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleViewRecord(record.id)}\r\n                                                    className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\"\r\n                                                >\r\n                                                    üëÅÔ∏è View\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDownloadPDF(record.id)}\r\n                                                    className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\"\r\n                                                >\r\n                                                    üìÑ Download PDF\r\n                                                </button>\r\n                                                <button className=\"bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700\">\r\n                                                    ‚úèÔ∏è Edit\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Insurance Claims Tab */}\r\n                {activeTab === 'insurance' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">üí∞ Insurance Claims</h3>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"space-y-6\">\r\n                                {insuranceClaims.map((claim) => (\r\n                                    <div key={claim.id} className=\"border rounded-lg p-6\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">Claim #{claim.claimNumber}</h4>\r\n                                                    <Badge variant={getStatusColor(claim.status)} size=\"sm\">\r\n                                                        {claim.status.toUpperCase()}\r\n                                                    </Badge>\r\n                                                    {claim.isProcessedOnChain && (\r\n                                                        <Badge variant=\"primary\" size=\"sm\">üß± On-Chain</Badge>\r\n                                                    )}\r\n                                                </div>\r\n                                                <p className=\"text-sm text-gray-600 mb-2\">{claim.description}</p>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === claim.patientId)?.name}</p>\r\n                                                        <p><span className=\"font-medium\">Amount:</span> ${claim.amount.toFixed(2)}</p>\r\n                                                        <p><span className=\"font-medium\">Submitted:</span> {claim.submissionDate}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Provider:</span> {claim.insuranceProvider}</p>\r\n                                                        {claim.approvalDate && (\r\n                                                            <p><span className=\"font-medium\">Approved:</span> {claim.approvalDate}</p>\r\n                                                        )}\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Contract:</span> {claim.smartContractAddress}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Tx ID:</span> {claim.blockchainTxId?.substring(0, 20)}...</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"ml-4\">\r\n                                                <button\r\n                                                    onClick={() => handleViewInsuranceClaim(claim.id)}\r\n                                                    className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\"\r\n                                                >\r\n                                                    üëÅÔ∏è View Details\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* NFT Health Records Tab */}\r\n                {activeTab === 'nfts' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">üé® NFT Health Records</h3>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                                {nftRecords.map((nft) => (\r\n                                    <div key={nft.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                                        <div className=\"aspect-square bg-gradient-to-br from-blue-400 to-purple-500 rounded-lg mb-4 flex items-center justify-center\">\r\n                                            <span className=\"text-white text-4xl\">üè•</span>\r\n                                        </div>\r\n                                        <div className=\"space-y-2\">\r\n                                            <h4 className=\"font-medium text-gray-900\">{nft.name}</h4>\r\n                                            <p className=\"text-sm text-gray-600\">{nft.description}</p>\r\n                                            <div className=\"text-xs space-y-1\">\r\n                                                <p><span className=\"font-medium\">Token ID:</span> {nft.tokenId}</p>\r\n                                                <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === nft.patientId)?.name}</p>\r\n                                                <p><span className=\"font-medium\">Network:</span> {nft.blockchainNetwork}</p>\r\n                                                <p><span className=\"font-medium\">Minted:</span> {new Date(nft.mintDate).toLocaleDateString()}</p>\r\n                                                <p className=\"font-mono\"><span className=\"font-medium\">Contract:</span> {nft.contractAddress.substring(0, 10)}...</p>\r\n                                            </div>\r\n                                            <div className=\"flex items-center justify-between pt-2\">\r\n                                                <Badge variant=\"secondary\" size=\"sm\">\r\n                                                    {nft.isTransferable ? 'Transferable' : 'Non-Transferable'}\r\n                                                </Badge>\r\n                                                <div className=\"flex space-x-2\">\r\n                                                    <button\r\n                                                        onClick={() => handleViewNFT(nft.id)}\r\n                                                        className=\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700 font-medium\"\r\n                                                    >\r\n                                                        üëÅÔ∏è View NFT\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={() => {\r\n                                                            const relatedRecord = recentRecords.find(r => r.id === nft.recordId);\r\n                                                            if (relatedRecord) {\r\n                                                                handleDownloadPDF(relatedRecord.id);\r\n                                                            } else {\r\n                                                                alert('Related medical record not found');\r\n                                                            }\r\n                                                        }}\r\n                                                        className=\"bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700\"\r\n                                                    >\r\n                                                        üìÑ PDF\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Security Tools Tab */}\r\n                {activeTab === 'security' && (\r\n                    <div className=\"space-y-6\">\r\n                        <div className=\"bg-white shadow rounded-lg\">\r\n                            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                                <h3 className=\"text-lg font-medium text-gray-900\">üîí Encryption & Security Tools</h3>\r\n                                <p className=\"text-sm text-gray-500 mt-1\">Secure patient records with advanced encryption</p>\r\n                            </div>\r\n                            <div className=\"p-6\">\r\n                                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                                    <div className=\"space-y-4\">\r\n                                        <h4 className=\"font-medium text-gray-900\">üîê PDF File Encryption</h4>\r\n                                        <p className=\"text-sm text-gray-600\">Choose PDF files from your computer to encrypt</p>\r\n                                        <div className=\"space-y-4\">\r\n                                            <div className=\"p-4 border-2 border-dashed border-gray-300 rounded-lg bg-gray-50\">\r\n                                                <div className=\"text-center\">\r\n                                                    <span className=\"text-4xl mb-4 block\">üîí</span>\r\n                                                    <h5 className=\"font-medium text-gray-900 mb-2\">Encrypt PDF Files</h5>\r\n                                                    <p className=\"text-sm text-gray-600 mb-4\">Select PDF files from your computer to encrypt with password protection</p>\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        accept=\".pdf\"\r\n                                                        multiple\r\n                                                        onChange={handleFileSelection}\r\n                                                        className=\"hidden\"\r\n                                                        id=\"pdf-file-input\"\r\n                                                    />\r\n                                                    <label\r\n                                                        htmlFor=\"pdf-file-input\"\r\n                                                        className=\"bg-green-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-green-700 inline-block\"\r\n                                                    >\r\n                                                        üìÅ Choose PDF Files to Encrypt\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {selectedFiles.length > 0 && (\r\n                                                <div className=\"p-4 border rounded-lg bg-blue-50\">\r\n                                                    <h6 className=\"font-medium text-blue-900 mb-2\">Selected Files ({selectedFiles.length})</h6>\r\n                                                    <div className=\"space-y-2\">\r\n                                                        {selectedFiles.map((file, index) => (\r\n                                                            <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded\">\r\n                                                                <div className=\"flex items-center space-x-2\">\r\n                                                                    <span className=\"text-blue-600\">üìÑ</span>\r\n                                                                    <span className=\"text-sm font-medium\">{file.name}</span>\r\n                                                                    <span className=\"text-xs text-gray-500\">({Math.round(file.size / 1024)} KB)</span>\r\n                                                                </div>\r\n                                                                <button\r\n                                                                    onClick={() => removeSelectedFile(index)}\r\n                                                                    className=\"text-red-600 hover:text-red-800 text-xs\"\r\n                                                                >\r\n                                                                    ‚ùå Remove\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                    <button\r\n                                                        onClick={handleEncryptSelectedFiles}\r\n                                                        className=\"w-full mt-3 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n                                                    >\r\n                                                        üîí Encrypt Selected Files\r\n                                                    </button>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            <div className=\"p-4 border rounded-lg bg-orange-50\">\r\n                                                <h6 className=\"font-medium text-orange-900 mb-2\">üìã PDF Encryption/Decryption Workflow</h6>\r\n                                                <p className=\"text-sm text-orange-700 mb-3\">\r\n                                                    üîí <strong>Encryption:</strong> PDF ‚Üí .enc (encrypted file)<br />\r\n                                                    üîì <strong>Decryption:</strong> .enc ‚Üí PDF (original file)<br />\r\n                                                    üí° Export PDFs from Medical Records, then encrypt here\r\n                                                </p>\r\n                                                <button\r\n                                                    onClick={() => setActiveTab('records')}\r\n                                                    className=\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\"\r\n                                                >\r\n                                                    üìã Go to Medical Records\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"space-y-4\">\r\n                                        <h4 className=\"font-medium text-gray-900\">ÔøΩ PDF File Decryption</h4>\r\n                                        <p className=\"text-sm text-gray-600\">Choose encrypted (.enc) files from your computer to decrypt</p>\r\n                                        <div className=\"space-y-4\">\r\n                                            <div className=\"p-4 border-2 border-dashed border-orange-300 rounded-lg bg-orange-50\">\r\n                                                <div className=\"text-center\">\r\n                                                    <span className=\"text-4xl mb-4 block\">üîì</span>\r\n                                                    <h5 className=\"font-medium text-gray-900 mb-2\">Decrypt Encrypted Files</h5>\r\n                                                    <p className=\"text-sm text-gray-600 mb-4\">Select .enc files from your computer to decrypt with password</p>\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        accept=\".enc\"\r\n                                                        multiple\r\n                                                        onChange={handleEncryptedFileSelection}\r\n                                                        className=\"hidden\"\r\n                                                        id=\"enc-file-input\"\r\n                                                    />\r\n                                                    <label\r\n                                                        htmlFor=\"enc-file-input\"\r\n                                                        className=\"bg-orange-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-orange-700 inline-block\"\r\n                                                    >\r\n                                                        üìÅ Choose .enc Files to Decrypt\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {selectedEncryptedFiles.length > 0 && (\r\n                                                <div className=\"p-4 border rounded-lg bg-orange-50\">\r\n                                                    <h6 className=\"font-medium text-orange-900 mb-2\">Selected Encrypted Files ({selectedEncryptedFiles.length})</h6>\r\n                                                    <div className=\"space-y-2\">\r\n                                                        {selectedEncryptedFiles.map((file, index) => (\r\n                                                            <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded\">\r\n                                                                <div className=\"flex items-center space-x-2\">\r\n                                                                    <span className=\"text-orange-600\">üîí</span>\r\n                                                                    <span className=\"text-sm font-medium\">{file.name}</span>\r\n                                                                    <span className=\"text-xs text-gray-500\">({Math.round(file.size / 1024)} KB)</span>\r\n                                                                </div>\r\n                                                                <button\r\n                                                                    onClick={() => removeSelectedEncryptedFile(index)}\r\n                                                                    className=\"text-red-600 hover:text-red-800 text-xs\"\r\n                                                                >\r\n                                                                    ‚ùå Remove\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                    <button\r\n                                                        onClick={handleDecryptSelectedFiles}\r\n                                                        className=\"w-full mt-3 bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700\"\r\n                                                    >\r\n                                                        ÔøΩ Decrypt Selected Files\r\n                                                    </button>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n\r\n                                        <h4 className=\"font-medium text-gray-900\">üìã Clipboard Security</h4>\r\n                                        <p className=\"text-sm text-gray-600\">Monitor clipboard for suspicious wallet addresses</p>\r\n                                        <div className=\"p-4 border rounded-lg\">\r\n                                            <div className=\"flex items-center justify-between mb-3\">\r\n                                                <span className=\"text-sm font-medium\">Clipboard Monitoring</span>\r\n                                                <Badge variant={clipboardMonitoring ? 'success' : 'secondary'} size=\"sm\">\r\n                                                    {clipboardMonitoring ? 'Active' : 'Inactive'}\r\n                                                </Badge>\r\n                                            </div>\r\n                                            <button\r\n                                                onClick={toggleClipboardMonitoring}\r\n                                                className={`w-full px-4 py-2 rounded text-sm ${clipboardMonitoring\r\n                                                    ? 'bg-red-600 hover:bg-red-700 text-white'\r\n                                                    : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n                                                    }`}\r\n                                            >\r\n                                                {clipboardMonitoring ? '‚èπÔ∏è Stop Monitoring' : 'üîç Start Monitoring'}\r\n                                            </button>\r\n                                            <div className=\"mt-3 text-xs text-gray-500\">\r\n                                                <p>‚Ä¢ Detects cryptocurrency wallet addresses</p>\r\n                                                <p>‚Ä¢ Alerts on suspicious clipboard activity</p>\r\n                                                <p>‚Ä¢ Protects against clipboard hijacking</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                                    <div className=\"flex items-start\">\r\n                                        <span className=\"text-yellow-600 text-lg mr-2\">‚ö†Ô∏è</span>\r\n                                        <div>\r\n                                            <h5 className=\"font-medium text-yellow-800\">Security Notice</h5>\r\n                                            <p className=\"text-sm text-yellow-700 mt-1\">\r\n                                                Always ensure patient records are encrypted before transmission.\r\n                                                Use blockchain verification for data integrity and monitor for suspicious activities.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </main>\r\n\r\n            {/* Create Record Modal */}\r\n            {showCreateRecordModal && (\r\n                <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n                    <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\r\n                        <div className=\"mt-3\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Create New Medical Record</h3>\r\n                            <div className=\"space-y-4\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Patient</label>\r\n                                    <select\r\n                                        value={newRecordForm.patientId}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, patientId: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                    >\r\n                                        <option value=\"\">Select Patient</option>\r\n                                        {myPatients.map((patient) => (\r\n                                            <option key={patient.id} value={patient.id}>{patient.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Title</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newRecordForm.title}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, title: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"Record title\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Diagnosis</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newRecordForm.diagnosis}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, diagnosis: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"Diagnosis\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Prescription</label>\r\n                                    <textarea\r\n                                        value={newRecordForm.prescription}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, prescription: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        rows={3}\r\n                                        placeholder=\"Prescription details\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n                                    <textarea\r\n                                        value={newRecordForm.description}\r\n                                        onChange={(e) => setNewRecordForm(prev => ({ ...prev, description: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        rows={3}\r\n                                        placeholder=\"Additional notes\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex justify-end space-x-3 mt-6\">\r\n                                <button\r\n                                    onClick={() => setShowCreateRecordModal(false)}\r\n                                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    onClick={handleSaveRecord}\r\n                                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n                                >\r\n                                    Create Record\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Insurance Claim Modal */}\r\n            {showClaimModal && (\r\n                <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n                    <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\r\n                        <div className=\"mt-3\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Submit Insurance Claim</h3>\r\n                            <div className=\"space-y-4\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Patient</label>\r\n                                    <select\r\n                                        value={newClaimForm.patientId}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, patientId: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                    >\r\n                                        <option value=\"\">Select Patient</option>\r\n                                        {myPatients.map((patient) => (\r\n                                            <option key={patient.id} value={patient.id}>{patient.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Insurance Provider</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newClaimForm.insuranceProvider}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, insuranceProvider: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"Insurance company name\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Claim Amount ($)</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={newClaimForm.amount}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, amount: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        placeholder=\"0.00\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n                                    <textarea\r\n                                        value={newClaimForm.description}\r\n                                        onChange={(e) => setNewClaimForm(prev => ({ ...prev, description: e.target.value }))}\r\n                                        className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                                        rows={4}\r\n                                        placeholder=\"Claim description and details\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex justify-end space-x-3 mt-6\">\r\n                                <button\r\n                                    onClick={() => setShowClaimModal(false)}\r\n                                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    onClick={handleSaveClaim}\r\n                                    className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\r\n                                >\r\n                                    Submit Claim\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}