{"ast":null,"code":"import _objectSpread from\"D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import Badge from'../UI/Badge';import Timer from'../UI/Timer';import{RoleBasedAccessService}from'../../services/rbacService';import{EncryptionService}from'../../services/encryption';import{sharedStateService}from'../../services/sharedState';import{pdfService}from'../../services/pdfService';import{FirebaseService}from'../../services/firebaseService';import{clipboardMonitoringService}from'../../services/clipboardMonitoring';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DoctorDashboard=_ref=>{let{user,onLogout}=_ref;const[sessionTimeLeft]=useState(1800);const[rbacService]=useState(new RoleBasedAccessService());const[activeTab,setActiveTab]=useState('patients');// Modal states\nconst[showCreateRecordModal,setShowCreateRecordModal]=useState(false);const[showClaimModal,setShowClaimModal]=useState(false);// Security states\nconst[clipboardMonitoring,setClipboardMonitoring]=useState(false);const[suspiciousAddressAlert,setSuspiciousAddressAlert]=useState(null);const[encryptedRecords,setEncryptedRecords]=useState({});const[recordEncryptionStatus,setRecordEncryptionStatus]=useState({});const[selectedFiles,setSelectedFiles]=useState([]);const[selectedEncryptedFiles,setSelectedEncryptedFiles]=useState([]);// Form states\nconst[newRecordForm,setNewRecordForm]=useState({patientId:'',title:'',description:'',diagnosis:'',prescription:'',notes:''});const[newClaimForm,setNewClaimForm]=useState({patientId:'',amount:'',description:'',insuranceProvider:''});const[myPatients,setMyPatients]=useState([]);const[recentRecords,setRecentRecords]=useState([]);const[insuranceClaims,setInsuranceClaims]=useState([{id:'claim-1',claimNumber:'CLM-2025-001',patientId:'patient-1',providerId:user.id,doctorId:user.id,insuranceCompany:'HealthFirst Insurance',insuranceProvider:'HealthFirst Insurance',amount:450.0,status:'approved',submittedAt:'2025-07-01T10:00:00Z',submissionDate:'2025-07-01',approvalDate:'2025-07-03',description:'Annual physical examination and blood work',relatedRecords:['record-1'],smartContractAddress:'0x1234567890abcdef1234567890abcdef12345678',blockchainTxId:'0xabc123def456789abcdef123456789abc123def456789abcdef',isProcessedOnChain:true,approvalSignatures:[],ipfsDocuments:[]},{id:'claim-2',claimNumber:'CLM-2025-002',patientId:'patient-2',providerId:user.id,doctorId:user.id,insuranceCompany:'MediCare Plus',insuranceProvider:'MediCare Plus',amount:275.5,status:'pending',submittedAt:'2025-07-04T14:30:00Z',submissionDate:'2025-07-04',description:'Follow-up consultation and medication review',relatedRecords:['record-2'],smartContractAddress:'0x1234567890abcdef1234567890abcdef12345678',blockchainTxId:'0xdef456abc789123def456abc789123def456abc789123def',isProcessedOnChain:false,approvalSignatures:[],ipfsDocuments:[]}]);const[nftRecords,setNftRecords]=useState([{id:'nft-1',tokenId:'HEALTH-NFT-001',patientId:'patient-1',recordId:'record-1',name:'Annual Physical 2025',description:'Comprehensive health examination record',imageUrl:'https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=NFT-001',metadataUri:'ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP',contractAddress:'0x9876543210fedcba9876543210fedcba98765432',blockchainNetwork:'Ethereum',mintDate:'2025-07-04T10:30:00Z',currentOwner:'patient-1',isTransferable:false,accessLevel:'doctor_patient'},{id:'nft-2',tokenId:'HEALTH-NFT-002',patientId:'patient-2',recordId:'record-2',name:'Follow-up Consultation',description:'Treatment follow-up and medication adjustment',imageUrl:'https://via.placeholder.com/200x200/059669/FFFFFF?text=NFT-002',metadataUri:'ipfs://QmY8AX6sRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0nQ',contractAddress:'0x9876543210fedcba9876543210fedcba98765432',blockchainNetwork:'Ethereum',mintDate:'2025-07-03T14:45:00Z',currentOwner:'patient-2',isTransferable:false,accessLevel:'doctor_patient'}]);useEffect(()=>{rbacService.setCurrentUser(user);},[user,rbacService]);useEffect(()=>{const patients=sharedStateService.getPatients();const allRecords=sharedStateService.getMedicalRecords();setMyPatients(patients);setRecentRecords(allRecords);const unsubscribeFirebase=FirebaseService.subscribeMedicalRecords(firebaseRecords=>{firebaseRecords.forEach(record=>{if(!sharedStateService.getMedicalRecords().find(r=>r.id===record.id)){sharedStateService.addMedicalRecord(record);}});});const unsubscribePatients=sharedStateService.onPatientsChange(setMyPatients);const unsubscribeRecords=sharedStateService.onMedicalRecordsChange(setRecentRecords);return()=>{unsubscribeFirebase();unsubscribePatients();unsubscribeRecords();};},[user.id]);const handleSessionExpire=()=>{window.confirm('Session expired for security. Please login again.')&&onLogout();};const handleCreateRecord=()=>{setShowCreateRecordModal(true);};const handleSubmitInsuranceClaim=patientId=>{setNewClaimForm(prev=>_objectSpread(_objectSpread({},prev),{},{patientId}));setShowClaimModal(true);};const handleMintNFT=recordId=>{console.log(\"Minting NFT for record: \".concat(recordId));// Find the medical record\nconst medicalRecord=recentRecords.find(record=>record.id===recordId);if(!medicalRecord){alert('❌ Medical record not found');return;}// Find the patient\nconst patient=myPatients.find(p=>p.id===medicalRecord.patientId);if(!patient){alert('❌ Patient not found');return;}// Generate new NFT token ID\nconst tokenId=\"HEALTH-NFT-\".concat(String(nftRecords.length+1).padStart(3,'0'));// Create new NFT record\nconst newNFT={id:\"nft-\".concat(Date.now()),tokenId:tokenId,patientId:medicalRecord.patientId,recordId:recordId,name:medicalRecord.title||\"Medical Record \".concat(recordId),description:medicalRecord.description||\"\".concat(medicalRecord.diagnosis,\" - \").concat(medicalRecord.prescription),imageUrl:\"https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=\".concat(tokenId),metadataUri:\"ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP\".concat(Date.now()),contractAddress:'0x9876543210fedcba9876543210fedcba98765432',blockchainNetwork:'Ethereum',mintDate:new Date().toISOString(),currentOwner:medicalRecord.patientId,isTransferable:false,accessLevel:'doctor_patient'};// Add NFT to the list\nsetNftRecords(prev=>[...prev,newNFT]);// Update the medical record to include the NFT token ID\nsetRecentRecords(prev=>prev.map(record=>record.id===recordId?_objectSpread(_objectSpread({},record),{},{nftTokenId:tokenId}):record));// Show success message\nalert(\"\\u2705 NFT Successfully Minted!\\n\\n\\uD83C\\uDFA8 Token ID: \".concat(tokenId,\"\\n\\uD83D\\uDC64 Patient: \").concat(patient.name,\"\\n\\uD83D\\uDCCB Record: \").concat(medicalRecord.title,\"\\n\\u26D3\\uFE0F Network: Ethereum\\n\\uD83D\\uDCC5 Minted: \").concat(new Date().toLocaleString(),\"\\n\\nThe NFT has been created and is now visible in the \\\"NFT Health Records\\\" tab.\"));};const handleViewHistory=patientId=>{const patient=myPatients.find(p=>p.id===patientId);const patientRecords=recentRecords.filter(record=>record.patientId===patientId);if(patient&&patientRecords.length>0){const historyDetails=patientRecords.map(record=>\"\\uD83D\\uDCCB \".concat(record.title,\" (\").concat(record.date,\")\\n   Diagnosis: \").concat(record.diagnosis,\"\\n   Prescription: \").concat(record.prescription)).join('\\n\\n');alert(\"\\uD83D\\uDC65 Medical History for \".concat(patient.name,\"\\n\\uD83D\\uDCE7 Email: \").concat(patient.email,\"\\n\\uD83C\\uDF82 DOB: \").concat(patient.dateOfBirth,\"\\n\\uD83C\\uDFE5 Insurance: \").concat(patient.insuranceProvider,\"\\n\\uD83D\\uDCDE Phone: \").concat(patient.phoneNumber,\"\\n\\uD83C\\uDFE0 Address: \").concat(patient.address,\"\\n\\uD83D\\uDEA8 Emergency Contact: \").concat(patient.emergencyContact,\"\\n\\uD83D\\uDCC5 Last Visit: \").concat(patient.lastVisit,\"\\n\\u23ED\\uFE0F Next Appointment: \").concat(patient.upcomingAppointment,\"\\n\\n\\uD83D\\uDCCB MEDICAL RECORDS:\\n\").concat(historyDetails,\"\\n\\nTotal Records: \").concat(patientRecords.length));}else{alert(\"No medical history found for this patient.\");}};const handleEncryptRecord=recordId=>{const record=recentRecords.find(r=>r.id===recordId);if(record){var _myPatients$find;if(recordEncryptionStatus[recordId]){alert('⚠️ This record is already encrypted. Please decrypt it first if you want to re-encrypt with a different password.');return;}const password=prompt(\"\\uD83D\\uDD12 Enter a password to encrypt \\\"\".concat(record.title,\"\\\" for patient: \").concat(((_myPatients$find=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find===void 0?void 0:_myPatients$find.name)||record.patientId));if(password&&password.trim()){try{var _myPatients$find2;const customEncryption=new EncryptionService();const recordData=_objectSpread(_objectSpread({},record),{},{encryptedBy:user.name,encryptedAt:new Date().toISOString()});const salt=customEncryption.generateSalt();customEncryption.deriveKey(password,salt);const encryptedData=customEncryption.encryptData(JSON.stringify(recordData));setEncryptedRecords(prev=>_objectSpread(_objectSpread({},prev),{},{[recordId]:encryptedData}));setRecordEncryptionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[recordId]:true}));alert(\"\\uD83D\\uDD12 SUCCESS! Record \\\"\".concat(record.title,\"\\\" has been encrypted with your custom password.\\n          \\n\\uD83D\\uDCCB Record: \").concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat((_myPatients$find2=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find2===void 0?void 0:_myPatients$find2.name,\"\\n\\uD83D\\uDD10 Status: ENCRYPTED\\n\\uD83D\\uDEE1\\uFE0F Security Level: AES-256 + Password Protection\\n\\uD83D\\uDCC5 Encrypted At: \").concat(new Date().toLocaleString(),\"\\n\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Encrypted By: \").concat(user.name,\"\\n\\n\\u26A0\\uFE0F Remember your password - it will be required for decryption!\"));}catch(error){alert('❌ Encryption failed. Please try again.');}}else{alert('❌ Password is required for encryption.');}}};const handleDecryptRecord=recordId=>{if(!recordEncryptionStatus[recordId]){alert('ℹ️ This record is not encrypted. No decryption needed.');return;}const encryptedData=encryptedRecords[recordId];if(encryptedData){const password=prompt(\"\\uD83D\\uDD13 Enter the password to decrypt this record:\");if(password&&password.trim()){try{var _myPatients$find3;const customEncryption=new EncryptionService();const decryptedData=customEncryption.decryptData(encryptedData);const record=JSON.parse(decryptedData);alert(\"\\uD83D\\uDD13 DECRYPTION SUCCESSFUL!\\n\\n\\uD83D\\uDCCB Title: \".concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat(((_myPatients$find3=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find3===void 0?void 0:_myPatients$find3.name)||record.patientId,\"\\n\\uD83D\\uDCC5 Date: \").concat(record.date,\"\\n\\uD83E\\uDE7A Diagnosis: \").concat(record.diagnosis,\"\\n\\uD83D\\uDC8A Prescription: \").concat(record.prescription,\"\\n\\uD83D\\uDCDD Description: \").concat(record.description,\"\\n\\n\\uD83D\\uDD12 Encryption Details:\\n\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Encrypted By: \").concat(record.encryptedBy||'Unknown',\"\\n\\uD83D\\uDCC5 Encrypted At: \").concat(record.encryptedAt?new Date(record.encryptedAt).toLocaleString():'Unknown',\"\\n\\uD83D\\uDEE1\\uFE0F Security: Password-protected AES-256\"));const permanentDecrypt=window.confirm('🔓 Do you want to permanently decrypt this record? (This will remove encryption)');if(permanentDecrypt){setEncryptedRecords(prev=>{const updated=_objectSpread({},prev);delete updated[recordId];return updated;});setRecordEncryptionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[recordId]:false}));alert('✅ Record has been permanently decrypted and is now in plain text.');}}catch(error){alert('❌ Decryption failed. Incorrect password or corrupted data.');}}else{alert('❌ Password is required for decryption.');}}else{alert('❌ No encrypted data found for this record.');}};const handleViewRecord=recordId=>{const record=recentRecords.find(r=>r.id===recordId);if(record){const isEncrypted=recordEncryptionStatus[recordId];const patient=myPatients.find(p=>p.id===record.patientId);if(isEncrypted){const viewEncrypted=window.confirm(\"\\uD83D\\uDD12 This record is encrypted. \\n\\nDo you want to:\\n- Click \\\"OK\\\" to view encrypted version\\n- Click \\\"Cancel\\\" to decrypt and view\");if(viewEncrypted){alert(\"\\uD83D\\uDD12 ENCRYPTED RECORD VIEW\\n\\n\\uD83D\\uDCCB Title: \".concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||record.patientId,\"\\n\\uD83D\\uDCC5 Date: \").concat(record.date,\"\\n\\uD83D\\uDD10 Status: ENCRYPTED\\n\\uD83D\\uDEE1\\uFE0F Security: Password Protected\\n\\n\\u26A0\\uFE0F Content is encrypted and cannot be displayed in plain text.\\nUse the decrypt button to view the full content.\"));}else{handleDecryptRecord(recordId);}}else{alert(\"\\uD83D\\uDC41\\uFE0F MEDICAL RECORD DETAILS\\n\\n\\uD83D\\uDCCB Title: \".concat(record.title,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||record.patientId,\"\\n\\uD83D\\uDCE7 Email: \").concat((patient===null||patient===void 0?void 0:patient.email)||'N/A',\"\\n\\uD83D\\uDCC5 Date: \").concat(record.date,\"\\n\\uD83E\\uDE7A Diagnosis: \").concat(record.diagnosis,\"\\n\\uD83D\\uDC8A Prescription: \").concat(record.prescription,\"\\n\\uD83D\\uDCDD Description: \").concat(record.description,\"\\n\\n\\uD83D\\uDD17 Blockchain Details:\\n\\uD83E\\uDDF1 Hash: \").concat(record.blockchainHash||'N/A',\"\\n\\uD83D\\uDCCE IPFS: \").concat(record.ipfsHash||'N/A',\"\\n\\uD83C\\uDFA8 NFT Token: \").concat(record.nftTokenId||'Not minted',\"\\n\\u2705 Verified: \").concat(record.isVerified?'Yes':'No',\"\\n\\uD83D\\uDD10 Encryption: Not encrypted\"));}}};const toggleClipboardMonitoring=()=>{const newState=!clipboardMonitoring;setClipboardMonitoring(newState);if(newState){const started=clipboardMonitoringService.startMonitoring(suspiciousAddress=>{setSuspiciousAddressAlert(suspiciousAddress);alert(\"\\uD83D\\uDEA8 SECURITY ALERT: Suspicious Wallet Address Detected!\\n\\n\\u26A0\\uFE0F Address: \".concat(suspiciousAddress,\"\\n\\uD83D\\uDD0D Reason: This address matches known suspicious patterns or is on the blacklist\\n\\uD83D\\uDEE1\\uFE0F Action: Please verify this address before proceeding with any transactions\\n\\nThis could be:\\n\\u2022 A fake/test address\\n\\u2022 A known hacked wallet\\n\\u2022 A phishing attempt\\n\\u2022 An address with suspicious patterns\\n\\n\\uD83D\\uDEA8 Do NOT send any funds to this address unless you're absolutely certain it's legitimate!\"));});if(started){alert('🔍 Clipboard monitoring enabled! The system is now actively monitoring for suspicious wallet addresses and will alert you with sound if any are detected.');}else{alert('❌ Failed to start clipboard monitoring. Your browser may not support this feature.');setClipboardMonitoring(false);}}else{clipboardMonitoringService.stopMonitoring();setSuspiciousAddressAlert(null);alert('⏹️ Clipboard monitoring disabled.');}};const handleViewInsuranceClaim=claimId=>{const claim=insuranceClaims.find(c=>c.id===claimId);if(claim){const patient=myPatients.find(p=>p.id===claim.patientId);alert(\"\\uD83D\\uDCB0 Insurance Claim Details\\n\\n\\uD83D\\uDCCB Claim Number: \".concat(claim.claimNumber,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||claim.patientId,\"\\n\\uD83D\\uDCB5 Amount: $\").concat(claim.amount.toFixed(2),\"\\n\\uD83D\\uDCCA Status: \").concat(claim.status.toUpperCase(),\"\\n\\uD83C\\uDFE5 Insurance Provider: \").concat(claim.insuranceProvider,\"\\n\\uD83D\\uDCC5 Submitted: \").concat(claim.submissionDate,\"\\n\").concat(claim.approvalDate?\"\\u2705 Approved: \".concat(claim.approvalDate):'⏳ Pending approval',\"\\n\\uD83D\\uDCDD Description: \").concat(claim.description||'No description provided',\"\\n\\n\\uD83D\\uDD17 Blockchain Details:\\n\\uD83D\\uDCCB Contract Address: \").concat(claim.smartContractAddress,\"\\n\\uD83C\\uDD94 Transaction ID: \").concat(claim.blockchainTxId,\"\\n\\u26D3\\uFE0F On-Chain Status: \").concat(claim.isProcessedOnChain?'Processed':'Pending',\"\\n\\n\\uD83D\\uDCC4 Related Records: \").concat(claim.relatedRecords.length,\" record(s)\\n\\uD83D\\uDCCE Documents: \").concat(claim.ipfsDocuments.length,\" file(s) on IPFS\"));}};const handleSaveRecord=async()=>{if(!newRecordForm.title||!newRecordForm.patientId){alert('Please fill in all required fields');return;}const patient=myPatients.find(p=>p.id===newRecordForm.patientId);if(!patient){alert('Patient not found');return;}try{const newRecord={id:sharedStateService.generateId('record'),patientId:newRecordForm.patientId,doctorId:user.id,title:newRecordForm.title,description:newRecordForm.description,date:new Date().toISOString().split('T')[0],diagnosis:newRecordForm.diagnosis,prescription:newRecordForm.prescription,isEncrypted:false,isVerified:true,accessPermissions:[user.id,newRecordForm.patientId],blockchainHash:\"0x\".concat(Date.now().toString(16),\"abc\").concat(Math.random().toString(16).slice(2,8)),ipfsHash:\"Qm\".concat(Math.random().toString(36).slice(2,15)).concat(Date.now().toString(36)),nftTokenId:undefined};sharedStateService.addMedicalRecord(newRecord);// Update local state immediately for UI responsiveness\nsetRecentRecords(prev=>[...prev,newRecord]);try{await FirebaseService.addMedicalRecord(newRecord);}catch(error){console.warn('Failed to sync with Firebase:',error);}alert(\"\\u2705 Medical record created successfully!\\n\\n\\uD83D\\uDCCB Record: \".concat(newRecord.title,\"\\n\\uD83D\\uDC64 Patient: \").concat(patient.name,\"\\n\\uD83D\\uDCC5 Date: \").concat(newRecord.date,\"\\n\\uD83E\\uDE7A Diagnosis: \").concat(newRecord.diagnosis,\"\\n\\uD83D\\uDC8A Prescription: \").concat(newRecord.prescription,\"\\n\\uD83D\\uDD17 Real-time sync: Enabled\\n\\nThe record has been added to your medical records list and synced with the database for real-time access.\"));setShowCreateRecordModal(false);setNewRecordForm({patientId:'',title:'',description:'',diagnosis:'',prescription:'',notes:''});}catch(error){console.error('Error saving record:',error);alert('❌ Failed to save record. Please try again.');}};const handleSaveClaim=async()=>{if(!newClaimForm.amount||!newClaimForm.description||!newClaimForm.patientId){alert('Please fill in all required fields');return;}const patient=myPatients.find(p=>p.id===newClaimForm.patientId);if(!patient){alert('Patient not found');return;}try{const newClaim={id:\"claim-\".concat(Date.now()),claimNumber:\"CLM-\".concat(Date.now()),patientId:newClaimForm.patientId,providerId:user.id,doctorId:user.id,insuranceCompany:newClaimForm.insuranceProvider||patient.insuranceProvider,insuranceProvider:newClaimForm.insuranceProvider||patient.insuranceProvider,amount:parseFloat(newClaimForm.amount),status:'pending',submittedAt:new Date().toISOString(),submissionDate:new Date().toLocaleDateString(),description:newClaimForm.description,relatedRecords:[],smartContractAddress:'0x1234567890abcdef1234567890abcdef12345678',blockchainTxId:\"0x\".concat(Date.now().toString(16)),isProcessedOnChain:false,approvalSignatures:[],ipfsDocuments:[]};setInsuranceClaims(prev=>[...prev,newClaim]);alert(\"\\u2705 Insurance claim submitted successfully!\\n\\n\\uD83D\\uDCCB Claim Number: \".concat(newClaim.claimNumber,\"\\n\\uD83D\\uDC64 Patient: \").concat(patient.name,\"\\n\\uD83D\\uDCB5 Amount: $\").concat(newClaim.amount.toFixed(2),\"\\n\\uD83D\\uDCCA Status: \").concat(newClaim.status.toUpperCase(),\"\\n\\uD83D\\uDCDD Description: \").concat(newClaim.description));setShowClaimModal(false);setNewClaimForm({patientId:'',amount:'',description:'',insuranceProvider:''});}catch(error){console.error('Error saving claim:',error);alert('❌ Failed to save claim. Please try again.');}};const getStatusColor=status=>{switch(status){case'approved':return'success';case'pending':return'warning';case'rejected':return'error';case'paid':return'success';case'under_review':return'info';case'submitted':return'primary';default:return'secondary';}};const handleDownloadPDF=async recordId=>{const record=recentRecords.find(r=>r.id===recordId);if(!record){alert('Record not found');return;}const patient=myPatients.find(p=>p.id===record.patientId);if(!patient){alert('Patient not found');return;}try{await pdfService.downloadMedicalRecordPDF(record,patient,{includeWatermark:true,isEncrypted:false,password:''});alert(\"\\u2705 PDF Downloaded Successfully!\\n\\n\\uD83D\\uDCC4 File: medical_record_\".concat(record.id,\"_\").concat(patient.name.replace(/\\s+/g,'_'),\".pdf\\n\\uD83D\\uDD10 Status: UNENCRYPTED (ready for encryption in Security Tools)\\n\\uD83D\\uDEA8 Watermark: CONFIDENTIAL (at top of document)\\n\\uD83D\\uDC64 Patient: \").concat(patient.name,\"\\n\\uD83D\\uDCCB Record: \").concat(record.title,\"\\n\\n\\uD83D\\uDCA1 Next Steps:\\n1. Go to Security Tools tab\\n2. Select this PDF file to encrypt\\n3. Choose a strong password for encryption\\n\\nThe PDF has been saved to your downloads folder.\"));}catch(error){console.error('PDF download error:',error);alert(\"\\u274C Failed to download PDF: \".concat(error instanceof Error?error.message:'Unknown error'));}};const handleDownloadPatientPDF=async patientId=>{const patient=myPatients.find(p=>p.id===patientId);if(!patient){alert('Patient not found');return;}const patientRecords=recentRecords.filter(record=>record.patientId===patientId);if(patientRecords.length===0){alert(\"No medical records found for \".concat(patient.name,\". Create some records first.\"));return;}try{if(patientRecords.length===1){await pdfService.downloadMedicalRecordPDF(patientRecords[0],patient,{includeWatermark:true,isEncrypted:false,password:''});}else{const batchPDF=await pdfService.generateBatchPDF(patientRecords,[patient],{includeWatermark:true,isEncrypted:false,password:''});const url=URL.createObjectURL(batchPDF);const link=document.createElement('a');link.href=url;const filename=\"medical_records_\".concat(patient.name.replace(/\\s+/g,'_'),\"_batch.pdf\");link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);}alert(\"\\u2705 PDF Downloaded Successfully!\\n\\n\\uD83D\\uDC64 Patient: \".concat(patient.name,\"\\n\\uD83D\\uDCC4 Records: \").concat(patientRecords.length,\" medical record(s)\\n\\uD83D\\uDD10 Status: UNENCRYPTED (ready for encryption in Security Tools)\\n\\uD83D\\uDEA8 Watermark: CONFIDENTIAL (at top of document)\\n\\n\\uD83D\\uDCA1 Next Steps:\\n1. Go to Security Tools tab\\n2. Select this PDF file to encrypt\\n3. Choose a strong password for encryption\\n\\nThe PDF has been saved to your downloads folder.\"));}catch(error){console.error('PDF download error:',error);alert(\"\\u274C Failed to download PDF: \".concat(error instanceof Error?error.message:'Unknown error'));}};const handleAddNewPatient=()=>{const patientName=prompt('👤 Enter new patient name:');if(!patientName||!patientName.trim()){alert('❌ Patient name is required');return;}const patientEmail=prompt('📧 Enter patient email:');if(!patientEmail||!patientEmail.trim()||!patientEmail.includes('@')){alert('❌ Valid email is required');return;}const patientDOB=prompt('🎂 Enter patient date of birth (YYYY-MM-DD):');if(!patientDOB||!patientDOB.match(/^\\d{4}-\\d{2}-\\d{2}$/)){alert('❌ Date of birth is required in YYYY-MM-DD format');return;}const phoneNumber=prompt('📞 Enter patient phone number:')||'';const address=prompt('🏠 Enter patient address:')||'';const emergencyContact=prompt('🚨 Enter emergency contact (Name - Phone):')||'';const insuranceProvider=prompt('🏥 Enter insurance provider:')||'None';const insurancePolicyNumber=prompt('📄 Enter insurance policy number:')||'';const newPatient={id:sharedStateService.generateId('patient'),name:patientName.trim(),email:patientEmail.trim(),dateOfBirth:patientDOB,phoneNumber,address,emergencyContact,insuranceProvider,insurancePolicyNumber,lastVisit:new Date().toISOString().split('T')[0],upcomingAppointment:'To be scheduled',isActive:true};sharedStateService.addPatient(newPatient);alert(\"\\u2705 New patient added successfully!\\n\\n\\uD83D\\uDC64 Name: \".concat(newPatient.name,\"\\n\\uD83D\\uDCE7 Email: \").concat(newPatient.email,\"\\n\\uD83C\\uDF82 DOB: \").concat(newPatient.dateOfBirth,\"\\n\\uD83D\\uDCDE Phone: \").concat(newPatient.phoneNumber,\"\\n\\uD83C\\uDFE5 Insurance: \").concat(newPatient.insuranceProvider,\"\\n\\nThe patient is now available for creating medical records.\"));};const handleViewNFT=nftId=>{const nft=nftRecords.find(n=>n.id===nftId);if(!nft){alert('❌ NFT not found. Please try again.');return;}const patient=myPatients.find(p=>p.id===nft.patientId);const relatedRecord=recentRecords.find(r=>r.id===nft.recordId);alert(\"\\uD83C\\uDFA8 NFT Health Record Details\\n\\n\\uD83C\\uDFF7\\uFE0F Name: \".concat(nft.name,\"\\n\\uD83D\\uDCDD Description: \").concat(nft.description,\"\\n\\uD83C\\uDD94 Token ID: \").concat(nft.tokenId,\"\\n\\uD83D\\uDC64 Patient: \").concat((patient===null||patient===void 0?void 0:patient.name)||nft.patientId,\"\\n\\uD83D\\uDCCB Related Record: \").concat((relatedRecord===null||relatedRecord===void 0?void 0:relatedRecord.title)||nft.recordId,\"\\n\\n\\uD83D\\uDD17 Blockchain Details:\\n\\uD83C\\uDF10 Network: \").concat(nft.blockchainNetwork,\"\\n\\uD83D\\uDCCD Contract Address: \").concat(nft.contractAddress,\"\\n\\uD83D\\uDC64 Current Owner: \").concat(nft.currentOwner,\"\\n\\uD83D\\uDCC5 Mint Date: \").concat(new Date(nft.mintDate).toLocaleString(),\"\\n\\uD83D\\uDD04 Transferable: \").concat(nft.isTransferable?'Yes':'No',\"\\n\\uD83D\\uDD10 Access Level: \").concat(nft.accessLevel,\"\\n\\n\\uD83D\\uDCCE Metadata URI: \").concat(nft.metadataUri,\"\\n\\uD83D\\uDDBC\\uFE0F Image URL: \").concat(nft.imageUrl,\"\\n\\n\\u2705 This NFT represents a verified medical record stored securely on the blockchain.\\n\\uD83D\\uDEE1\\uFE0F The NFT provides immutable proof of medical data authenticity.\"));};const handleFileSelection=event=>{const files=event.target.files;if(files){const pdfFiles=Array.from(files).filter(file=>file.type==='application/pdf');if(pdfFiles.length!==files.length){alert('⚠️ Only PDF files are allowed. Non-PDF files have been filtered out.');}setSelectedFiles(prev=>[...prev,...pdfFiles]);}};const removeSelectedFile=index=>{setSelectedFiles(prev=>prev.filter((_,i)=>i!==index));};const handleEncryptSelectedFiles=async()=>{if(selectedFiles.length===0){alert('❌ Please select PDF files to encrypt first.');return;}const password=prompt('🔒 Enter password to encrypt the selected PDF files:');if(!password||!password.trim()){alert('❌ Password is required for encryption.');return;}try{const encryptedFiles=[];for(const file of selectedFiles){const reader=new FileReader();const fileData=await new Promise(resolve=>{reader.onload=()=>resolve(reader.result);reader.readAsDataURL(file);});const customEncryption=new EncryptionService();const salt=customEncryption.generateSalt();customEncryption.deriveKey(password,salt);const encryptedData=customEncryption.encryptData(fileData);encryptedFiles.push({name:file.name.replace('.pdf','.enc'),encryptedData});}encryptedFiles.forEach(_ref2=>{let{name,encryptedData}=_ref2;const blob=new Blob([encryptedData],{type:'application/octet-stream'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=name;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);});alert(\"\\u2705 Successfully encrypted and downloaded \".concat(encryptedFiles.length,\" file(s)!\\n\\n\\uD83D\\uDD10 Encryption Details:\\n\\uD83D\\uDCC4 Files: \").concat(encryptedFiles.map(f=>f.name).join(', '),\"\\n\\uD83D\\uDEE1\\uFE0F Security: AES-256 with password protection\\n\\uD83D\\uDCC5 Encrypted: \").concat(new Date().toLocaleString(),\"\\n\\uD83D\\uDD12 Format: .enc (encrypted files)\\n\\n\\u26A0\\uFE0F Remember your password - you'll need it to decrypt these .enc files!\\n\\uD83D\\uDD04 The encrypted .enc files have been downloaded to your computer.\"));setSelectedFiles([]);const fileInput=document.getElementById('pdf-file-input');if(fileInput){fileInput.value='';}}catch(error){console.error('File encryption error:',error);alert('❌ Failed to encrypt files. Please try again.');}};const handleEncryptedFileSelection=event=>{const files=event.target.files;if(files){const encFiles=Array.from(files).filter(file=>file.name.endsWith('.enc'));if(encFiles.length!==files.length){alert('⚠️ Only .enc files are allowed. Non-.enc files have been filtered out.');}setSelectedEncryptedFiles(prev=>[...prev,...encFiles]);}};const removeSelectedEncryptedFile=index=>{setSelectedEncryptedFiles(prev=>prev.filter((_,i)=>i!==index));};const handleDecryptSelectedFiles=async()=>{if(selectedEncryptedFiles.length===0){alert('❌ Please select .enc files to decrypt first.');return;}const password=prompt('🔓 Enter password to decrypt the selected .enc files:');if(!password||!password.trim()){alert('❌ Password is required for decryption.');return;}try{const decryptedFiles=[];for(const file of selectedEncryptedFiles){const reader=new FileReader();const encryptedContent=await new Promise(resolve=>{reader.onload=()=>resolve(reader.result);reader.readAsText(file);});try{const customEncryption=new EncryptionService();const decryptedData=customEncryption.decryptData(encryptedContent);decryptedFiles.push({name:file.name.replace('.enc','.pdf'),decryptedData});}catch(decryptError){alert(\"\\u274C Failed to decrypt \".concat(file.name,\". Incorrect password or corrupted file.\"));continue;}}if(decryptedFiles.length===0){alert('❌ No files were successfully decrypted. Please check your password.');return;}decryptedFiles.forEach(_ref3=>{let{name,decryptedData}=_ref3;const byteCharacters=atob(decryptedData.split(',')[1]);const byteNumbers=new Array(byteCharacters.length);for(let i=0;i<byteCharacters.length;i++){byteNumbers[i]=byteCharacters.charCodeAt(i);}const byteArray=new Uint8Array(byteNumbers);const blob=new Blob([byteArray],{type:'application/pdf'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=name;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);});alert(\"\\u2705 Successfully decrypted and downloaded \".concat(decryptedFiles.length,\" PDF file(s)!\\n\\n\\uD83D\\uDD13 Decryption Details:\\n\\uD83D\\uDCC4 Files: \").concat(decryptedFiles.map(f=>f.name).join(', '),\"\\n\\uD83D\\uDEE1\\uFE0F Security: Successfully decrypted with correct password\\n\\uD83D\\uDCC5 Decrypted: \").concat(new Date().toLocaleString(),\"\\n\\uD83D\\uDCC4 Format: .pdf (original PDF files restored)\\n\\n\\u2705 Your PDF files are now available and ready to use!\\n\\uD83D\\uDD04 The decrypted PDF files have been downloaded to your computer.\"));setSelectedEncryptedFiles([]);const encFileInput=document.getElementById('enc-file-input');if(encFileInput){encFileInput.value='';}}catch(error){console.error('File decryption error:',error);alert('❌ Failed to decrypt files. Please try again.');}};const handleEditRecord=recordId=>{alert('✏️ Editing records is not implemented yet.');console.log(\"Edit record: \".concat(recordId));};// Modal Components\nconst CreateRecordModal=()=>/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg p-6 w-full max-w-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"\\uD83D\\uDCCB Create New Medical Record\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Patient\"}),/*#__PURE__*/_jsxs(\"select\",{value:newRecordForm.patientId,onChange:e=>setNewRecordForm(_objectSpread(_objectSpread({},newRecordForm),{},{patientId:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a patient\"}),myPatients.map(patient=>/*#__PURE__*/_jsx(\"option\",{value:patient.id,children:patient.name},patient.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newRecordForm.title,onChange:e=>setNewRecordForm(_objectSpread(_objectSpread({},newRecordForm),{},{title:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newRecordForm.description,onChange:e=>setNewRecordForm(_objectSpread(_objectSpread({},newRecordForm),{},{description:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Diagnosis\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newRecordForm.diagnosis,onChange:e=>setNewRecordForm(_objectSpread(_objectSpread({},newRecordForm),{},{diagnosis:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Prescription\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newRecordForm.prescription,onChange:e=>setNewRecordForm(_objectSpread(_objectSpread({},newRecordForm),{},{prescription:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Notes\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newRecordForm.notes,onChange:e=>setNewRecordForm(_objectSpread(_objectSpread({},newRecordForm),{},{notes:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex justify-end space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowCreateRecordModal(false),className:\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveRecord,className:\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",children:\"Save Record\"})]})]})});const CreateClaimModal=()=>/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg p-6 w-full max-w-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"\\uD83D\\uDCB0 Submit Insurance Claim\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Patient\"}),/*#__PURE__*/_jsxs(\"select\",{value:newClaimForm.patientId,onChange:e=>setNewClaimForm(_objectSpread(_objectSpread({},newClaimForm),{},{patientId:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a patient\"}),myPatients.map(patient=>/*#__PURE__*/_jsx(\"option\",{value:patient.id,children:patient.name},patient.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Amount ($)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:newClaimForm.amount,onChange:e=>setNewClaimForm(_objectSpread(_objectSpread({},newClaimForm),{},{amount:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:newClaimForm.description,onChange:e=>setNewClaimForm(_objectSpread(_objectSpread({},newClaimForm),{},{description:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Insurance Provider\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newClaimForm.insuranceProvider,onChange:e=>setNewClaimForm(_objectSpread(_objectSpread({},newClaimForm),{},{insuranceProvider:e.target.value})),className:\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex justify-end space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowClaimModal(false),className:\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveClaim,className:\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",children:\"Submit Claim\"})]})]})});return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-white shadow-sm border-b\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center h-16\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold text-gray-900\",children:\"\\uD83E\\uDE7A Doctor Dashboard\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[/*#__PURE__*/_jsx(Badge,{variant:\"success\",size:\"sm\",children:\"\\uD83D\\uDD12 HIPAA Compliant\"}),/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",className:\"ml-2\",children:\"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Medical Access\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(Timer,{duration:sessionTimeLeft,onExpire:handleSessionExpire,className:\"text-sm\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"h-8 w-8 rounded-full\",src:\"https://ui-avatars.com/api/?name=\".concat(user.name,\"&background=2563eb&color=fff\"),alt:user.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:user.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-600 font-semibold\",children:user.role.toUpperCase()})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onLogout,className:\"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\",children:\"Logout\"})]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white border-b\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsx(\"nav\",{className:\"flex space-x-8\",children:[{id:'patients',label:'👥 My Patients',icon:'👥'},{id:'records',label:'📋 Medical Records',icon:'📋'},{id:'insurance',label:'💰 Insurance Claims',icon:'💰'},{id:'nfts',label:'🎨 NFT Health Records',icon:'🎨'},{id:'security',label:'🔒 Security Tools',icon:'🔒'}].map(tab=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab(tab.id),className:\"py-4 px-1 border-b-2 font-medium text-sm \".concat(activeTab===tab.id?'border-blue-500 text-blue-600':'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'),children:tab.label},tab.id))})})}),/*#__PURE__*/_jsxs(\"main\",{className:\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",children:[showCreateRecordModal&&/*#__PURE__*/_jsx(CreateRecordModal,{}),showClaimModal&&/*#__PURE__*/_jsx(CreateClaimModal,{}),activeTab==='patients'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDC65 My Patients\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAddNewPatient,className:\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\",children:\"+ New Patient\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[myPatients.length,\" active patients\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid gap-6\",children:myPatients.map(patient=>/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-6 hover:shadow-md transition-shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"h-12 w-12 rounded-full\",src:\"https://ui-avatars.com/api/?name=\".concat(patient.name,\"&background=random\"),alt:patient.name}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-medium text-gray-900\",children:patient.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:patient.email}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"DOB: \",patient.dateOfBirth]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"Phone: \",patient.phoneNumber]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsx(Badge,{variant:\"success\",size:\"sm\",children:\"Active\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 mt-2\",children:[\"Last Visit: \",patient.lastVisit]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-blue-600 font-medium\",children:[\"Next: \",patient.upcomingAppointment]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-900\",children:\"Insurance\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:patient.insuranceProvider}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 font-mono\",children:patient.insurancePolicyNumber})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-900\",children:\"Emergency Contact\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:patient.emergencyContact})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 flex space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateRecord,className:\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\",children:\"\\uD83D\\uDCCB New Record\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSubmitInsuranceClaim(patient.id),className:\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\",children:\"\\uD83D\\uDCB0 Submit Claim\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewHistory(patient.id),className:\"bg-gray-600 text-white px-4 py-2 rounded text-sm hover:bg-gray-700\",children:\"\\uD83D\\uDC41\\uFE0F View History\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDownloadPatientPDF(patient.id),className:\"bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700\",children:\"\\uD83D\\uDCC4 Download Records\"})]}),(()=>{const patientRecords=recentRecords.filter(record=>record.patientId===patient.id);return patientRecords.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 pt-6 border-t border-gray-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDCCB Recent Medical Records\"}),/*#__PURE__*/_jsxs(Badge,{variant:\"info\",size:\"sm\",children:[patientRecords.length,\" record(s)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[patientRecords.slice(0,3).map(record=>{var _record$blockchainHas;return/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 rounded-lg p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-2\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"font-medium text-gray-900\",children:record.title}),record.doctorId===user.id?/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",children:\"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Doctor Added\"}):/*#__PURE__*/_jsx(Badge,{variant:\"info\",size:\"sm\",children:\"\\uD83D\\uDC64 Patient Added\"}),recordEncryptionStatus[record.id]?/*#__PURE__*/_jsx(Badge,{variant:\"warning\",size:\"sm\",children:\"\\uD83D\\uDD12 ENCRYPTED\"}):/*#__PURE__*/_jsx(Badge,{variant:\"success\",size:\"sm\",children:\"\\uD83D\\uDCC4 Plain Text\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:record.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-2 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Date:\"}),\" \",record.date]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Diagnosis:\"}),\" \",record.diagnosis]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Prescription:\"}),\" \",record.prescription]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Blockchain:\"}),\" \",(_record$blockchainHas=record.blockchainHash)===null||_record$blockchainHas===void 0?void 0:_record$blockchainHas.slice(0,20),\"...\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4 flex flex-col space-y-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewRecord(record.id),className:\"bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700\",children:\"\\uD83D\\uDC41\\uFE0F View\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDownloadPDF(record.id),className:\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700\",children:\"\\uD83D\\uDCC4 PDF\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEncryptRecord(record.id),className:\"bg-green-600 text-white px-2 py-1 rounded text-xs hover:bg-green-700\",children:\"\\uD83D\\uDD12 Encrypt\"})]})]})},record.id);}),patientRecords.length>3&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setActiveTab('records'),className:\"text-blue-600 hover:text-blue-800 text-sm font-medium\",children:[\"View all \",patientRecords.length,\" records in Medical Records tab \\u2192\"]})})]})]});})()]},patient.id))})})]}),activeTab==='records'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDCCB Recent Medical Records\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateRecord,className:\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\",children:\"+ New Record\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:recentRecords.map(record=>{var _myPatients$find4;return/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-medium text-gray-900\",children:record.title}),record.doctorId===user.id?/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",children:\"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Doctor Added\"}):/*#__PURE__*/_jsx(Badge,{variant:\"info\",size:\"sm\",children:\"\\uD83D\\uDC64 Patient Added\"}),recordEncryptionStatus[record.id]?/*#__PURE__*/_jsx(Badge,{variant:\"warning\",size:\"sm\",children:\"\\uD83D\\uDD12 ENCRYPTED\"}):/*#__PURE__*/_jsx(Badge,{variant:\"success\",size:\"sm\",children:\"\\uD83D\\uDCC4 Plain Text\"}),/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",children:\"\\uD83E\\uDDF1 On-Chain\"}),record.nftTokenId&&/*#__PURE__*/_jsx(Badge,{variant:\"secondary\",size:\"sm\",children:\"\\uD83C\\uDFA8 NFT\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:record.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Patient:\"}),' ',(_myPatients$find4=myPatients.find(p=>p.id===record.patientId))===null||_myPatients$find4===void 0?void 0:_myPatients$find4.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Date:\"}),\" \",record.date]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Diagnosis:\"}),\" \",record.diagnosis]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Prescription:\"}),\" \",record.prescription]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Blockchain:\"}),\" \",record.blockchainHash]}),record.ipfsHash&&/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"IPFS:\"}),\" \",record.ipfsHash]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4 flex flex-col space-y-2\",children:[!record.nftTokenId&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMintNFT(record.id),className:\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\",children:\"\\uD83C\\uDFA8 Mint NFT\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEncryptRecord(record.id),className:\"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\",children:\"\\uD83D\\uDD12 Encrypt\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDecryptRecord(record.id),className:\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\",children:\"\\uD83D\\uDD13 Decrypt\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewRecord(record.id),className:\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\",children:\"\\uD83D\\uDC41\\uFE0F View\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDownloadPDF(record.id),className:\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\",children:\"\\uD83D\\uDCC4 Download PDF\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditRecord(record.id),className:\"bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700\",children:\"\\u270F\\uFE0F Edit\"})]})]})},record.id);})})})]}),activeTab==='insurance'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDCB0 Insurance Claims\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:insuranceClaims.map(claim=>{var _myPatients$find5,_claim$blockchainTxId;return/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-2\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-lg font-medium text-gray-900\",children:[\"Claim #\",claim.claimNumber]}),/*#__PURE__*/_jsx(Badge,{variant:getStatusColor(claim.status),size:\"sm\",children:claim.status.toUpperCase()}),claim.isProcessedOnChain&&/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",children:\"\\uD83E\\uDDF1 On-Chain\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:claim.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Patient:\"}),' ',(_myPatients$find5=myPatients.find(p=>p.id===claim.patientId))===null||_myPatients$find5===void 0?void 0:_myPatients$find5.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Amount:\"}),\" $\",claim.amount.toFixed(2)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Submitted:\"}),\" \",claim.submissionDate]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Provider:\"}),\" \",claim.insuranceProvider]}),claim.approvalDate&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Approved:\"}),\" \",claim.approvalDate]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Contract:\"}),\" \",claim.smartContractAddress]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Tx ID:\"}),\" \",(_claim$blockchainTxId=claim.blockchainTxId)===null||_claim$blockchainTxId===void 0?void 0:_claim$blockchainTxId.substring(0,20),\"...\"]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-4\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewInsuranceClaim(claim.id),className:\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\",children:\"\\uD83D\\uDC41\\uFE0F View Details\"})})]})},claim.id);})})})]}),activeTab==='nfts'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83C\\uDFA8 NFT Health Records\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",children:nftRecords.map(nft=>{var _myPatients$find6;return/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-4 hover:shadow-md transition-shadow\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"aspect-square bg-gradient-to-br from-blue-400 to-purple-500 rounded-lg mb-4 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-4xl\",children:\"\\uD83C\\uDFE5\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900\",children:nft.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:nft.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs space-y-1\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Token ID:\"}),\" \",nft.tokenId]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Patient:\"}),' ',(_myPatients$find6=myPatients.find(p=>p.id===nft.patientId))===null||_myPatients$find6===void 0?void 0:_myPatients$find6.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Network:\"}),\" \",nft.blockchainNetwork]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Minted:\"}),\" \",new Date(nft.mintDate).toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Contract:\"}),\" \",nft.contractAddress.substring(0,10),\"...\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between pt-2\",children:[/*#__PURE__*/_jsx(Badge,{variant:\"secondary\",size:\"sm\",children:nft.isTransferable?'Transferable':'Non-Transferable'}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewNFT(nft.id),className:\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700 font-medium\",children:\"\\uD83D\\uDC41\\uFE0F View NFT\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const relatedRecord=recentRecords.find(r=>r.id===nft.recordId);if(relatedRecord){handleDownloadPDF(relatedRecord.id);}else{alert('Related medical record not found');}},className:\"bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700\",children:\"\\uD83D\\uDCC4 PDF\"})]})]})]})]},nft.id);})})})]}),activeTab==='security'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"\\uD83D\\uDD12 Encryption & Security Tools\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mt-1\",children:\"Secure patient records with advanced encryption\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-4xl mb-4 block\",children:\"\\uD83D\\uDD12\"}),/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-900 mb-2\",children:\"Encrypt PDF Files\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-4\",children:\"Select PDF files from your computer to encrypt with password protection\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".pdf\",multiple:true,onChange:handleFileSelection,className:\"hidden\",id:\"pdf-file-input\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pdf-file-input\",className:\"bg-green-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-green-700 inline-block\",children:\"\\uD83D\\uDCC1 Choose PDF Files to Encrypt\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-4xl mb-4 block\",children:\"\\uD83D\\uDC41\\uFE0F\"}),/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-900 mb-2\",children:\"Clipboard Monitoring\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-4\",children:\"Monitor clipboard for suspicious wallet addresses\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleClipboardMonitoring,className:\"px-4 py-2 rounded font-medium \".concat(clipboardMonitoring?'bg-red-600 text-white hover:bg-red-700':'bg-blue-600 text-white hover:bg-blue-700'),children:clipboardMonitoring?'⏹️ Stop Monitoring':'▶️ Start Monitoring'}),suspiciousAddressAlert&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\",children:[\"\\uD83D\\uDEA8 Suspicious address detected: \",suspiciousAddressAlert]})]})})]}),selectedFiles.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 border rounded-lg bg-blue-50\",children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"font-medium text-blue-900 mb-2\",children:[\"Selected Files (\",selectedFiles.length,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:selectedFiles.map((file,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-2 bg-white rounded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-600\",children:\"\\uD83D\\uDCC4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:file.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[\"(\",Math.round(file.size/1024),\" KB)\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeSelectedFile(index),className:\"text-red-600 hover:text-red-800 text-xs\",children:\"\\u274C Remove\"})]},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleEncryptSelectedFiles,className:\"w-full mt-3 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\",children:\"\\uD83D\\uDD12 Encrypt Selected Files\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 border rounded-lg p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-4xl mb-4 block\",children:\"\\uD83D\\uDD13\"}),/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-gray-900 mb-2\",children:\"Decrypt Encrypted Files\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-4\",children:\"Select .enc files to decrypt with password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".enc\",multiple:true,onChange:handleEncryptedFileSelection,className:\"hidden\",id:\"enc-file-input\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"enc-file-input\",className:\"bg-orange-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-orange-700 inline-block\",children:\"\\uD83D\\uDCC1 Choose .enc Files to Decrypt\"})]}),selectedEncryptedFiles.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border rounded-lg bg-orange-50\",children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"font-medium text-orange-900 mb-2\",children:[\"Selected Encrypted Files (\",selectedEncryptedFiles.length,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:selectedEncryptedFiles.map((file,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-2 bg-white rounded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-orange-600\",children:\"\\uD83D\\uDD12\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:file.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[\"(\",Math.round(file.size/1024),\" KB)\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeSelectedEncryptedFile(index),className:\"text-red-600 hover:text-red-800 text-xs\",children:\"\\u274C Remove\"})]},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDecryptSelectedFiles,className:\"w-full mt-3 bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700\",children:\"\\uD83D\\uDD13 Decrypt Selected Files\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 border rounded-lg p-6 bg-yellow-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl\",children:\"\\uD83D\\uDEE1\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{className:\"font-medium text-yellow-900 mb-2\",children:\"\\uD83D\\uDD12 Security Best Practices\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-yellow-800 leading-relaxed\",children:\"Always ensure patient records are encrypted before transmission. Use blockchain verification for data integrity and monitor for suspicious activities.\"})]})]})})]})]})})]})]});};export default DoctorDashboard;","map":{"version":3,"names":["React","useState","useEffect","Badge","Timer","RoleBasedAccessService","EncryptionService","sharedStateService","pdfService","FirebaseService","clipboardMonitoringService","jsx","_jsx","jsxs","_jsxs","DoctorDashboard","_ref","user","onLogout","sessionTimeLeft","rbacService","activeTab","setActiveTab","showCreateRecordModal","setShowCreateRecordModal","showClaimModal","setShowClaimModal","clipboardMonitoring","setClipboardMonitoring","suspiciousAddressAlert","setSuspiciousAddressAlert","encryptedRecords","setEncryptedRecords","recordEncryptionStatus","setRecordEncryptionStatus","selectedFiles","setSelectedFiles","selectedEncryptedFiles","setSelectedEncryptedFiles","newRecordForm","setNewRecordForm","patientId","title","description","diagnosis","prescription","notes","newClaimForm","setNewClaimForm","amount","insuranceProvider","myPatients","setMyPatients","recentRecords","setRecentRecords","insuranceClaims","setInsuranceClaims","id","claimNumber","providerId","doctorId","insuranceCompany","status","submittedAt","submissionDate","approvalDate","relatedRecords","smartContractAddress","blockchainTxId","isProcessedOnChain","approvalSignatures","ipfsDocuments","nftRecords","setNftRecords","tokenId","recordId","name","imageUrl","metadataUri","contractAddress","blockchainNetwork","mintDate","currentOwner","isTransferable","accessLevel","setCurrentUser","patients","getPatients","allRecords","getMedicalRecords","unsubscribeFirebase","subscribeMedicalRecords","firebaseRecords","forEach","record","find","r","addMedicalRecord","unsubscribePatients","onPatientsChange","unsubscribeRecords","onMedicalRecordsChange","handleSessionExpire","window","confirm","handleCreateRecord","handleSubmitInsuranceClaim","prev","_objectSpread","handleMintNFT","console","log","concat","medicalRecord","alert","patient","p","String","length","padStart","newNFT","Date","now","toISOString","map","nftTokenId","toLocaleString","handleViewHistory","patientRecords","filter","historyDetails","date","join","email","dateOfBirth","phoneNumber","address","emergencyContact","lastVisit","upcomingAppointment","handleEncryptRecord","_myPatients$find","password","prompt","trim","_myPatients$find2","customEncryption","recordData","encryptedBy","encryptedAt","salt","generateSalt","deriveKey","encryptedData","encryptData","JSON","stringify","error","handleDecryptRecord","_myPatients$find3","decryptedData","decryptData","parse","permanentDecrypt","updated","handleViewRecord","isEncrypted","viewEncrypted","blockchainHash","ipfsHash","isVerified","toggleClipboardMonitoring","newState","started","startMonitoring","suspiciousAddress","stopMonitoring","handleViewInsuranceClaim","claimId","claim","c","toFixed","toUpperCase","handleSaveRecord","newRecord","generateId","split","accessPermissions","toString","Math","random","slice","undefined","warn","handleSaveClaim","newClaim","parseFloat","toLocaleDateString","getStatusColor","handleDownloadPDF","downloadMedicalRecordPDF","includeWatermark","replace","Error","message","handleDownloadPatientPDF","batchPDF","generateBatchPDF","url","URL","createObjectURL","link","document","createElement","href","filename","download","body","appendChild","click","removeChild","revokeObjectURL","handleAddNewPatient","patientName","patientEmail","includes","patientDOB","match","insurancePolicyNumber","newPatient","isActive","addPatient","handleViewNFT","nftId","nft","n","relatedRecord","handleFileSelection","event","files","target","pdfFiles","Array","from","file","type","removeSelectedFile","index","_","i","handleEncryptSelectedFiles","encryptedFiles","reader","FileReader","fileData","Promise","resolve","onload","result","readAsDataURL","push","_ref2","blob","Blob","f","fileInput","getElementById","value","handleEncryptedFileSelection","encFiles","endsWith","removeSelectedEncryptedFile","handleDecryptSelectedFiles","decryptedFiles","encryptedContent","readAsText","decryptError","_ref3","byteCharacters","atob","byteNumbers","charCodeAt","byteArray","Uint8Array","encFileInput","handleEditRecord","CreateRecordModal","className","children","onChange","e","onClick","CreateClaimModal","variant","size","duration","onExpire","src","alt","role","label","icon","tab","_record$blockchainHas","_myPatients$find4","_myPatients$find5","_claim$blockchainTxId","substring","_myPatients$find6","accept","multiple","htmlFor","round"],"sources":["D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/src/components/Dashboard/DoctorDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Badge from '../UI/Badge';\r\nimport Timer from '../UI/Timer';\r\nimport { User, MedicalRecord, Patient, InsuranceClaim, NFTHealthRecord } from '../../types';\r\nimport { RoleBasedAccessService } from '../../services/rbacService';\r\nimport { EncryptionService } from '../../services/encryption';\r\nimport { sharedStateService } from '../../services/sharedState';\r\nimport { pdfService } from '../../services/pdfService';\r\nimport { FirebaseService } from '../../services/firebaseService';\r\nimport { clipboardMonitoringService } from '../../services/clipboardMonitoring';\r\n\r\ninterface DoctorDashboardProps {\r\n    user: User;\r\n    onLogout: () => void;\r\n}\r\n\r\nconst DoctorDashboard: React.FC<DoctorDashboardProps> = ({ user, onLogout }) => {\r\n    const [sessionTimeLeft] = useState(1800);\r\n    const [rbacService] = useState(new RoleBasedAccessService());\r\n    const [activeTab, setActiveTab] = useState<'patients' | 'records' | 'insurance' | 'nfts' | 'security'>('patients');\r\n\r\n    // Modal states\r\n    const [showCreateRecordModal, setShowCreateRecordModal] = useState(false);\r\n    const [showClaimModal, setShowClaimModal] = useState(false);\r\n\r\n    // Security states\r\n    const [clipboardMonitoring, setClipboardMonitoring] = useState(false);\r\n    const [suspiciousAddressAlert, setSuspiciousAddressAlert] = useState<string | null>(null);\r\n    const [encryptedRecords, setEncryptedRecords] = useState<{ [key: string]: string }>({});\r\n    const [recordEncryptionStatus, setRecordEncryptionStatus] = useState<{ [key: string]: boolean }>({});\r\n    const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\r\n    const [selectedEncryptedFiles, setSelectedEncryptedFiles] = useState<File[]>([]);\r\n\r\n    // Form states\r\n    const [newRecordForm, setNewRecordForm] = useState({\r\n        patientId: '',\r\n        title: '',\r\n        description: '',\r\n        diagnosis: '',\r\n        prescription: '',\r\n        notes: '',\r\n    });\r\n\r\n    const [newClaimForm, setNewClaimForm] = useState({\r\n        patientId: '',\r\n        amount: '',\r\n        description: '',\r\n        insuranceProvider: '',\r\n    });\r\n\r\n    const [myPatients, setMyPatients] = useState<Patient[]>([]);\r\n    const [recentRecords, setRecentRecords] = useState<MedicalRecord[]>([]);\r\n    const [insuranceClaims, setInsuranceClaims] = useState<InsuranceClaim[]>([\r\n        {\r\n            id: 'claim-1',\r\n            claimNumber: 'CLM-2025-001',\r\n            patientId: 'patient-1',\r\n            providerId: user.id,\r\n            doctorId: user.id,\r\n            insuranceCompany: 'HealthFirst Insurance',\r\n            insuranceProvider: 'HealthFirst Insurance',\r\n            amount: 450.0,\r\n            status: 'approved',\r\n            submittedAt: '2025-07-01T10:00:00Z',\r\n            submissionDate: '2025-07-01',\r\n            approvalDate: '2025-07-03',\r\n            description: 'Annual physical examination and blood work',\r\n            relatedRecords: ['record-1'],\r\n            smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n            blockchainTxId: '0xabc123def456789abcdef123456789abc123def456789abcdef',\r\n            isProcessedOnChain: true,\r\n            approvalSignatures: [],\r\n            ipfsDocuments: [],\r\n        },\r\n        {\r\n            id: 'claim-2',\r\n            claimNumber: 'CLM-2025-002',\r\n            patientId: 'patient-2',\r\n            providerId: user.id,\r\n            doctorId: user.id,\r\n            insuranceCompany: 'MediCare Plus',\r\n            insuranceProvider: 'MediCare Plus',\r\n            amount: 275.5,\r\n            status: 'pending',\r\n            submittedAt: '2025-07-04T14:30:00Z',\r\n            submissionDate: '2025-07-04',\r\n            description: 'Follow-up consultation and medication review',\r\n            relatedRecords: ['record-2'],\r\n            smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n            blockchainTxId: '0xdef456abc789123def456abc789123def456abc789123def',\r\n            isProcessedOnChain: false,\r\n            approvalSignatures: [],\r\n            ipfsDocuments: [],\r\n        },\r\n    ]);\r\n\r\n    const [nftRecords, setNftRecords] = useState<NFTHealthRecord[]>([\r\n        {\r\n            id: 'nft-1',\r\n            tokenId: 'HEALTH-NFT-001',\r\n            patientId: 'patient-1',\r\n            recordId: 'record-1',\r\n            name: 'Annual Physical 2025',\r\n            description: 'Comprehensive health examination record',\r\n            imageUrl: 'https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=NFT-001',\r\n            metadataUri: 'ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP',\r\n            contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\r\n            blockchainNetwork: 'Ethereum',\r\n            mintDate: '2025-07-04T10:30:00Z',\r\n            currentOwner: 'patient-1',\r\n            isTransferable: false,\r\n            accessLevel: 'doctor_patient',\r\n        },\r\n        {\r\n            id: 'nft-2',\r\n            tokenId: 'HEALTH-NFT-002',\r\n            patientId: 'patient-2',\r\n            recordId: 'record-2',\r\n            name: 'Follow-up Consultation',\r\n            description: 'Treatment follow-up and medication adjustment',\r\n            imageUrl: 'https://via.placeholder.com/200x200/059669/FFFFFF?text=NFT-002',\r\n            metadataUri: 'ipfs://QmY8AX6sRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0nQ',\r\n            contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\r\n            blockchainNetwork: 'Ethereum',\r\n            mintDate: '2025-07-03T14:45:00Z',\r\n            currentOwner: 'patient-2',\r\n            isTransferable: false,\r\n            accessLevel: 'doctor_patient',\r\n        },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        rbacService.setCurrentUser(user);\r\n    }, [user, rbacService]);\r\n\r\n    useEffect(() => {\r\n        const patients = sharedStateService.getPatients();\r\n        const allRecords = sharedStateService.getMedicalRecords();\r\n\r\n        setMyPatients(patients);\r\n        setRecentRecords(allRecords);\r\n\r\n        const unsubscribeFirebase = FirebaseService.subscribeMedicalRecords((firebaseRecords) => {\r\n            firebaseRecords.forEach((record) => {\r\n                if (!sharedStateService.getMedicalRecords().find((r) => r.id === record.id)) {\r\n                    sharedStateService.addMedicalRecord(record);\r\n                }\r\n            });\r\n        });\r\n\r\n        const unsubscribePatients = sharedStateService.onPatientsChange(setMyPatients);\r\n        const unsubscribeRecords = sharedStateService.onMedicalRecordsChange(setRecentRecords);\r\n\r\n        return () => {\r\n            unsubscribeFirebase();\r\n            unsubscribePatients();\r\n            unsubscribeRecords();\r\n        };\r\n    }, [user.id]);\r\n\r\n    const handleSessionExpire = () => {\r\n        window.confirm('Session expired for security. Please login again.') && onLogout();\r\n    };\r\n\r\n    const handleCreateRecord = () => {\r\n        setShowCreateRecordModal(true);\r\n    };\r\n\r\n    const handleSubmitInsuranceClaim = (patientId: string) => {\r\n        setNewClaimForm((prev) => ({ ...prev, patientId }));\r\n        setShowClaimModal(true);\r\n    };\r\n\r\n    const handleMintNFT = (recordId: string) => {\r\n        console.log(`Minting NFT for record: ${recordId}`);\r\n\r\n        // Find the medical record\r\n        const medicalRecord = recentRecords.find(record => record.id === recordId);\r\n        if (!medicalRecord) {\r\n            alert('❌ Medical record not found');\r\n            return;\r\n        }\r\n\r\n        // Find the patient\r\n        const patient = myPatients.find(p => p.id === medicalRecord.patientId);\r\n        if (!patient) {\r\n            alert('❌ Patient not found');\r\n            return;\r\n        }\r\n\r\n        // Generate new NFT token ID\r\n        const tokenId = `HEALTH-NFT-${String(nftRecords.length + 1).padStart(3, '0')}`;\r\n\r\n        // Create new NFT record\r\n        const newNFT: NFTHealthRecord = {\r\n            id: `nft-${Date.now()}`,\r\n            tokenId: tokenId,\r\n            patientId: medicalRecord.patientId,\r\n            recordId: recordId,\r\n            name: medicalRecord.title || `Medical Record ${recordId}`,\r\n            description: medicalRecord.description || `${medicalRecord.diagnosis} - ${medicalRecord.prescription}`,\r\n            imageUrl: `https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=${tokenId}`,\r\n            metadataUri: `ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP${Date.now()}`,\r\n            contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\r\n            blockchainNetwork: 'Ethereum',\r\n            mintDate: new Date().toISOString(),\r\n            currentOwner: medicalRecord.patientId,\r\n            isTransferable: false,\r\n            accessLevel: 'doctor_patient',\r\n        };\r\n\r\n        // Add NFT to the list\r\n        setNftRecords(prev => [...prev, newNFT]);\r\n\r\n        // Update the medical record to include the NFT token ID\r\n        setRecentRecords(prev =>\r\n            prev.map(record =>\r\n                record.id === recordId\r\n                    ? { ...record, nftTokenId: tokenId }\r\n                    : record\r\n            )\r\n        );\r\n\r\n        // Show success message\r\n        alert(`✅ NFT Successfully Minted!\r\n\r\n🎨 Token ID: ${tokenId}\r\n👤 Patient: ${patient.name}\r\n📋 Record: ${medicalRecord.title}\r\n⛓️ Network: Ethereum\r\n📅 Minted: ${new Date().toLocaleString()}\r\n\r\nThe NFT has been created and is now visible in the \"NFT Health Records\" tab.`);\r\n    };\r\n\r\n    const handleViewHistory = (patientId: string) => {\r\n        const patient = myPatients.find((p) => p.id === patientId);\r\n        const patientRecords = recentRecords.filter((record) => record.patientId === patientId);\r\n\r\n        if (patient && patientRecords.length > 0) {\r\n            const historyDetails = patientRecords\r\n                .map(\r\n                    (record) =>\r\n                        `📋 ${record.title} (${record.date})\\n   Diagnosis: ${record.diagnosis}\\n   Prescription: ${record.prescription}`\r\n                )\r\n                .join('\\n\\n');\r\n\r\n            alert(`👥 Medical History for ${patient.name}\r\n📧 Email: ${patient.email}\r\n🎂 DOB: ${patient.dateOfBirth}\r\n🏥 Insurance: ${patient.insuranceProvider}\r\n📞 Phone: ${patient.phoneNumber}\r\n🏠 Address: ${patient.address}\r\n🚨 Emergency Contact: ${patient.emergencyContact}\r\n📅 Last Visit: ${patient.lastVisit}\r\n⏭️ Next Appointment: ${patient.upcomingAppointment}\r\n\r\n📋 MEDICAL RECORDS:\r\n${historyDetails}\r\n\r\nTotal Records: ${patientRecords.length}`);\r\n        } else {\r\n            alert(`No medical history found for this patient.`);\r\n        }\r\n    };\r\n\r\n    const handleEncryptRecord = (recordId: string) => {\r\n        const record = recentRecords.find((r) => r.id === recordId);\r\n        if (record) {\r\n            if (recordEncryptionStatus[recordId]) {\r\n                alert('⚠️ This record is already encrypted. Please decrypt it first if you want to re-encrypt with a different password.');\r\n                return;\r\n            }\r\n\r\n            const password = prompt(\r\n                `🔒 Enter a password to encrypt \"${record.title}\" for patient: ${myPatients.find((p) => p.id === record.patientId)?.name || record.patientId\r\n                }`\r\n            );\r\n            if (password && password.trim()) {\r\n                try {\r\n                    const customEncryption = new EncryptionService();\r\n                    const recordData = {\r\n                        ...record,\r\n                        encryptedBy: user.name,\r\n                        encryptedAt: new Date().toISOString(),\r\n                    };\r\n\r\n                    const salt = customEncryption.generateSalt();\r\n                    customEncryption.deriveKey(password, salt);\r\n                    const encryptedData = customEncryption.encryptData(JSON.stringify(recordData));\r\n\r\n                    setEncryptedRecords((prev) => ({ ...prev, [recordId]: encryptedData }));\r\n                    setRecordEncryptionStatus((prev) => ({ ...prev, [recordId]: true }));\r\n\r\n                    alert(`🔒 SUCCESS! Record \"${record.title}\" has been encrypted with your custom password.\r\n          \r\n📋 Record: ${record.title}\r\n👤 Patient: ${myPatients.find((p) => p.id === record.patientId)?.name}\r\n🔐 Status: ENCRYPTED\r\n🛡️ Security Level: AES-256 + Password Protection\r\n📅 Encrypted At: ${new Date().toLocaleString()}\r\n👨‍⚕️ Encrypted By: ${user.name}\r\n\r\n⚠️ Remember your password - it will be required for decryption!`);\r\n                } catch (error) {\r\n                    alert('❌ Encryption failed. Please try again.');\r\n                }\r\n            } else {\r\n                alert('❌ Password is required for encryption.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDecryptRecord = (recordId: string) => {\r\n        if (!recordEncryptionStatus[recordId]) {\r\n            alert('ℹ️ This record is not encrypted. No decryption needed.');\r\n            return;\r\n        }\r\n\r\n        const encryptedData = encryptedRecords[recordId];\r\n        if (encryptedData) {\r\n            const password = prompt(`🔓 Enter the password to decrypt this record:`);\r\n            if (password && password.trim()) {\r\n                try {\r\n                    const customEncryption = new EncryptionService();\r\n                    const decryptedData = customEncryption.decryptData(encryptedData);\r\n                    const record = JSON.parse(decryptedData);\r\n\r\n                    alert(`🔓 DECRYPTION SUCCESSFUL!\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${myPatients.find((p) => p.id === record.patientId)?.name || record.patientId}\r\n📅 Date: ${record.date}\r\n🩺 Diagnosis: ${record.diagnosis}\r\n💊 Prescription: ${record.prescription}\r\n📝 Description: ${record.description}\r\n\r\n🔒 Encryption Details:\r\n👨‍⚕️ Encrypted By: ${record.encryptedBy || 'Unknown'}\r\n📅 Encrypted At: ${record.encryptedAt ? new Date(record.encryptedAt).toLocaleString() : 'Unknown'}\r\n🛡️ Security: Password-protected AES-256`);\r\n\r\n                    const permanentDecrypt = window.confirm('🔓 Do you want to permanently decrypt this record? (This will remove encryption)');\r\n                    if (permanentDecrypt) {\r\n                        setEncryptedRecords((prev) => {\r\n                            const updated = { ...prev };\r\n                            delete updated[recordId];\r\n                            return updated;\r\n                        });\r\n                        setRecordEncryptionStatus((prev) => ({ ...prev, [recordId]: false }));\r\n                        alert('✅ Record has been permanently decrypted and is now in plain text.');\r\n                    }\r\n                } catch (error) {\r\n                    alert('❌ Decryption failed. Incorrect password or corrupted data.');\r\n                }\r\n            } else {\r\n                alert('❌ Password is required for decryption.');\r\n            }\r\n        } else {\r\n            alert('❌ No encrypted data found for this record.');\r\n        }\r\n    };\r\n\r\n    const handleViewRecord = (recordId: string) => {\r\n        const record = recentRecords.find((r) => r.id === recordId);\r\n        if (record) {\r\n            const isEncrypted = recordEncryptionStatus[recordId];\r\n            const patient = myPatients.find((p) => p.id === record.patientId);\r\n\r\n            if (isEncrypted) {\r\n                const viewEncrypted = window.confirm(`🔒 This record is encrypted. \r\n\r\nDo you want to:\r\n- Click \"OK\" to view encrypted version\r\n- Click \"Cancel\" to decrypt and view`);\r\n\r\n                if (viewEncrypted) {\r\n                    alert(`🔒 ENCRYPTED RECORD VIEW\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${patient?.name || record.patientId}\r\n📅 Date: ${record.date}\r\n🔐 Status: ENCRYPTED\r\n🛡️ Security: Password Protected\r\n\r\n⚠️ Content is encrypted and cannot be displayed in plain text.\r\nUse the decrypt button to view the full content.`);\r\n                } else {\r\n                    handleDecryptRecord(recordId);\r\n                }\r\n            } else {\r\n                alert(`👁️ MEDICAL RECORD DETAILS\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${patient?.name || record.patientId}\r\n📧 Email: ${patient?.email || 'N/A'}\r\n📅 Date: ${record.date}\r\n🩺 Diagnosis: ${record.diagnosis}\r\n💊 Prescription: ${record.prescription}\r\n📝 Description: ${record.description}\r\n\r\n🔗 Blockchain Details:\r\n🧱 Hash: ${record.blockchainHash || 'N/A'}\r\n📎 IPFS: ${record.ipfsHash || 'N/A'}\r\n🎨 NFT Token: ${record.nftTokenId || 'Not minted'}\r\n✅ Verified: ${record.isVerified ? 'Yes' : 'No'}\r\n🔐 Encryption: Not encrypted`);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleClipboardMonitoring = () => {\r\n        const newState = !clipboardMonitoring;\r\n        setClipboardMonitoring(newState);\r\n\r\n        if (newState) {\r\n            const started = clipboardMonitoringService.startMonitoring((suspiciousAddress) => {\r\n                setSuspiciousAddressAlert(suspiciousAddress);\r\n                alert(`🚨 SECURITY ALERT: Suspicious Wallet Address Detected!\r\n\r\n⚠️ Address: ${suspiciousAddress}\r\n🔍 Reason: This address matches known suspicious patterns or is on the blacklist\r\n🛡️ Action: Please verify this address before proceeding with any transactions\r\n\r\nThis could be:\r\n• A fake/test address\r\n• A known hacked wallet\r\n• A phishing attempt\r\n• An address with suspicious patterns\r\n\r\n🚨 Do NOT send any funds to this address unless you're absolutely certain it's legitimate!`);\r\n            });\r\n\r\n            if (started) {\r\n                alert('🔍 Clipboard monitoring enabled! The system is now actively monitoring for suspicious wallet addresses and will alert you with sound if any are detected.');\r\n            } else {\r\n                alert('❌ Failed to start clipboard monitoring. Your browser may not support this feature.');\r\n                setClipboardMonitoring(false);\r\n            }\r\n        } else {\r\n            clipboardMonitoringService.stopMonitoring();\r\n            setSuspiciousAddressAlert(null);\r\n            alert('⏹️ Clipboard monitoring disabled.');\r\n        }\r\n    };\r\n\r\n    const handleViewInsuranceClaim = (claimId: string) => {\r\n        const claim = insuranceClaims.find((c) => c.id === claimId);\r\n        if (claim) {\r\n            const patient = myPatients.find((p) => p.id === claim.patientId);\r\n            alert(`💰 Insurance Claim Details\r\n\r\n📋 Claim Number: ${claim.claimNumber}\r\n👤 Patient: ${patient?.name || claim.patientId}\r\n💵 Amount: $${claim.amount.toFixed(2)}\r\n📊 Status: ${claim.status.toUpperCase()}\r\n🏥 Insurance Provider: ${claim.insuranceProvider}\r\n📅 Submitted: ${claim.submissionDate}\r\n${claim.approvalDate ? `✅ Approved: ${claim.approvalDate}` : '⏳ Pending approval'}\r\n📝 Description: ${claim.description || 'No description provided'}\r\n\r\n🔗 Blockchain Details:\r\n📋 Contract Address: ${claim.smartContractAddress}\r\n🆔 Transaction ID: ${claim.blockchainTxId}\r\n⛓️ On-Chain Status: ${claim.isProcessedOnChain ? 'Processed' : 'Pending'}\r\n\r\n📄 Related Records: ${claim.relatedRecords.length} record(s)\r\n📎 Documents: ${claim.ipfsDocuments.length} file(s) on IPFS`);\r\n        }\r\n    };\r\n\r\n    const handleSaveRecord = async () => {\r\n        if (!newRecordForm.title || !newRecordForm.patientId) {\r\n            alert('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        const patient = myPatients.find((p) => p.id === newRecordForm.patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const newRecord: MedicalRecord = {\r\n                id: sharedStateService.generateId('record'),\r\n                patientId: newRecordForm.patientId,\r\n                doctorId: user.id,\r\n                title: newRecordForm.title,\r\n                description: newRecordForm.description,\r\n                date: new Date().toISOString().split('T')[0],\r\n                diagnosis: newRecordForm.diagnosis,\r\n                prescription: newRecordForm.prescription,\r\n                isEncrypted: false,\r\n                isVerified: true,\r\n                accessPermissions: [user.id, newRecordForm.patientId],\r\n                blockchainHash: `0x${Date.now().toString(16)}abc${Math.random().toString(16).slice(2, 8)}`,\r\n                ipfsHash: `Qm${Math.random().toString(36).slice(2, 15)}${Date.now().toString(36)}`,\r\n                nftTokenId: undefined,\r\n            };\r\n\r\n            sharedStateService.addMedicalRecord(newRecord);\r\n\r\n            // Update local state immediately for UI responsiveness\r\n            setRecentRecords(prev => [...prev, newRecord]);\r\n\r\n            try {\r\n                await FirebaseService.addMedicalRecord(newRecord);\r\n            } catch (error) {\r\n                console.warn('Failed to sync with Firebase:', error);\r\n            }\r\n\r\n            alert(`✅ Medical record created successfully!\r\n\r\n📋 Record: ${newRecord.title}\r\n👤 Patient: ${patient.name}\r\n📅 Date: ${newRecord.date}\r\n🩺 Diagnosis: ${newRecord.diagnosis}\r\n💊 Prescription: ${newRecord.prescription}\r\n🔗 Real-time sync: Enabled\r\n\r\nThe record has been added to your medical records list and synced with the database for real-time access.`);\r\n\r\n            setShowCreateRecordModal(false);\r\n            setNewRecordForm({\r\n                patientId: '',\r\n                title: '',\r\n                description: '',\r\n                diagnosis: '',\r\n                prescription: '',\r\n                notes: '',\r\n            });\r\n        } catch (error) {\r\n            console.error('Error saving record:', error);\r\n            alert('❌ Failed to save record. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleSaveClaim = async () => {\r\n        if (!newClaimForm.amount || !newClaimForm.description || !newClaimForm.patientId) {\r\n            alert('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        const patient = myPatients.find((p) => p.id === newClaimForm.patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const newClaim: InsuranceClaim = {\r\n                id: `claim-${Date.now()}`,\r\n                claimNumber: `CLM-${Date.now()}`,\r\n                patientId: newClaimForm.patientId,\r\n                providerId: user.id,\r\n                doctorId: user.id,\r\n                insuranceCompany: newClaimForm.insuranceProvider || patient.insuranceProvider,\r\n                insuranceProvider: newClaimForm.insuranceProvider || patient.insuranceProvider,\r\n                amount: parseFloat(newClaimForm.amount),\r\n                status: 'pending',\r\n                submittedAt: new Date().toISOString(),\r\n                submissionDate: new Date().toLocaleDateString(),\r\n                description: newClaimForm.description,\r\n                relatedRecords: [],\r\n                smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n                blockchainTxId: `0x${Date.now().toString(16)}`,\r\n                isProcessedOnChain: false,\r\n                approvalSignatures: [],\r\n                ipfsDocuments: [],\r\n            };\r\n\r\n            setInsuranceClaims((prev) => [...prev, newClaim]);\r\n\r\n            alert(`✅ Insurance claim submitted successfully!\r\n\r\n📋 Claim Number: ${newClaim.claimNumber}\r\n👤 Patient: ${patient.name}\r\n💵 Amount: $${newClaim.amount.toFixed(2)}\r\n📊 Status: ${newClaim.status.toUpperCase()}\r\n📝 Description: ${newClaim.description}`);\r\n\r\n            setShowClaimModal(false);\r\n            setNewClaimForm({\r\n                patientId: '',\r\n                amount: '',\r\n                description: '',\r\n                insuranceProvider: '',\r\n            });\r\n        } catch (error) {\r\n            console.error('Error saving claim:', error);\r\n            alert('❌ Failed to save claim. Please try again.');\r\n        }\r\n    };\r\n\r\n    const getStatusColor = (status: string) => {\r\n        switch (status) {\r\n            case 'approved':\r\n                return 'success';\r\n            case 'pending':\r\n                return 'warning';\r\n            case 'rejected':\r\n                return 'error';\r\n            case 'paid':\r\n                return 'success';\r\n            case 'under_review':\r\n                return 'info';\r\n            case 'submitted':\r\n                return 'primary';\r\n            default:\r\n                return 'secondary';\r\n        }\r\n    };\r\n\r\n    const handleDownloadPDF = async (recordId: string) => {\r\n        const record = recentRecords.find((r) => r.id === recordId);\r\n        if (!record) {\r\n            alert('Record not found');\r\n            return;\r\n        }\r\n\r\n        const patient = myPatients.find((p) => p.id === record.patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await pdfService.downloadMedicalRecordPDF(record, patient, {\r\n                includeWatermark: true,\r\n                isEncrypted: false,\r\n                password: '',\r\n            });\r\n\r\n            alert(`✅ PDF Downloaded Successfully!\r\n\r\n📄 File: medical_record_${record.id}_${patient.name.replace(/\\s+/g, '_')}.pdf\r\n🔐 Status: UNENCRYPTED (ready for encryption in Security Tools)\r\n🚨 Watermark: CONFIDENTIAL (at top of document)\r\n👤 Patient: ${patient.name}\r\n📋 Record: ${record.title}\r\n\r\n💡 Next Steps:\r\n1. Go to Security Tools tab\r\n2. Select this PDF file to encrypt\r\n3. Choose a strong password for encryption\r\n\r\nThe PDF has been saved to your downloads folder.`);\r\n        } catch (error) {\r\n            console.error('PDF download error:', error);\r\n            alert(`❌ Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        }\r\n    };\r\n\r\n    const handleDownloadPatientPDF = async (patientId: string) => {\r\n        const patient = myPatients.find((p) => p.id === patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        const patientRecords = recentRecords.filter((record) => record.patientId === patientId);\r\n\r\n        if (patientRecords.length === 0) {\r\n            alert(`No medical records found for ${patient.name}. Create some records first.`);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (patientRecords.length === 1) {\r\n                await pdfService.downloadMedicalRecordPDF(patientRecords[0], patient, {\r\n                    includeWatermark: true,\r\n                    isEncrypted: false,\r\n                    password: '',\r\n                });\r\n            } else {\r\n                const batchPDF = await pdfService.generateBatchPDF(patientRecords, [patient], {\r\n                    includeWatermark: true,\r\n                    isEncrypted: false,\r\n                    password: '',\r\n                });\r\n\r\n                const url = URL.createObjectURL(batchPDF);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                const filename = `medical_records_${patient.name.replace(/\\s+/g, '_')}_batch.pdf`;\r\n                link.download = filename;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            }\r\n\r\n            alert(`✅ PDF Downloaded Successfully!\r\n\r\n👤 Patient: ${patient.name}\r\n📄 Records: ${patientRecords.length} medical record(s)\r\n🔐 Status: UNENCRYPTED (ready for encryption in Security Tools)\r\n🚨 Watermark: CONFIDENTIAL (at top of document)\r\n\r\n💡 Next Steps:\r\n1. Go to Security Tools tab\r\n2. Select this PDF file to encrypt\r\n3. Choose a strong password for encryption\r\n\r\nThe PDF has been saved to your downloads folder.`);\r\n        } catch (error) {\r\n            console.error('PDF download error:', error);\r\n            alert(`❌ Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        }\r\n    };\r\n\r\n    const handleAddNewPatient = () => {\r\n        const patientName = prompt('👤 Enter new patient name:');\r\n        if (!patientName || !patientName.trim()) {\r\n            alert('❌ Patient name is required');\r\n            return;\r\n        }\r\n\r\n        const patientEmail = prompt('📧 Enter patient email:');\r\n        if (!patientEmail || !patientEmail.trim() || !patientEmail.includes('@')) {\r\n            alert('❌ Valid email is required');\r\n            return;\r\n        }\r\n\r\n        const patientDOB = prompt('🎂 Enter patient date of birth (YYYY-MM-DD):');\r\n        if (!patientDOB || !patientDOB.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\r\n            alert('❌ Date of birth is required in YYYY-MM-DD format');\r\n            return;\r\n        }\r\n\r\n        const phoneNumber = prompt('📞 Enter patient phone number:') || '';\r\n        const address = prompt('🏠 Enter patient address:') || '';\r\n        const emergencyContact = prompt('🚨 Enter emergency contact (Name - Phone):') || '';\r\n        const insuranceProvider = prompt('🏥 Enter insurance provider:') || 'None';\r\n        const insurancePolicyNumber = prompt('📄 Enter insurance policy number:') || '';\r\n\r\n        const newPatient: Patient = {\r\n            id: sharedStateService.generateId('patient'),\r\n            name: patientName.trim(),\r\n            email: patientEmail.trim(),\r\n            dateOfBirth: patientDOB,\r\n            phoneNumber,\r\n            address,\r\n            emergencyContact,\r\n            insuranceProvider,\r\n            insurancePolicyNumber,\r\n            lastVisit: new Date().toISOString().split('T')[0],\r\n            upcomingAppointment: 'To be scheduled',\r\n            isActive: true,\r\n        };\r\n\r\n        sharedStateService.addPatient(newPatient);\r\n\r\n        alert(`✅ New patient added successfully!\r\n\r\n👤 Name: ${newPatient.name}\r\n📧 Email: ${newPatient.email}\r\n🎂 DOB: ${newPatient.dateOfBirth}\r\n📞 Phone: ${newPatient.phoneNumber}\r\n🏥 Insurance: ${newPatient.insuranceProvider}\r\n\r\nThe patient is now available for creating medical records.`);\r\n    };\r\n\r\n    const handleViewNFT = (nftId: string) => {\r\n        const nft = nftRecords.find((n) => n.id === nftId);\r\n        if (!nft) {\r\n            alert('❌ NFT not found. Please try again.');\r\n            return;\r\n        }\r\n\r\n        const patient = myPatients.find((p) => p.id === nft.patientId);\r\n        const relatedRecord = recentRecords.find((r) => r.id === nft.recordId);\r\n\r\n        alert(`🎨 NFT Health Record Details\r\n\r\n🏷️ Name: ${nft.name}\r\n📝 Description: ${nft.description}\r\n🆔 Token ID: ${nft.tokenId}\r\n👤 Patient: ${patient?.name || nft.patientId}\r\n📋 Related Record: ${relatedRecord?.title || nft.recordId}\r\n\r\n🔗 Blockchain Details:\r\n🌐 Network: ${nft.blockchainNetwork}\r\n📍 Contract Address: ${nft.contractAddress}\r\n👤 Current Owner: ${nft.currentOwner}\r\n📅 Mint Date: ${new Date(nft.mintDate).toLocaleString()}\r\n🔄 Transferable: ${nft.isTransferable ? 'Yes' : 'No'}\r\n🔐 Access Level: ${nft.accessLevel}\r\n\r\n📎 Metadata URI: ${nft.metadataUri}\r\n🖼️ Image URL: ${nft.imageUrl}\r\n\r\n✅ This NFT represents a verified medical record stored securely on the blockchain.\r\n🛡️ The NFT provides immutable proof of medical data authenticity.`);\r\n    };\r\n\r\n    const handleFileSelection = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = event.target.files;\r\n        if (files) {\r\n            const pdfFiles = Array.from(files).filter((file) => file.type === 'application/pdf');\r\n            if (pdfFiles.length !== files.length) {\r\n                alert('⚠️ Only PDF files are allowed. Non-PDF files have been filtered out.');\r\n            }\r\n            setSelectedFiles((prev) => [...prev, ...pdfFiles]);\r\n        }\r\n    };\r\n\r\n    const removeSelectedFile = (index: number) => {\r\n        setSelectedFiles((prev) => prev.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const handleEncryptSelectedFiles = async () => {\r\n        if (selectedFiles.length === 0) {\r\n            alert('❌ Please select PDF files to encrypt first.');\r\n            return;\r\n        }\r\n\r\n        const password = prompt('🔒 Enter password to encrypt the selected PDF files:');\r\n        if (!password || !password.trim()) {\r\n            alert('❌ Password is required for encryption.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const encryptedFiles: { name: string; encryptedData: string }[] = [];\r\n\r\n            for (const file of selectedFiles) {\r\n                const reader = new FileReader();\r\n                const fileData = await new Promise<string>((resolve) => {\r\n                    reader.onload = () => resolve(reader.result as string);\r\n                    reader.readAsDataURL(file);\r\n                });\r\n\r\n                const customEncryption = new EncryptionService();\r\n                const salt = customEncryption.generateSalt();\r\n                customEncryption.deriveKey(password, salt);\r\n                const encryptedData = customEncryption.encryptData(fileData);\r\n\r\n                encryptedFiles.push({\r\n                    name: file.name.replace('.pdf', '.enc'),\r\n                    encryptedData,\r\n                });\r\n            }\r\n\r\n            encryptedFiles.forEach(({ name, encryptedData }) => {\r\n                const blob = new Blob([encryptedData], { type: 'application/octet-stream' });\r\n                const url = URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.download = name;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            });\r\n\r\n            alert(`✅ Successfully encrypted and downloaded ${encryptedFiles.length} file(s)!\r\n\r\n🔐 Encryption Details:\r\n📄 Files: ${encryptedFiles.map((f) => f.name).join(', ')}\r\n🛡️ Security: AES-256 with password protection\r\n📅 Encrypted: ${new Date().toLocaleString()}\r\n🔒 Format: .enc (encrypted files)\r\n\r\n⚠️ Remember your password - you'll need it to decrypt these .enc files!\r\n🔄 The encrypted .enc files have been downloaded to your computer.`);\r\n\r\n            setSelectedFiles([]);\r\n            const fileInput = document.getElementById('pdf-file-input') as HTMLInputElement;\r\n            if (fileInput) {\r\n                fileInput.value = '';\r\n            }\r\n        } catch (error) {\r\n            console.error('File encryption error:', error);\r\n            alert('❌ Failed to encrypt files. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleEncryptedFileSelection = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = event.target.files;\r\n        if (files) {\r\n            const encFiles = Array.from(files).filter((file) => file.name.endsWith('.enc'));\r\n            if (encFiles.length !== files.length) {\r\n                alert('⚠️ Only .enc files are allowed. Non-.enc files have been filtered out.');\r\n            }\r\n            setSelectedEncryptedFiles((prev) => [...prev, ...encFiles]);\r\n        }\r\n    };\r\n\r\n    const removeSelectedEncryptedFile = (index: number) => {\r\n        setSelectedEncryptedFiles((prev) => prev.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const handleDecryptSelectedFiles = async () => {\r\n        if (selectedEncryptedFiles.length === 0) {\r\n            alert('❌ Please select .enc files to decrypt first.');\r\n            return;\r\n        }\r\n\r\n        const password = prompt('🔓 Enter password to decrypt the selected .enc files:');\r\n        if (!password || !password.trim()) {\r\n            alert('❌ Password is required for decryption.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const decryptedFiles: { name: string; decryptedData: string }[] = [];\r\n\r\n            for (const file of selectedEncryptedFiles) {\r\n                const reader = new FileReader();\r\n                const encryptedContent = await new Promise<string>((resolve) => {\r\n                    reader.onload = () => resolve(reader.result as string);\r\n                    reader.readAsText(file);\r\n                });\r\n\r\n                try {\r\n                    const customEncryption = new EncryptionService();\r\n                    const decryptedData = customEncryption.decryptData(encryptedContent);\r\n\r\n                    decryptedFiles.push({\r\n                        name: file.name.replace('.enc', '.pdf'),\r\n                        decryptedData,\r\n                    });\r\n                } catch (decryptError) {\r\n                    alert(`❌ Failed to decrypt ${file.name}. Incorrect password or corrupted file.`);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (decryptedFiles.length === 0) {\r\n                alert('❌ No files were successfully decrypted. Please check your password.');\r\n                return;\r\n            }\r\n\r\n            decryptedFiles.forEach(({ name, decryptedData }) => {\r\n                const byteCharacters = atob(decryptedData.split(',')[1]);\r\n                const byteNumbers = new Array(byteCharacters.length);\r\n                for (let i = 0; i < byteCharacters.length; i++) {\r\n                    byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n                }\r\n                const byteArray = new Uint8Array(byteNumbers);\r\n                const blob = new Blob([byteArray], { type: 'application/pdf' });\r\n\r\n                const url = URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.download = name;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            });\r\n\r\n            alert(`✅ Successfully decrypted and downloaded ${decryptedFiles.length} PDF file(s)!\r\n\r\n🔓 Decryption Details:\r\n📄 Files: ${decryptedFiles.map((f) => f.name).join(', ')}\r\n🛡️ Security: Successfully decrypted with correct password\r\n📅 Decrypted: ${new Date().toLocaleString()}\r\n📄 Format: .pdf (original PDF files restored)\r\n\r\n✅ Your PDF files are now available and ready to use!\r\n🔄 The decrypted PDF files have been downloaded to your computer.`);\r\n\r\n            setSelectedEncryptedFiles([]);\r\n            const encFileInput = document.getElementById('enc-file-input') as HTMLInputElement;\r\n            if (encFileInput) {\r\n                encFileInput.value = '';\r\n            }\r\n        } catch (error) {\r\n            console.error('File decryption error:', error);\r\n            alert('❌ Failed to decrypt files. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleEditRecord = (recordId: string) => {\r\n        alert('✏️ Editing records is not implemented yet.');\r\n        console.log(`Edit record: ${recordId}`);\r\n    };\r\n\r\n    // Modal Components\r\n    const CreateRecordModal = () => (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">📋 Create New Medical Record</h3>\r\n                <div className=\"space-y-4\">\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Patient</label>\r\n                        <select\r\n                            value={newRecordForm.patientId}\r\n                            onChange={(e) => setNewRecordForm({ ...newRecordForm, patientId: e.target.value })}\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        >\r\n                            <option value=\"\">Select a patient</option>\r\n                            {myPatients.map((patient) => (\r\n                                <option key={patient.id} value={patient.id}>\r\n                                    {patient.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newRecordForm.title}\r\n                            onChange={(e) => setNewRecordForm({ ...newRecordForm, title: e.target.value })}\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n                        <textarea\r\n                            value={newRecordForm.description}\r\n                            onChange={(e) => setNewRecordForm({ ...newRecordForm, description: e.target.value })}\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Diagnosis</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newRecordForm.diagnosis}\r\n                            onChange={(e) => setNewRecordForm({ ...newRecordForm, diagnosis: e.target.value })}\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Prescription</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newRecordForm.prescription}\r\n                            onChange={(e) => setNewRecordForm({ ...newRecordForm, prescription: e.target.value })}\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Notes</label>\r\n                        <textarea\r\n                            value={newRecordForm.notes}\r\n                            onChange={(e) => setNewRecordForm({ ...newRecordForm, notes: e.target.value })}\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-6 flex justify-end space-x-3\">\r\n                    <button\r\n                        onClick={() => setShowCreateRecordModal(false)}\r\n                        className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleSaveRecord}\r\n                        className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n                    >\r\n                        Save Record\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const CreateClaimModal = () => (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">💰 Submit Insurance Claim</h3>\r\n                <div className=\"space-y-4\">\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Patient</label>\r\n                        <select\r\n                            value={newClaimForm.patientId}\r\n                            onChange={(e) => setNewClaimForm({ ...newClaimForm, patientId: e.target.value })}\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        >\r\n                            <option value=\"\">Select a patient</option>\r\n                            {myPatients.map((patient) => (\r\n                                <option key={patient.id} value={patient.id}>\r\n                                    {patient.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Amount ($)</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={newClaimForm.amount}\r\n                            onChange={(e) => setNewClaimForm({ ...newClaimForm, amount: e.target.value })}\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n                        <textarea\r\n                            value={newClaimForm.description}\r\n                            onChange={(e) => setNewClaimForm({ ...newClaimForm, description: e.target.value })}\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700\">Insurance Provider</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newClaimForm.insuranceProvider}\r\n                            onChange={(e) => setNewClaimForm({ ...newClaimForm, insuranceProvider: e.target.value })}\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-6 flex justify-end space-x-3\">\r\n                    <button\r\n                        onClick={() => setShowClaimModal(false)}\r\n                        className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleSaveClaim}\r\n                        className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n                    >\r\n                        Submit Claim\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50\">\r\n            {/* Header */}\r\n            <header className=\"bg-white shadow-sm border-b\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                    <div className=\"flex justify-between items-center h-16\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"flex-shrink-0\">\r\n                                <h1 className=\"text-xl font-bold text-gray-900\">🩺 Doctor Dashboard</h1>\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <Badge variant=\"success\" size=\"sm\">\r\n                                    🔒 HIPAA Compliant\r\n                                </Badge>\r\n                                <Badge variant=\"primary\" size=\"sm\" className=\"ml-2\">\r\n                                    👨‍⚕️ Medical Access\r\n                                </Badge>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-4\">\r\n                            <Timer duration={sessionTimeLeft} onExpire={handleSessionExpire} className=\"text-sm\" />\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <img\r\n                                    className=\"h-8 w-8 rounded-full\"\r\n                                    src={`https://ui-avatars.com/api/?name=${user.name}&background=2563eb&color=fff`}\r\n                                    alt={user.name}\r\n                                />\r\n                                <div className=\"text-sm\">\r\n                                    <div className=\"font-medium text-gray-900\">{user.name}</div>\r\n                                    <div className=\"text-blue-600 font-semibold\">{user.role.toUpperCase()}</div>\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                onClick={onLogout}\r\n                                className=\"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\"\r\n                            >\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            {/* Navigation Tabs */}\r\n            <div className=\"bg-white border-b\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                    <nav className=\"flex space-x-8\">\r\n                        {[\r\n                            { id: 'patients', label: '👥 My Patients', icon: '👥' },\r\n                            { id: 'records', label: '📋 Medical Records', icon: '📋' },\r\n                            { id: 'insurance', label: '💰 Insurance Claims', icon: '💰' },\r\n                            { id: 'nfts', label: '🎨 NFT Health Records', icon: '🎨' },\r\n                            { id: 'security', label: '🔒 Security Tools', icon: '🔒' },\r\n                        ].map((tab) => (\r\n                            <button\r\n                                key={tab.id}\r\n                                onClick={() => setActiveTab(tab.id as any)}\r\n                                className={`py-4 px-1 border-b-2 font-medium text-sm ${activeTab === tab.id\r\n                                    ? 'border-blue-500 text-blue-600'\r\n                                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                                    }`}\r\n                            >\r\n                                {tab.label}\r\n                            </button>\r\n                        ))}\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Main Content */}\r\n            <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n                {showCreateRecordModal && <CreateRecordModal />}\r\n                {showClaimModal && <CreateClaimModal />}\r\n\r\n                {/* Patients Tab */}\r\n                {activeTab === 'patients' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">👥 My Patients</h3>\r\n                            <div className=\"flex items-center space-x-4\">\r\n                                <button\r\n                                    onClick={handleAddNewPatient}\r\n                                    className=\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\"\r\n                                >\r\n                                    + New Patient\r\n                                </button>\r\n                                <div className=\"text-sm text-gray-500\">{myPatients.length} active patients</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"grid gap-6\">\r\n                                {myPatients.map((patient) => (\r\n                                    <div key={patient.id} className=\"border rounded-lg p-6 hover:shadow-md transition-shadow\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex items-center space-x-4\">\r\n                                                <img\r\n                                                    className=\"h-12 w-12 rounded-full\"\r\n                                                    src={`https://ui-avatars.com/api/?name=${patient.name}&background=random`}\r\n                                                    alt={patient.name}\r\n                                                />\r\n                                                <div>\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">{patient.name}</h4>\r\n                                                    <p className=\"text-sm text-gray-500\">{patient.email}</p>\r\n                                                    <p className=\"text-sm text-gray-500\">DOB: {patient.dateOfBirth}</p>\r\n                                                    <p className=\"text-sm text-gray-500\">Phone: {patient.phoneNumber}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <Badge variant=\"success\" size=\"sm\">\r\n                                                    Active\r\n                                                </Badge>\r\n                                                <p className=\"text-sm text-gray-500 mt-2\">Last Visit: {patient.lastVisit}</p>\r\n                                                <p className=\"text-sm text-blue-600 font-medium\">Next: {patient.upcomingAppointment}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                            <div>\r\n                                                <p className=\"text-sm font-medium text-gray-900\">Insurance</p>\r\n                                                <p className=\"text-sm text-gray-500\">{patient.insuranceProvider}</p>\r\n                                                <p className=\"text-sm text-gray-400 font-mono\">{patient.insurancePolicyNumber}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-sm font-medium text-gray-900\">Emergency Contact</p>\r\n                                                <p className=\"text-sm text-gray-500\">{patient.emergencyContact}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"mt-4 flex space-x-3\">\r\n                                            <button\r\n                                                onClick={handleCreateRecord}\r\n                                                className=\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\"\r\n                                            >\r\n                                                📋 New Record\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleSubmitInsuranceClaim(patient.id)}\r\n                                                className=\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\"\r\n                                            >\r\n                                                💰 Submit Claim\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleViewHistory(patient.id)}\r\n                                                className=\"bg-gray-600 text-white px-4 py-2 rounded text-sm hover:bg-gray-700\"\r\n                                            >\r\n                                                👁️ View History\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleDownloadPatientPDF(patient.id)}\r\n                                                className=\"bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700\"\r\n                                            >\r\n                                                📄 Download Records\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                        {(() => {\r\n                                            const patientRecords = recentRecords.filter((record) => record.patientId === patient.id);\r\n                                            return (\r\n                                                patientRecords.length > 0 && (\r\n                                                    <div className=\"mt-6 pt-6 border-t border-gray-200\">\r\n                                                        <div className=\"flex items-center justify-between mb-4\">\r\n                                                            <h5 className=\"text-lg font-medium text-gray-900\">📋 Recent Medical Records</h5>\r\n                                                            <Badge variant=\"info\" size=\"sm\">\r\n                                                                {patientRecords.length} record(s)\r\n                                                            </Badge>\r\n                                                        </div>\r\n                                                        <div className=\"space-y-3\">\r\n                                                            {patientRecords.slice(0, 3).map((record) => (\r\n                                                                <div key={record.id} className=\"bg-gray-50 rounded-lg p-4\">\r\n                                                                    <div className=\"flex items-start justify-between\">\r\n                                                                        <div className=\"flex-1\">\r\n                                                                            <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                                                <h6 className=\"font-medium text-gray-900\">{record.title}</h6>\r\n                                                                                {record.doctorId === user.id ? (\r\n                                                                                    <Badge variant=\"primary\" size=\"sm\">\r\n                                                                                        👨‍⚕️ Doctor Added\r\n                                                                                    </Badge>\r\n                                                                                ) : (\r\n                                                                                    <Badge variant=\"info\" size=\"sm\">\r\n                                                                                        👤 Patient Added\r\n                                                                                    </Badge>\r\n                                                                                )}\r\n                                                                                {recordEncryptionStatus[record.id] ? (\r\n                                                                                    <Badge variant=\"warning\" size=\"sm\">\r\n                                                                                        🔒 ENCRYPTED\r\n                                                                                    </Badge>\r\n                                                                                ) : (\r\n                                                                                    <Badge variant=\"success\" size=\"sm\">\r\n                                                                                        📄 Plain Text\r\n                                                                                    </Badge>\r\n                                                                                )}\r\n                                                                            </div>\r\n                                                                            <p className=\"text-sm text-gray-600 mb-2\">{record.description}</p>\r\n                                                                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 text-sm\">\r\n                                                                                <div>\r\n                                                                                    <p>\r\n                                                                                        <span className=\"font-medium\">Date:</span> {record.date}\r\n                                                                                    </p>\r\n                                                                                    <p>\r\n                                                                                        <span className=\"font-medium\">Diagnosis:</span> {record.diagnosis}\r\n                                                                                    </p>\r\n                                                                                </div>\r\n                                                                                <div>\r\n                                                                                    <p>\r\n                                                                                        <span className=\"font-medium\">Prescription:</span> {record.prescription}\r\n                                                                                    </p>\r\n                                                                                    <p className=\"font-mono text-xs\">\r\n                                                                                        <span className=\"font-medium\">Blockchain:</span> {record.blockchainHash?.slice(0, 20)}...\r\n                                                                                    </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"ml-4 flex flex-col space-y-1\">\r\n                                                                            <button\r\n                                                                                onClick={() => handleViewRecord(record.id)}\r\n                                                                                className=\"bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700\"\r\n                                                                            >\r\n                                                                                👁️ View\r\n                                                                            </button>\r\n                                                                            <button\r\n                                                                                onClick={() => handleDownloadPDF(record.id)}\r\n                                                                                className=\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700\"\r\n                                                                            >\r\n                                                                                📄 PDF\r\n                                                                            </button>\r\n                                                                            <button\r\n                                                                                onClick={() => handleEncryptRecord(record.id)}\r\n                                                                                className=\"bg-green-600 text-white px-2 py-1 rounded text-xs hover:bg-green-700\"\r\n                                                                            >\r\n                                                                                🔒 Encrypt\r\n                                                                            </button>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                            {patientRecords.length > 3 && (\r\n                                                                <div className=\"text-center\">\r\n                                                                    <button\r\n                                                                        onClick={() => setActiveTab('records')}\r\n                                                                        className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\r\n                                                                    >\r\n                                                                        View all {patientRecords.length} records in Medical Records tab →\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            );\r\n                                        })()}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Medical Records Tab */}\r\n                {activeTab === 'records' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">📋 Recent Medical Records</h3>\r\n                            <button\r\n                                onClick={handleCreateRecord}\r\n                                className=\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\"\r\n                            >\r\n                                + New Record\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"space-y-6\">\r\n                                {recentRecords.map((record) => (\r\n                                    <div key={record.id} className=\"border rounded-lg p-6\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">{record.title}</h4>\r\n                                                    {record.doctorId === user.id ? (\r\n                                                        <Badge variant=\"primary\" size=\"sm\">\r\n                                                            👨‍⚕️ Doctor Added\r\n                                                        </Badge>\r\n                                                    ) : (\r\n                                                        <Badge variant=\"info\" size=\"sm\">\r\n                                                            👤 Patient Added\r\n                                                        </Badge>\r\n                                                    )}\r\n                                                    {recordEncryptionStatus[record.id] ? (\r\n                                                        <Badge variant=\"warning\" size=\"sm\">\r\n                                                            🔒 ENCRYPTED\r\n                                                        </Badge>\r\n                                                    ) : (\r\n                                                        <Badge variant=\"success\" size=\"sm\">\r\n                                                            📄 Plain Text\r\n                                                        </Badge>\r\n                                                    )}\r\n                                                    <Badge variant=\"primary\" size=\"sm\">\r\n                                                        🧱 On-Chain\r\n                                                    </Badge>\r\n                                                    {record.nftTokenId && (\r\n                                                        <Badge variant=\"secondary\" size=\"sm\">\r\n                                                            🎨 NFT\r\n                                                        </Badge>\r\n                                                    )}\r\n                                                </div>\r\n                                                <p className=\"text-sm text-gray-600 mb-2\">{record.description}</p>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                                                    <div>\r\n                                                        <p>\r\n                                                            <span className=\"font-medium\">Patient:</span>{' '}\r\n                                                            {myPatients.find((p) => p.id === record.patientId)?.name}\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            <span className=\"font-medium\">Date:</span> {record.date}\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            <span className=\"font-medium\">Diagnosis:</span> {record.diagnosis}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p>\r\n                                                            <span className=\"font-medium\">Prescription:</span> {record.prescription}\r\n                                                        </p>\r\n                                                        <p className=\"font-mono text-xs\">\r\n                                                            <span className=\"font-medium\">Blockchain:</span> {record.blockchainHash}\r\n                                                        </p>\r\n                                                        {record.ipfsHash && (\r\n                                                            <p className=\"font-mono text-xs\">\r\n                                                                <span className=\"font-medium\">IPFS:</span> {record.ipfsHash}\r\n                                                            </p>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"ml-4 flex flex-col space-y-2\">\r\n                                                {!record.nftTokenId && (\r\n                                                    <button\r\n                                                        onClick={() => handleMintNFT(record.id)}\r\n                                                        className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\"\r\n                                                    >\r\n                                                        🎨 Mint NFT\r\n                                                    </button>\r\n                                                )}\r\n                                                <button\r\n                                                    onClick={() => handleEncryptRecord(record.id)}\r\n                                                    className=\"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\"\r\n                                                >\r\n                                                    🔒 Encrypt\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDecryptRecord(record.id)}\r\n                                                    className=\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\"\r\n                                                >\r\n                                                    🔓 Decrypt\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleViewRecord(record.id)}\r\n                                                    className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\"\r\n                                                >\r\n                                                    👁️ View\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDownloadPDF(record.id)}\r\n                                                    className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\"\r\n                                                >\r\n                                                    📄 Download PDF\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleEditRecord(record.id)}\r\n                                                    className=\"bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700\"\r\n                                                >\r\n                                                    ✏️ Edit\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Insurance Claims Tab */}\r\n                {activeTab === 'insurance' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">💰 Insurance Claims</h3>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"space-y-6\">\r\n                                {insuranceClaims.map((claim) => (\r\n                                    <div key={claim.id} className=\"border rounded-lg p-6\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">Claim #{claim.claimNumber}</h4>\r\n                                                    <Badge variant={getStatusColor(claim.status)} size=\"sm\">\r\n                                                        {claim.status.toUpperCase()}\r\n                                                    </Badge>\r\n                                                    {claim.isProcessedOnChain && (\r\n                                                        <Badge variant=\"primary\" size=\"sm\">\r\n                                                            🧱 On-Chain\r\n                                                        </Badge>\r\n                                                    )}\r\n                                                </div>\r\n                                                <p className=\"text-sm text-gray-600 mb-2\">{claim.description}</p>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n                                                    <div>\r\n                                                        <p>\r\n                                                            <span className=\"font-medium\">Patient:</span>{' '}\r\n                                                            {myPatients.find((p) => p.id === claim.patientId)?.name}\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            <span className=\"font-medium\">Amount:</span> ${claim.amount.toFixed(2)}\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            <span className=\"font-medium\">Submitted:</span> {claim.submissionDate}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p>\r\n                                                            <span className=\"font-medium\">Provider:</span> {claim.insuranceProvider}\r\n                                                        </p>\r\n                                                        {claim.approvalDate && (\r\n                                                            <p>\r\n                                                                <span className=\"font-medium\">Approved:</span> {claim.approvalDate}\r\n                                                            </p>\r\n                                                        )}\r\n                                                        <p className=\"font-mono text-xs\">\r\n                                                            <span className=\"font-medium\">Contract:</span> {claim.smartContractAddress}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p className=\"font-mono text-xs\">\r\n                                                            <span className=\"font-medium\">Tx ID:</span> {claim.blockchainTxId?.substring(0, 20)}...\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"ml-4\">\r\n                                                <button\r\n                                                    onClick={() => handleViewInsuranceClaim(claim.id)}\r\n                                                    className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\"\r\n                                                >\r\n                                                    👁️ View Details\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* NFT Health Records Tab */}\r\n                {activeTab === 'nfts' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">🎨 NFT Health Records</h3>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                                {nftRecords.map((nft) => (\r\n                                    <div key={nft.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                                        <div className=\"aspect-square bg-gradient-to-br from-blue-400 to-purple-500 rounded-lg mb-4 flex items-center justify-center\">\r\n                                            <span className=\"text-white text-4xl\">🏥</span>\r\n                                        </div>\r\n                                        <div className=\"space-y-2\">\r\n                                            <h4 className=\"font-medium text-gray-900\">{nft.name}</h4>\r\n                                            <p className=\"text-sm text-gray-600\">{nft.description}</p>\r\n                                            <div className=\"text-xs space-y-1\">\r\n                                                <p>\r\n                                                    <span className=\"font-medium\">Token ID:</span> {nft.tokenId}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <span className=\"font-medium\">Patient:</span>{' '}\r\n                                                    {myPatients.find((p) => p.id === nft.patientId)?.name}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <span className=\"font-medium\">Network:</span> {nft.blockchainNetwork}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <span className=\"font-medium\">Minted:</span> {new Date(nft.mintDate).toLocaleDateString()}\r\n                                                </p>\r\n                                                <p className=\"font-mono\">\r\n                                                    <span className=\"font-medium\">Contract:</span> {nft.contractAddress.substring(0, 10)}...\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"flex items-center justify-between pt-2\">\r\n                                                <Badge variant=\"secondary\" size=\"sm\">\r\n                                                    {nft.isTransferable ? 'Transferable' : 'Non-Transferable'}\r\n                                                </Badge>\r\n                                                <div className=\"flex space-x-2\">\r\n                                                    <button\r\n                                                        onClick={() => handleViewNFT(nft.id)}\r\n                                                        className=\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700 font-medium\"\r\n                                                    >\r\n                                                        👁️ View NFT\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={() => {\r\n                                                            const relatedRecord = recentRecords.find((r) => r.id === nft.recordId);\r\n                                                            if (relatedRecord) {\r\n                                                                handleDownloadPDF(relatedRecord.id);\r\n                                                            } else {\r\n                                                                alert('Related medical record not found');\r\n                                                            }\r\n                                                        }}\r\n                                                        className=\"bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700\"\r\n                                                    >\r\n                                                        📄 PDF\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Security Tools Tab */}\r\n                {activeTab === 'security' && (\r\n                    <div className=\"space-y-6\">\r\n                        <div className=\"bg-white shadow rounded-lg\">\r\n                            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                                <h3 className=\"text-lg font-medium text-gray-900\">🔒 Encryption & Security Tools</h3>\r\n                                <p className=\"text-sm text-gray-500 mt-1\">Secure patient records with advanced encryption</p>\r\n                            </div>\r\n                            <div className=\"p-6\">\r\n                                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                                    {/* PDF File Encryption */}\r\n                                    <div className=\"border rounded-lg p-6\">\r\n                                        <div className=\"text-center\">\r\n                                            <span className=\"text-4xl mb-4 block\">🔒</span>\r\n                                            <h5 className=\"font-medium text-gray-900 mb-2\">Encrypt PDF Files</h5>\r\n                                            <p className=\"text-sm text-gray-600 mb-4\">\r\n                                                Select PDF files from your computer to encrypt with password protection\r\n                                            </p>\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                accept=\".pdf\"\r\n                                                multiple\r\n                                                onChange={handleFileSelection}\r\n                                                className=\"hidden\"\r\n                                                id=\"pdf-file-input\"\r\n                                            />\r\n                                            <label\r\n                                                htmlFor=\"pdf-file-input\"\r\n                                                className=\"bg-green-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-green-700 inline-block\"\r\n                                            >\r\n                                                📁 Choose PDF Files to Encrypt\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Clipboard Monitoring */}\r\n                                    <div className=\"border rounded-lg p-6\">\r\n                                        <div className=\"text-center\">\r\n                                            <span className=\"text-4xl mb-4 block\">👁️</span>\r\n                                            <h5 className=\"font-medium text-gray-900 mb-2\">Clipboard Monitoring</h5>\r\n                                            <p className=\"text-sm text-gray-600 mb-4\">Monitor clipboard for suspicious wallet addresses</p>\r\n                                            <button\r\n                                                onClick={toggleClipboardMonitoring}\r\n                                                className={`px-4 py-2 rounded font-medium ${clipboardMonitoring\r\n                                                    ? 'bg-red-600 text-white hover:bg-red-700'\r\n                                                    : 'bg-blue-600 text-white hover:bg-blue-700'\r\n                                                    }`}\r\n                                            >\r\n                                                {clipboardMonitoring ? '⏹️ Stop Monitoring' : '▶️ Start Monitoring'}\r\n                                            </button>\r\n                                            {suspiciousAddressAlert && (\r\n                                                <div className=\"mt-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n                                                    🚨 Suspicious address detected: {suspiciousAddressAlert}\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* File Selection Display */}\r\n                                {selectedFiles.length > 0 && (\r\n                                    <div className=\"mt-6 p-4 border rounded-lg bg-blue-50\">\r\n                                        <h6 className=\"font-medium text-blue-900 mb-2\">Selected Files ({selectedFiles.length})</h6>\r\n                                        <div className=\"space-y-2\">\r\n                                            {selectedFiles.map((file, index) => (\r\n                                                <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded\">\r\n                                                    <div className=\"flex items-center space-x-2\">\r\n                                                        <span className=\"text-blue-600\">📄</span>\r\n                                                        <span className=\"text-sm font-medium\">{file.name}</span>\r\n                                                        <span className=\"text-xs text-gray-500\">({Math.round(file.size / 1024)} KB)</span>\r\n                                                    </div>\r\n                                                    <button\r\n                                                        onClick={() => removeSelectedFile(index)}\r\n                                                        className=\"text-red-600 hover:text-red-800 text-xs\"\r\n                                                    >\r\n                                                        ❌ Remove\r\n                                                    </button>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                        <button\r\n                                            onClick={handleEncryptSelectedFiles}\r\n                                            className=\"w-full mt-3 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n                                        >\r\n                                            🔒 Encrypt Selected Files\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* Decryption Section */}\r\n                                <div className=\"mt-6 border rounded-lg p-6\">\r\n                                    <div className=\"text-center mb-4\">\r\n                                        <span className=\"text-4xl mb-4 block\">🔓</span>\r\n                                        <h5 className=\"font-medium text-gray-900 mb-2\">Decrypt Encrypted Files</h5>\r\n                                        <p className=\"text-sm text-gray-600 mb-4\">Select .enc files to decrypt with password</p>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            accept=\".enc\"\r\n                                            multiple\r\n                                            onChange={handleEncryptedFileSelection}\r\n                                            className=\"hidden\"\r\n                                            id=\"enc-file-input\"\r\n                                        />\r\n                                        <label\r\n                                            htmlFor=\"enc-file-input\"\r\n                                            className=\"bg-orange-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-orange-700 inline-block\"\r\n                                        >\r\n                                            📁 Choose .enc Files to Decrypt\r\n                                        </label>\r\n                                    </div>\r\n\r\n                                    {selectedEncryptedFiles.length > 0 && (\r\n                                        <div className=\"p-4 border rounded-lg bg-orange-50\">\r\n                                            <h6 className=\"font-medium text-orange-900 mb-2\">\r\n                                                Selected Encrypted Files ({selectedEncryptedFiles.length})\r\n                                            </h6>\r\n                                            <div className=\"space-y-2\">\r\n                                                {selectedEncryptedFiles.map((file, index) => (\r\n                                                    <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded\">\r\n                                                        <div className=\"flex items-center space-x-2\">\r\n                                                            <span className=\"text-orange-600\">🔒</span>\r\n                                                            <span className=\"text-sm font-medium\">{file.name}</span>\r\n                                                            <span className=\"text-xs text-gray-500\">({Math.round(file.size / 1024)} KB)</span>\r\n                                                        </div>\r\n                                                        <button\r\n                                                            onClick={() => removeSelectedEncryptedFile(index)}\r\n                                                            className=\"text-red-600 hover:text-red-800 text-xs\"\r\n                                                        >\r\n                                                            ❌ Remove\r\n                                                        </button>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                            <button\r\n                                                onClick={handleDecryptSelectedFiles}\r\n                                                className=\"w-full mt-3 bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700\"\r\n                                            >\r\n                                                🔓 Decrypt Selected Files\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Security Best Practices */}\r\n                                <div className=\"mt-6 border rounded-lg p-6 bg-yellow-50\">\r\n                                    <div className=\"flex items-start space-x-3\">\r\n                                        <span className=\"text-2xl\">🛡️</span>\r\n                                        <div>\r\n                                            <h6 className=\"font-medium text-yellow-900 mb-2\">🔒 Security Best Practices</h6>\r\n                                            <p className=\"text-sm text-yellow-800 leading-relaxed\">\r\n                                                Always ensure patient records are encrypted before transmission. Use blockchain verification for\r\n                                                data integrity and monitor for suspicious activities.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}