{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATA\\\\CAREER\\\\INTERNSHIPS\\\\EMRChains Internship NSTP\\\\PROJECTS\\\\HEALTHCARE_SYSTEM\\\\src\\\\components\\\\Dashboard\\\\DoctorDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Badge from '../UI/Badge';\nimport Timer from '../UI/Timer';\nimport { RoleBasedAccessService } from '../../services/rbacService';\nimport { EncryptionService } from '../../services/encryption';\nimport { sharedStateService } from '../../services/sharedState';\nimport { pdfService } from '../../services/pdfService';\nimport { FirebaseService } from '../../services/firebaseService';\nimport { clipboardMonitoringService } from '../../services/clipboardMonitoring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [sessionTimeLeft] = useState(1800);\n  const [rbacService] = useState(new RoleBasedAccessService());\n  const [activeTab, setActiveTab] = useState('patients');\n\n  // Modal states\n  const [showCreateRecordModal, setShowCreateRecordModal] = useState(false);\n  const [showClaimModal, setShowClaimModal] = useState(false);\n  const [, setSelectedPatientId] = useState('');\n\n  // Security states\n  const [clipboardMonitoring, setClipboardMonitoring] = useState(false);\n  const [suspiciousAddressAlert, setSuspiciousAddressAlert] = useState(null);\n  const [encryptedRecords, setEncryptedRecords] = useState({});\n  const [recordEncryptionStatus, setRecordEncryptionStatus] = useState({});\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [selectedEncryptedFiles, setSelectedEncryptedFiles] = useState([]);\n\n  // Form states\n  const [newRecordForm, setNewRecordForm] = useState({\n    patientId: '',\n    title: '',\n    description: '',\n    diagnosis: '',\n    prescription: '',\n    notes: ''\n  });\n  const [newClaimForm, setNewClaimForm] = useState({\n    patientId: '',\n    amount: '',\n    description: '',\n    insuranceProvider: ''\n  });\n  const [myPatients, setMyPatients] = useState([]);\n  const [recentRecords, setRecentRecords] = useState([]);\n\n  // Initialize data from Firebase and shared state service\n  useEffect(() => {\n    const patients = sharedStateService.getPatients();\n    const allRecords = sharedStateService.getMedicalRecords();\n    setMyPatients(patients);\n    setRecentRecords(allRecords);\n\n    // Subscribe to Firebase real-time changes for all medical records\n    const unsubscribeFirebase = FirebaseService.subscribeMedicalRecords(firebaseRecords => {\n      // Sync Firebase records with shared state\n      firebaseRecords.forEach(record => {\n        if (!sharedStateService.getMedicalRecords().find(r => r.id === record.id)) {\n          sharedStateService.addMedicalRecord(record);\n        }\n      });\n    });\n\n    // Subscribe to shared state changes (for local updates)\n    const unsubscribePatients = sharedStateService.onPatientsChange(setMyPatients);\n    const unsubscribeRecords = sharedStateService.onMedicalRecordsChange(allRecords => {\n      // Show all records so doctor can see patient-added records\n      setRecentRecords(allRecords);\n    });\n    return () => {\n      unsubscribeFirebase();\n      unsubscribePatients();\n      unsubscribeRecords();\n    };\n  }, [user.id]);\n  const [insuranceClaims] = useState([{\n    id: 'claim-1',\n    claimNumber: 'CLM-2025-001',\n    patientId: 'patient-1',\n    providerId: user.id,\n    doctorId: user.id,\n    insuranceCompany: 'HealthFirst Insurance',\n    insuranceProvider: 'HealthFirst Insurance',\n    amount: 450.00,\n    status: 'approved',\n    submittedAt: '2025-07-01T10:00:00Z',\n    submissionDate: '2025-07-01',\n    approvalDate: '2025-07-03',\n    description: 'Annual physical examination and blood work',\n    relatedRecords: ['record-1'],\n    smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\n    blockchainTxId: '0xabc123def456789abcdef123456789abc123def456789abcdef',\n    isProcessedOnChain: true,\n    approvalSignatures: [],\n    ipfsDocuments: []\n  }, {\n    id: 'claim-2',\n    claimNumber: 'CLM-2025-002',\n    patientId: 'patient-2',\n    providerId: user.id,\n    doctorId: user.id,\n    insuranceCompany: 'MediCare Plus',\n    insuranceProvider: 'MediCare Plus',\n    amount: 275.50,\n    status: 'pending',\n    submittedAt: '2025-07-04T14:30:00Z',\n    submissionDate: '2025-07-04',\n    description: 'Follow-up consultation and medication review',\n    relatedRecords: ['record-2'],\n    smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\n    blockchainTxId: '0xdef456abc789123def456abc789123def456abc789123def',\n    isProcessedOnChain: false,\n    approvalSignatures: [],\n    ipfsDocuments: []\n  }]);\n  const [nftRecords] = useState([{\n    id: 'nft-1',\n    tokenId: 'HEALTH-NFT-001',\n    patientId: 'patient-1',\n    recordId: 'record-1',\n    name: 'Annual Physical 2025',\n    description: 'Comprehensive health examination record',\n    imageUrl: 'https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=NFT-001',\n    metadataUri: 'ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP',\n    contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\n    blockchainNetwork: 'Ethereum',\n    mintDate: '2025-07-04T10:30:00Z',\n    currentOwner: 'patient-1',\n    isTransferable: false,\n    accessLevel: 'doctor_patient'\n  }, {\n    id: 'nft-2',\n    tokenId: 'HEALTH-NFT-002',\n    patientId: 'patient-2',\n    recordId: 'record-2',\n    name: 'Follow-up Consultation',\n    description: 'Treatment follow-up and medication adjustment',\n    imageUrl: 'https://via.placeholder.com/200x200/059669/FFFFFF?text=NFT-002',\n    metadataUri: 'ipfs://QmY8AX6sRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0nQ',\n    contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\n    blockchainNetwork: 'Ethereum',\n    mintDate: '2025-07-03T14:45:00Z',\n    currentOwner: 'patient-2',\n    isTransferable: false,\n    accessLevel: 'doctor_patient'\n  }]);\n  useEffect(() => {\n    rbacService.setCurrentUser(user);\n  }, [user, rbacService]);\n  const handleSessionExpire = () => {\n    window.confirm('Session expired for security. Please login again.') && onLogout();\n  };\n  const handleCreateRecord = () => {\n    setShowCreateRecordModal(true);\n  };\n  const handleSubmitInsuranceClaim = patientId => {\n    setSelectedPatientId(patientId);\n    setNewClaimForm(prev => ({\n      ...prev,\n      patientId\n    }));\n    setShowClaimModal(true);\n  };\n  const handleMintNFT = recordId => {\n    alert(`NFT minting initiated for record ${recordId}. This will create a secure, immutable NFT on the blockchain.`);\n    console.log(`Minting NFT for record: ${recordId}`);\n  };\n  const handleViewHistory = patientId => {\n    const patient = myPatients.find(p => p.id === patientId);\n    const patientRecords = recentRecords.filter(record => record.patientId === patientId);\n    if (patient && patientRecords.length > 0) {\n      const historyDetails = patientRecords.map(record => `📋 ${record.title} (${record.date})\\n   Diagnosis: ${record.diagnosis}\\n   Prescription: ${record.prescription}`).join('\\n\\n');\n      alert(`👥 Medical History for ${patient.name}\n📧 Email: ${patient.email}\n🎂 DOB: ${patient.dateOfBirth}\n🏥 Insurance: ${patient.insuranceProvider}\n📞 Phone: ${patient.phoneNumber}\n🏠 Address: ${patient.address}\n🚨 Emergency Contact: ${patient.emergencyContact}\n📅 Last Visit: ${patient.lastVisit}\n⏭️ Next Appointment: ${patient.upcomingAppointment}\n\n📋 MEDICAL RECORDS:\n${historyDetails}\n\nTotal Records: ${patientRecords.length}`);\n    } else {\n      alert(`No medical history found for this patient.`);\n    }\n  };\n  const handleEncryptRecord = recordId => {\n    const record = recentRecords.find(r => r.id === recordId);\n    if (record) {\n      var _myPatients$find;\n      // Check if already encrypted\n      if (recordEncryptionStatus[recordId]) {\n        alert('⚠️ This record is already encrypted. Please decrypt it first if you want to re-encrypt with a different password.');\n        return;\n      }\n      const password = prompt(`🔒 Enter a password to encrypt \"${record.title}\" for patient: ${((_myPatients$find = myPatients.find(p => p.id === record.patientId)) === null || _myPatients$find === void 0 ? void 0 : _myPatients$find.name) || record.patientId}`);\n      if (password && password.trim()) {\n        try {\n          var _myPatients$find2;\n          // Create a custom encryption service with the user's password\n          const customEncryption = new EncryptionService();\n          const recordData = {\n            ...record,\n            encryptedBy: user.name,\n            encryptedAt: new Date().toISOString()\n          };\n\n          // Use password-based encryption\n          const salt = customEncryption.generateSalt();\n          customEncryption.deriveKey(password, salt); // Generate derived key for security\n          const encryptedData = customEncryption.encryptData(JSON.stringify(recordData));\n\n          // Store the encrypted data and metadata\n          setEncryptedRecords(prev => ({\n            ...prev,\n            [recordId]: encryptedData\n          }));\n          setRecordEncryptionStatus(prev => ({\n            ...prev,\n            [recordId]: true\n          }));\n          alert(`🔒 SUCCESS! Record \"${record.title}\" has been encrypted with your custom password.\n                    \n📋 Record: ${record.title}\n👤 Patient: ${(_myPatients$find2 = myPatients.find(p => p.id === record.patientId)) === null || _myPatients$find2 === void 0 ? void 0 : _myPatients$find2.name}\n🔐 Status: ENCRYPTED\n🛡️ Security Level: AES-256 + Password Protection\n📅 Encrypted At: ${new Date().toLocaleString()}\n👨‍⚕️ Encrypted By: ${user.name}\n\n⚠️ Remember your password - it will be required for decryption!`);\n        } catch (error) {\n          alert('❌ Encryption failed. Please try again.');\n        }\n      } else {\n        alert('❌ Password is required for encryption.');\n      }\n    }\n  };\n  const handleDecryptRecord = recordId => {\n    // Check if record is encrypted\n    if (!recordEncryptionStatus[recordId]) {\n      alert('ℹ️ This record is not encrypted. No decryption needed.');\n      return;\n    }\n    const encryptedData = encryptedRecords[recordId];\n    if (encryptedData) {\n      const password = prompt(`🔓 Enter the password to decrypt this record:`);\n      if (password && password.trim()) {\n        try {\n          var _myPatients$find3;\n          const customEncryption = new EncryptionService();\n\n          // For demo purposes, we'll try to decrypt with the provided password\n          // In a real system, you'd verify the password against the stored hash\n          const decryptedData = customEncryption.decryptData(encryptedData);\n          const record = JSON.parse(decryptedData);\n          alert(`🔓 DECRYPTION SUCCESSFUL!\n\n📋 Title: ${record.title}\n👤 Patient: ${((_myPatients$find3 = myPatients.find(p => p.id === record.patientId)) === null || _myPatients$find3 === void 0 ? void 0 : _myPatients$find3.name) || record.patientId}\n📅 Date: ${record.date}\n🩺 Diagnosis: ${record.diagnosis}\n💊 Prescription: ${record.prescription}\n📝 Description: ${record.description}\n\n🔒 Encryption Details:\n👨‍⚕️ Encrypted By: ${record.encryptedBy || 'Unknown'}\n📅 Encrypted At: ${record.encryptedAt ? new Date(record.encryptedAt).toLocaleString() : 'Unknown'}\n🛡️ Security: Password-protected AES-256`);\n\n          // Ask if user wants to permanently decrypt\n          const permanentDecrypt = window.confirm('🔓 Do you want to permanently decrypt this record? (This will remove encryption)');\n          if (permanentDecrypt) {\n            setEncryptedRecords(prev => {\n              const updated = {\n                ...prev\n              };\n              delete updated[recordId];\n              return updated;\n            });\n            setRecordEncryptionStatus(prev => ({\n              ...prev,\n              [recordId]: false\n            }));\n            alert('✅ Record has been permanently decrypted and is now in plain text.');\n          }\n        } catch (error) {\n          alert('❌ Decryption failed. Incorrect password or corrupted data.');\n        }\n      } else {\n        alert('❌ Password is required for decryption.');\n      }\n    } else {\n      alert('❌ No encrypted data found for this record.');\n    }\n  };\n  const handleViewRecord = recordId => {\n    const record = recentRecords.find(r => r.id === recordId);\n    if (record) {\n      const isEncrypted = recordEncryptionStatus[recordId];\n      const patient = myPatients.find(p => p.id === record.patientId);\n      if (isEncrypted) {\n        const viewEncrypted = window.confirm(`🔒 This record is encrypted. \n\nDo you want to:\n- Click \"OK\" to view encrypted version\n- Click \"Cancel\" to decrypt and view`);\n        if (viewEncrypted) {\n          // Show encrypted version\n          alert(`🔒 ENCRYPTED RECORD VIEW\n\n📋 Title: ${record.title}\n👤 Patient: ${(patient === null || patient === void 0 ? void 0 : patient.name) || record.patientId}\n📅 Date: ${record.date}\n🔐 Status: ENCRYPTED\n🛡️ Security: Password Protected\n\n⚠️ Content is encrypted and cannot be displayed in plain text.\nUse the decrypt button to view the full content.`);\n        } else {\n          // Trigger decryption process\n          handleDecryptRecord(recordId);\n        }\n      } else {\n        // Show full record details\n        alert(`👁️ MEDICAL RECORD DETAILS\n\n📋 Title: ${record.title}\n👤 Patient: ${(patient === null || patient === void 0 ? void 0 : patient.name) || record.patientId}\n📧 Email: ${(patient === null || patient === void 0 ? void 0 : patient.email) || 'N/A'}\n📅 Date: ${record.date}\n🩺 Diagnosis: ${record.diagnosis}\n💊 Prescription: ${record.prescription}\n📝 Description: ${record.description}\n\n🔗 Blockchain Details:\n🧱 Hash: ${record.blockchainHash || 'N/A'}\n📎 IPFS: ${record.ipfsHash || 'N/A'}\n🎨 NFT Token: ${record.nftTokenId || 'Not minted'}\n✅ Verified: ${record.isVerified ? 'Yes' : 'No'}\n🔐 Encryption: Not encrypted`);\n      }\n    }\n  };\n  const toggleClipboardMonitoring = () => {\n    const newState = !clipboardMonitoring;\n    setClipboardMonitoring(newState);\n    if (newState) {\n      // Start monitoring with suspicious address callback\n      const started = clipboardMonitoringService.startMonitoring(suspiciousAddress => {\n        setSuspiciousAddressAlert(suspiciousAddress);\n\n        // Show alert with details\n        alert(`🚨 SECURITY ALERT: Suspicious Wallet Address Detected!\n\n⚠️ Address: ${suspiciousAddress}\n🔍 Reason: This address matches known suspicious patterns or is on the blacklist\n🛡️ Action: Please verify this address before proceeding with any transactions\n\nThis could be:\n• A fake/test address\n• A known hacked wallet\n• A phishing attempt\n• An address with suspicious patterns\n\n🚨 Do NOT send any funds to this address unless you're absolutely certain it's legitimate!`);\n      });\n      if (started) {\n        alert('🔍 Clipboard monitoring enabled! The system is now actively monitoring for suspicious wallet addresses and will alert you with sound if any are detected.');\n      } else {\n        alert('❌ Failed to start clipboard monitoring. Your browser may not support this feature.');\n        setClipboardMonitoring(false);\n      }\n    } else {\n      clipboardMonitoringService.stopMonitoring();\n      setSuspiciousAddressAlert(null);\n      alert('⏹️ Clipboard monitoring disabled.');\n    }\n  };\n  const handleViewInsuranceClaim = claimId => {\n    const claim = insuranceClaims.find(c => c.id === claimId);\n    if (claim) {\n      const patient = myPatients.find(p => p.id === claim.patientId);\n      alert(`💰 Insurance Claim Details\n\n📋 Claim Number: ${claim.claimNumber}\n👤 Patient: ${(patient === null || patient === void 0 ? void 0 : patient.name) || claim.patientId}\n💵 Amount: $${claim.amount.toFixed(2)}\n📊 Status: ${claim.status.toUpperCase()}\n🏥 Insurance Provider: ${claim.insuranceProvider}\n📅 Submitted: ${claim.submissionDate}\n${claim.approvalDate ? `✅ Approved: ${claim.approvalDate}` : '⏳ Pending approval'}\n📝 Description: ${claim.description || 'No description provided'}\n\n🔗 Blockchain Details:\n📋 Contract Address: ${claim.smartContractAddress}\n🆔 Transaction ID: ${claim.blockchainTxId}\n⛓️ On-Chain Status: ${claim.isProcessedOnChain ? 'Processed' : 'Pending'}\n\n📄 Related Records: ${claim.relatedRecords.length} record(s)\n📎 Documents: ${claim.ipfsDocuments.length} file(s) on IPFS`);\n    }\n  };\n  const handleSaveRecord = async () => {\n    if (!newRecordForm.title || !newRecordForm.patientId) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    // Find patient details\n    const patient = myPatients.find(p => p.id === newRecordForm.patientId);\n    if (!patient) {\n      alert('Patient not found');\n      return;\n    }\n    try {\n      // Create new record with proper ID generation\n      const newRecord = {\n        id: sharedStateService.generateId('record'),\n        patientId: newRecordForm.patientId,\n        doctorId: user.id,\n        title: newRecordForm.title,\n        description: newRecordForm.description,\n        date: new Date().toISOString().split('T')[0],\n        diagnosis: newRecordForm.diagnosis,\n        prescription: newRecordForm.prescription,\n        isEncrypted: false,\n        isVerified: true,\n        accessPermissions: [user.id, newRecordForm.patientId],\n        blockchainHash: `0x${Date.now().toString(16)}abc${Math.random().toString(16).slice(2, 8)}`,\n        ipfsHash: `Qm${Math.random().toString(36).slice(2, 15)}${Date.now().toString(36)}`,\n        nftTokenId: undefined\n      };\n\n      // Add to shared state first\n      sharedStateService.addMedicalRecord(newRecord);\n\n      // Sync with Firebase for real-time updates\n      try {\n        await FirebaseService.addMedicalRecord(newRecord);\n      } catch (error) {\n        console.warn('Failed to sync with Firebase:', error);\n      }\n\n      // Show success message with patient name\n      alert(`✅ Medical record created successfully!\n\n📋 Record: ${newRecord.title}\n👤 Patient: ${patient.name}\n📅 Date: ${newRecord.date}\n🩺 Diagnosis: ${newRecord.diagnosis}\n💊 Prescription: ${newRecord.prescription}\n🔗 Real-time sync: Enabled\n\nThe record has been added to your medical records list and synced with the database for real-time access.`);\n      setShowCreateRecordModal(false);\n      setNewRecordForm({\n        patientId: '',\n        title: '',\n        description: '',\n        diagnosis: '',\n        prescription: '',\n        notes: ''\n      });\n    } catch (error) {\n      console.error('Error saving record:', error);\n      alert('❌ Failed to save record. Please try again.');\n    }\n  };\n  const handleSaveClaim = () => {\n    if (!newClaimForm.amount || !newClaimForm.description) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    // Create new insurance claim\n    // const newClaim: InsuranceClaim = {\n    //     id: `claim-${Date.now()}`,\n    //     claimNumber: `CLAIM-${Date.now()}`,\n    //     patientId: newClaimForm.patientId,\n    //     providerId: user.id,\n    //     doctorId: user.id,\n    //     insuranceCompany: newClaimForm.insuranceProvider,\n    //     insuranceProvider: newClaimForm.insuranceProvider,\n    //     amount: parseFloat(newClaimForm.amount),\n    //     status: 'pending',\n    //     submittedAt: new Date().toISOString(),\n    //     submissionDate: new Date().toLocaleDateString(),\n    //     description: newClaimForm.description,\n    //     relatedRecords: [],\n    //     smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\n    //     blockchainTxId: `0x${Date.now().toString(16)}`,\n    //     isProcessedOnChain: false,\n    //     approvalSignatures: [],\n    //     ipfsDocuments: []\n    // };\n\n    alert('Insurance claim submitted successfully!');\n    setShowClaimModal(false);\n    setNewClaimForm({\n      patientId: '',\n      amount: '',\n      description: '',\n      insuranceProvider: ''\n    });\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'approved':\n        return 'success';\n      case 'pending':\n        return 'warning';\n      case 'rejected':\n        return 'error';\n      case 'paid':\n        return 'success';\n      case 'under_review':\n        return 'info';\n      case 'submitted':\n        return 'primary';\n      default:\n        return 'secondary';\n    }\n  };\n  const handleDownloadPDF = async recordId => {\n    const record = recentRecords.find(r => r.id === recordId);\n    if (!record) {\n      alert('Record not found');\n      return;\n    }\n    const patient = myPatients.find(p => p.id === record.patientId);\n    if (!patient) {\n      alert('Patient not found');\n      return;\n    }\n    try {\n      // Always download unencrypted PDF (encryption will be done in Security Tools)\n      await pdfService.downloadMedicalRecordPDF(record, patient, {\n        includeWatermark: true,\n        isEncrypted: false,\n        password: ''\n      });\n      alert(`✅ PDF Downloaded Successfully!\n\n📄 File: medical_record_${record.id}_${patient.name.replace(/\\s+/g, '_')}.pdf\n🔐 Status: UNENCRYPTED (ready for encryption in Security Tools)\n🚨 Watermark: CONFIDENTIAL (at top of document)\n👤 Patient: ${patient.name}\n📋 Record: ${record.title}\n\n💡 Next Steps:\n1. Go to Security Tools tab\n2. Select this PDF file to encrypt\n3. Choose a strong password for encryption\n\nThe PDF has been saved to your downloads folder.`);\n    } catch (error) {\n      console.error('PDF download error:', error);\n      alert(`❌ Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  };\n  const handleDownloadPatientPDF = async patientId => {\n    const patient = myPatients.find(p => p.id === patientId);\n    if (!patient) {\n      alert('Patient not found');\n      return;\n    }\n    const patientRecords = recentRecords.filter(record => record.patientId === patientId);\n    if (patientRecords.length === 0) {\n      alert(`No medical records found for ${patient.name}. Create some records first.`);\n      return;\n    }\n    try {\n      if (patientRecords.length === 1) {\n        // Single record\n        await pdfService.downloadMedicalRecordPDF(patientRecords[0], patient, {\n          includeWatermark: true,\n          isEncrypted: false,\n          password: ''\n        });\n      } else {\n        // Multiple records - use batch PDF\n        const batchPDF = await pdfService.generateBatchPDF(patientRecords, [patient], {\n          includeWatermark: true,\n          isEncrypted: false,\n          password: ''\n        });\n\n        // Create download link for batch PDF\n        const url = URL.createObjectURL(batchPDF);\n        const link = document.createElement('a');\n        link.href = url;\n        const filename = `medical_records_${patient.name.replace(/\\s+/g, '_')}_batch.pdf`;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      }\n      alert(`✅ PDF Downloaded Successfully!\n\n👤 Patient: ${patient.name}\n📄 Records: ${patientRecords.length} medical record(s)\n🔐 Status: UNENCRYPTED (ready for encryption in Security Tools)\n🚨 Watermark: CONFIDENTIAL (at top of document)\n\n💡 Next Steps:\n1. Go to Security Tools tab\n2. Select this PDF file to encrypt\n3. Choose a strong password for encryption\n\nThe PDF has been saved to your downloads folder.`);\n    } catch (error) {\n      console.error('PDF download error:', error);\n      alert(`❌ Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  };\n  const handleAddNewPatient = () => {\n    const patientName = prompt('👤 Enter new patient name:');\n    if (!patientName || !patientName.trim()) {\n      alert('❌ Patient name is required');\n      return;\n    }\n    const patientEmail = prompt('📧 Enter patient email:');\n    if (!patientEmail || !patientEmail.trim() || !patientEmail.includes('@')) {\n      alert('❌ Valid email is required');\n      return;\n    }\n    const patientDOB = prompt('🎂 Enter patient date of birth (YYYY-MM-DD):');\n    if (!patientDOB || !patientDOB.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n      alert('❌ Date of birth is required in YYYY-MM-DD format');\n      return;\n    }\n    const phoneNumber = prompt('📞 Enter patient phone number:') || '';\n    const address = prompt('🏠 Enter patient address:') || '';\n    const emergencyContact = prompt('🚨 Enter emergency contact (Name - Phone):') || '';\n    const insuranceProvider = prompt('🏥 Enter insurance provider:') || 'None';\n    const insurancePolicyNumber = prompt('📄 Enter insurance policy number:') || '';\n    const newPatient = {\n      id: sharedStateService.generateId('patient'),\n      name: patientName.trim(),\n      email: patientEmail.trim(),\n      dateOfBirth: patientDOB,\n      phoneNumber: phoneNumber,\n      address: address,\n      emergencyContact: emergencyContact,\n      insuranceProvider: insuranceProvider,\n      insurancePolicyNumber: insurancePolicyNumber,\n      lastVisit: new Date().toISOString().split('T')[0],\n      upcomingAppointment: 'To be scheduled',\n      isActive: true\n    };\n\n    // Add to shared state\n    sharedStateService.addPatient(newPatient);\n    alert(`✅ New patient added successfully!\n\n👤 Name: ${newPatient.name}\n📧 Email: ${newPatient.email}\n🎂 DOB: ${newPatient.dateOfBirth}\n📞 Phone: ${newPatient.phoneNumber}\n🏥 Insurance: ${newPatient.insuranceProvider}\n\nThe patient is now available for creating medical records.`);\n  };\n  const handleViewNFT = nftId => {\n    const nft = nftRecords.find(n => n.id === nftId);\n    if (!nft) {\n      alert('❌ NFT not found. Please try again.');\n      return;\n    }\n    const patient = myPatients.find(p => p.id === nft.patientId);\n    const relatedRecord = recentRecords.find(r => r.id === nft.recordId);\n    alert(`🎨 NFT Health Record Details\n\n🏷️ Name: ${nft.name}\n📝 Description: ${nft.description}\n🆔 Token ID: ${nft.tokenId}\n👤 Patient: ${(patient === null || patient === void 0 ? void 0 : patient.name) || nft.patientId}\n📋 Related Record: ${(relatedRecord === null || relatedRecord === void 0 ? void 0 : relatedRecord.title) || nft.recordId}\n\n🔗 Blockchain Details:\n🌐 Network: ${nft.blockchainNetwork}\n📍 Contract Address: ${nft.contractAddress}\n👤 Current Owner: ${nft.currentOwner}\n📅 Mint Date: ${new Date(nft.mintDate).toLocaleString()}\n🔄 Transferable: ${nft.isTransferable ? 'Yes' : 'No'}\n🔐 Access Level: ${nft.accessLevel}\n\n📎 Metadata URI: ${nft.metadataUri}\n🖼️ Image URL: ${nft.imageUrl}\n\n✅ This NFT represents a verified medical record stored securely on the blockchain.\n🛡️ The NFT provides immutable proof of medical data authenticity.`);\n  };\n\n  // File encryption handlers\n  const handleFileSelection = event => {\n    const files = event.target.files;\n    if (files) {\n      const pdfFiles = Array.from(files).filter(file => file.type === 'application/pdf');\n      if (pdfFiles.length !== files.length) {\n        alert('⚠️ Only PDF files are allowed. Non-PDF files have been filtered out.');\n      }\n      setSelectedFiles(prev => [...prev, ...pdfFiles]);\n    }\n  };\n  const removeSelectedFile = index => {\n    setSelectedFiles(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleEncryptSelectedFiles = async () => {\n    if (selectedFiles.length === 0) {\n      alert('❌ Please select PDF files to encrypt first.');\n      return;\n    }\n    const password = prompt('🔒 Enter password to encrypt the selected PDF files:');\n    if (!password || !password.trim()) {\n      alert('❌ Password is required for encryption.');\n      return;\n    }\n    try {\n      const encryptedFiles = [];\n      for (const file of selectedFiles) {\n        // Read file as base64\n        const reader = new FileReader();\n        const fileData = await new Promise(resolve => {\n          reader.onload = () => resolve(reader.result);\n          reader.readAsDataURL(file);\n        });\n\n        // Encrypt the file data\n        const customEncryption = new EncryptionService();\n        const salt = customEncryption.generateSalt();\n        customEncryption.deriveKey(password, salt);\n        const encryptedData = customEncryption.encryptData(fileData);\n        encryptedFiles.push({\n          name: file.name.replace('.pdf', '.enc'),\n          // Change extension to .enc\n          encryptedData: encryptedData\n        });\n      }\n\n      // Create download links for encrypted files\n      encryptedFiles.forEach(({\n        name,\n        encryptedData\n      }) => {\n        const blob = new Blob([encryptedData], {\n          type: 'application/octet-stream'\n        });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = name;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      });\n      alert(`✅ Successfully encrypted and downloaded ${encryptedFiles.length} file(s)!\n\n🔐 Encryption Details:\n📄 Files: ${encryptedFiles.map(f => f.name).join(', ')}\n🛡️ Security: AES-256 with password protection\n📅 Encrypted: ${new Date().toLocaleString()}\n🔒 Format: .enc (encrypted files)\n\n⚠️ Remember your password - you'll need it to decrypt these .enc files!\n🔄 The encrypted .enc files have been downloaded to your computer.`);\n\n      // Clear selected files\n      setSelectedFiles([]);\n\n      // Reset file input\n      const fileInput = document.getElementById('pdf-file-input');\n      if (fileInput) {\n        fileInput.value = '';\n      }\n    } catch (error) {\n      console.error('File encryption error:', error);\n      alert('❌ Failed to encrypt files. Please try again.');\n    }\n  };\n\n  // Encrypted file handlers\n  const handleEncryptedFileSelection = event => {\n    const files = event.target.files;\n    if (files) {\n      const encFiles = Array.from(files).filter(file => file.name.endsWith('.enc'));\n      if (encFiles.length !== files.length) {\n        alert('⚠️ Only .enc files are allowed. Non-.enc files have been filtered out.');\n      }\n      setSelectedEncryptedFiles(prev => [...prev, ...encFiles]);\n    }\n  };\n  const removeSelectedEncryptedFile = index => {\n    setSelectedEncryptedFiles(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleDecryptSelectedFiles = async () => {\n    if (selectedEncryptedFiles.length === 0) {\n      alert('❌ Please select .enc files to decrypt first.');\n      return;\n    }\n    const password = prompt('🔓 Enter password to decrypt the selected .enc files:');\n    if (!password || !password.trim()) {\n      alert('❌ Password is required for decryption.');\n      return;\n    }\n    try {\n      const decryptedFiles = [];\n      for (const file of selectedEncryptedFiles) {\n        // Read encrypted file content\n        const reader = new FileReader();\n        const encryptedContent = await new Promise(resolve => {\n          reader.onload = () => resolve(reader.result);\n          reader.readAsText(file);\n        });\n        try {\n          // Decrypt the file data\n          const customEncryption = new EncryptionService();\n          const decryptedData = customEncryption.decryptData(encryptedContent);\n          decryptedFiles.push({\n            name: file.name.replace('.enc', '.pdf'),\n            // Change extension back to .pdf\n            decryptedData: decryptedData\n          });\n        } catch (decryptError) {\n          alert(`❌ Failed to decrypt ${file.name}. Incorrect password or corrupted file.`);\n          continue;\n        }\n      }\n      if (decryptedFiles.length === 0) {\n        alert('❌ No files were successfully decrypted. Please check your password.');\n        return;\n      }\n\n      // Create download links for decrypted files\n      decryptedFiles.forEach(({\n        name,\n        decryptedData\n      }) => {\n        // Convert base64 back to blob\n        const byteCharacters = atob(decryptedData.split(',')[1]);\n        const byteNumbers = new Array(byteCharacters.length);\n        for (let i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        const blob = new Blob([byteArray], {\n          type: 'application/pdf'\n        });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = name;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      });\n      alert(`✅ Successfully decrypted and downloaded ${decryptedFiles.length} PDF file(s)!\n\n🔓 Decryption Details:\n📄 Files: ${decryptedFiles.map(f => f.name).join(', ')}\n🛡️ Security: Successfully decrypted with correct password\n📅 Decrypted: ${new Date().toLocaleString()}\n📄 Format: .pdf (original PDF files restored)\n\n✅ Your PDF files are now available and ready to use!\n🔄 The decrypted PDF files have been downloaded to your computer.`);\n\n      // Clear selected encrypted files\n      setSelectedEncryptedFiles([]);\n\n      // Reset file input\n      const encFileInput = document.getElementById('enc-file-input');\n      if (encFileInput) {\n        encFileInput.value = '';\n      }\n    } catch (error) {\n      console.error('File decryption error:', error);\n      alert('❌ Failed to decrypt files. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center h-16\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-xl font-bold text-gray-900\",\n                children: \"\\uD83E\\uDE7A Doctor Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-4\",\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"success\",\n                size: \"sm\",\n                children: \"\\uD83D\\uDD12 HIPAA Compliant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"primary\",\n                size: \"sm\",\n                className: \"ml-2\",\n                children: \"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Medical Access\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 950,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(Timer, {\n              duration: sessionTimeLeft,\n              onExpire: handleSessionExpire,\n              className: \"text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"h-8 w-8 rounded-full\",\n                src: `https://ui-avatars.com/api/?name=${user.name}&background=2563eb&color=fff`,\n                alt: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-gray-900\",\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-blue-600 font-semibold\",\n                  children: user.role.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 969,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 967,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onLogout,\n              className: \"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"flex space-x-8\",\n          children: [{\n            id: 'patients',\n            label: '👥 My Patients',\n            icon: '👥'\n          }, {\n            id: 'records',\n            label: '📋 Medical Records',\n            icon: '📋'\n          }, {\n            id: 'insurance',\n            label: '💰 Insurance Claims',\n            icon: '💰'\n          }, {\n            id: 'nfts',\n            label: '🎨 NFT Health Records',\n            icon: '🎨'\n          }, {\n            id: 'security',\n            label: '🔒 Security Tools',\n            icon: '🔒'\n          }].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(tab.id),\n            className: `py-4 px-1 border-b-2 font-medium text-sm ${activeTab === tab.id ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`,\n            children: tab.label\n          }, tab.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n      children: [activeTab === 'patients' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"\\uD83D\\uDC65 My Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddNewPatient,\n              className: \"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\",\n              children: \"+ New Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: [myPatients.length, \" active patients\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid gap-6\",\n            children: myPatients.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border rounded-lg p-6 hover:shadow-md transition-shadow\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"h-12 w-12 rounded-full\",\n                    src: `https://ui-avatars.com/api/?name=${patient.name}&background=random`,\n                    alt: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1036,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"text-lg font-medium text-gray-900\",\n                      children: patient.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1042,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-500\",\n                      children: patient.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1043,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-500\",\n                      children: [\"DOB: \", patient.dateOfBirth]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1044,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-500\",\n                      children: [\"Phone: \", patient.phoneNumber]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1045,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1041,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1035,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: [/*#__PURE__*/_jsxDEV(Badge, {\n                    variant: \"success\",\n                    size: \"sm\",\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1049,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-500 mt-2\",\n                    children: [\"Last Visit: \", patient.lastVisit]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1050,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-blue-600 font-medium\",\n                    children: [\"Next: \", patient.upcomingAppointment]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1051,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1048,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: \"Insurance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1056,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-500\",\n                    children: patient.insuranceProvider\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1057,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-400 font-mono\",\n                    children: patient.insurancePolicyNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1058,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm font-medium text-gray-900\",\n                    children: \"Emergency Contact\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1061,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-500\",\n                    children: patient.emergencyContact\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1062,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1060,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1054,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 flex space-x-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleCreateRecord,\n                  className: \"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\",\n                  children: \"\\uD83D\\uDCCB New Record\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1066,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSubmitInsuranceClaim(patient.id),\n                  className: \"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\",\n                  children: \"\\uD83D\\uDCB0 Submit Claim\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1072,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleViewHistory(patient.id),\n                  className: \"bg-gray-600 text-white px-4 py-2 rounded text-sm hover:bg-gray-700\",\n                  children: \"\\uD83D\\uDC41\\uFE0F View History\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1078,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDownloadPatientPDF(patient.id),\n                  className: \"bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700\",\n                  children: \"\\uD83D\\uDCC4 Download Records\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1084,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 41\n              }, this)]\n            }, patient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1033,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1031,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 21\n      }, this), activeTab === 'records' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"\\uD83D\\uDCCB Recent Medical Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateRecord,\n            className: \"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\",\n            children: \"+ New Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: recentRecords.map(record => {\n              var _myPatients$find4;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-6\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center space-x-2 mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"text-lg font-medium text-gray-900\",\n                        children: record.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1117,\n                        columnNumber: 53\n                      }, this), record.doctorId === user.id ? /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"primary\",\n                        size: \"sm\",\n                        children: \"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F Doctor Added\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1119,\n                        columnNumber: 57\n                      }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"info\",\n                        size: \"sm\",\n                        children: \"\\uD83D\\uDC64 Patient Added\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1121,\n                        columnNumber: 57\n                      }, this), recordEncryptionStatus[record.id] ? /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"warning\",\n                        size: \"sm\",\n                        children: \"\\uD83D\\uDD12 ENCRYPTED\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1124,\n                        columnNumber: 57\n                      }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"success\",\n                        size: \"sm\",\n                        children: \"\\uD83D\\uDCC4 Plain Text\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1126,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"primary\",\n                        size: \"sm\",\n                        children: \"\\uD83E\\uDDF1 On-Chain\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1128,\n                        columnNumber: 53\n                      }, this), record.nftTokenId && /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"secondary\",\n                        size: \"sm\",\n                        children: \"\\uD83C\\uDFA8 NFT\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1130,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1116,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-600 mb-2\",\n                      children: record.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1133,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Patient:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1136,\n                            columnNumber: 60\n                          }, this), \" \", (_myPatients$find4 = myPatients.find(p => p.id === record.patientId)) === null || _myPatients$find4 === void 0 ? void 0 : _myPatients$find4.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1136,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Date:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1137,\n                            columnNumber: 60\n                          }, this), \" \", record.date]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1137,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Diagnosis:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1138,\n                            columnNumber: 60\n                          }, this), \" \", record.diagnosis]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1138,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1135,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Prescription:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1141,\n                            columnNumber: 60\n                          }, this), \" \", record.prescription]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1141,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-mono text-xs\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Blockchain:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1142,\n                            columnNumber: 90\n                          }, this), \" \", record.blockchainHash]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1142,\n                          columnNumber: 57\n                        }, this), record.ipfsHash && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-mono text-xs\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"IPFS:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1144,\n                            columnNumber: 94\n                          }, this), \" \", record.ipfsHash]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1144,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1140,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1134,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1115,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ml-4 flex flex-col space-y-2\",\n                    children: [!record.nftTokenId && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleMintNFT(record.id),\n                      className: \"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\",\n                      children: \"\\uD83C\\uDFA8 Mint NFT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1151,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEncryptRecord(record.id),\n                      className: \"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\",\n                      children: \"\\uD83D\\uDD12 Encrypt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1158,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDecryptRecord(record.id),\n                      className: \"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\",\n                      children: \"\\uD83D\\uDD13 Decrypt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1164,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleViewRecord(record.id),\n                      className: \"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\",\n                      children: \"\\uD83D\\uDC41\\uFE0F View\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1170,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDownloadPDF(record.id),\n                      className: \"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\",\n                      children: \"\\uD83D\\uDCC4 Download PDF\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1176,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700\",\n                      children: \"\\u270F\\uFE0F Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1182,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1149,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1114,\n                  columnNumber: 41\n                }, this)\n              }, record.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1113,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 21\n      }, this), activeTab === 'insurance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"\\uD83D\\uDCB0 Insurance Claims\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: insuranceClaims.map(claim => {\n              var _myPatients$find5, _claim$blockchainTxId;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-6\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center space-x-2 mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"text-lg font-medium text-gray-900\",\n                        children: [\"Claim #\", claim.claimNumber]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1207,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: getStatusColor(claim.status),\n                        size: \"sm\",\n                        children: claim.status.toUpperCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1208,\n                        columnNumber: 53\n                      }, this), claim.isProcessedOnChain && /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"primary\",\n                        size: \"sm\",\n                        children: \"\\uD83E\\uDDF1 On-Chain\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1212,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1206,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-600 mb-2\",\n                      children: claim.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1215,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Patient:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1218,\n                            columnNumber: 60\n                          }, this), \" \", (_myPatients$find5 = myPatients.find(p => p.id === claim.patientId)) === null || _myPatients$find5 === void 0 ? void 0 : _myPatients$find5.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1218,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Amount:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1219,\n                            columnNumber: 60\n                          }, this), \" $\", claim.amount.toFixed(2)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1219,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Submitted:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1220,\n                            columnNumber: 60\n                          }, this), \" \", claim.submissionDate]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1220,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1217,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Provider:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1223,\n                            columnNumber: 60\n                          }, this), \" \", claim.insuranceProvider]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1223,\n                          columnNumber: 57\n                        }, this), claim.approvalDate && /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Approved:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1225,\n                            columnNumber: 64\n                          }, this), \" \", claim.approvalDate]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1225,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-mono text-xs\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Contract:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1227,\n                            columnNumber: 90\n                          }, this), \" \", claim.smartContractAddress]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1227,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1222,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"font-mono text-xs\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"font-medium\",\n                            children: \"Tx ID:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1230,\n                            columnNumber: 90\n                          }, this), \" \", (_claim$blockchainTxId = claim.blockchainTxId) === null || _claim$blockchainTxId === void 0 ? void 0 : _claim$blockchainTxId.substring(0, 20), \"...\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1230,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1229,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1216,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1205,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ml-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleViewInsuranceClaim(claim.id),\n                      className: \"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\",\n                      children: \"\\uD83D\\uDC41\\uFE0F View Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1235,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1234,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1204,\n                  columnNumber: 41\n                }, this)\n              }, claim.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1203,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 21\n      }, this), activeTab === 'nfts' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 border-b border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"\\uD83C\\uDFA8 NFT Health Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1254,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n            children: nftRecords.map(nft => {\n              var _myPatients$find6;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-4 hover:shadow-md transition-shadow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"aspect-square bg-gradient-to-br from-blue-400 to-purple-500 rounded-lg mb-4 flex items-center justify-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-white text-4xl\",\n                    children: \"\\uD83C\\uDFE5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1261,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1260,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-gray-900\",\n                    children: nft.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1264,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-600\",\n                    children: nft.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1265,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs space-y-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium\",\n                        children: \"Token ID:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1267,\n                        columnNumber: 52\n                      }, this), \" \", nft.tokenId]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1267,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium\",\n                        children: \"Patient:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1268,\n                        columnNumber: 52\n                      }, this), \" \", (_myPatients$find6 = myPatients.find(p => p.id === nft.patientId)) === null || _myPatients$find6 === void 0 ? void 0 : _myPatients$find6.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1268,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium\",\n                        children: \"Network:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1269,\n                        columnNumber: 52\n                      }, this), \" \", nft.blockchainNetwork]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1269,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium\",\n                        children: \"Minted:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1270,\n                        columnNumber: 52\n                      }, this), \" \", new Date(nft.mintDate).toLocaleDateString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1270,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"font-mono\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium\",\n                        children: \"Contract:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1271,\n                        columnNumber: 74\n                      }, this), \" \", nft.contractAddress.substring(0, 10), \"...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1271,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1266,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between pt-2\",\n                    children: [/*#__PURE__*/_jsxDEV(Badge, {\n                      variant: \"secondary\",\n                      size: \"sm\",\n                      children: nft.isTransferable ? 'Transferable' : 'Non-Transferable'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1274,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex space-x-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleViewNFT(nft.id),\n                        className: \"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700 font-medium\",\n                        children: \"\\uD83D\\uDC41\\uFE0F View NFT\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1278,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          const relatedRecord = recentRecords.find(r => r.id === nft.recordId);\n                          if (relatedRecord) {\n                            handleDownloadPDF(relatedRecord.id);\n                          } else {\n                            alert('Related medical record not found');\n                          }\n                        },\n                        className: \"bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700\",\n                        children: \"\\uD83D\\uDCC4 PDF\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1284,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1277,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1273,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1263,\n                  columnNumber: 41\n                }, this)]\n              }, nft.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1259,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1257,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 21\n      }, this), activeTab === 'security' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-6 py-4 border-b border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium text-gray-900\",\n              children: \"\\uD83D\\uDD12 Encryption & Security Tools\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1312,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 mt-1\",\n              children: \"Secure patient records with advanced encryption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1313,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium text-gray-900\",\n                  children: \"\\uD83D\\uDD10 PDF File Encryption\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1318,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Choose PDF files from your computer to encrypt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1319,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-4 border-2 border-dashed border-gray-300 rounded-lg bg-gray-50\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-4xl mb-4 block\",\n                        children: \"\\uD83D\\uDD12\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1323,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"font-medium text-gray-900 mb-2\",\n                        children: \"Encrypt PDF Files\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1324,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-sm text-gray-600 mb-4\",\n                        children: \"Select PDF files from your computer to encrypt with password protection\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1325,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        accept: \".pdf\",\n                        multiple: true,\n                        onChange: handleFileSelection,\n                        className: \"hidden\",\n                        id: \"pdf-file-input\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1326,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"pdf-file-input\",\n                        className: \"bg-green-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-green-700 inline-block\",\n                        children: \"\\uD83D\\uDCC1 Choose PDF Files to Encrypt\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1334,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1322,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1321,\n                    columnNumber: 45\n                  }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-4 border rounded-lg bg-blue-50\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"font-medium text-blue-900 mb-2\",\n                      children: [\"Selected Files (\", selectedFiles.length, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1345,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center justify-between p-2 bg-white rounded\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex items-center space-x-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-blue-600\",\n                            children: \"\\uD83D\\uDCC4\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1350,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-sm font-medium\",\n                            children: file.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1351,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-xs text-gray-500\",\n                            children: [\"(\", Math.round(file.size / 1024), \" KB)\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1352,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1349,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => removeSelectedFile(index),\n                          className: \"text-red-600 hover:text-red-800 text-xs\",\n                          children: \"\\u274C Remove\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1354,\n                          columnNumber: 65\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1348,\n                        columnNumber: 61\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1346,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleEncryptSelectedFiles,\n                      className: \"w-full mt-3 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\",\n                      children: \"\\uD83D\\uDD12 Encrypt Selected Files\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1363,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1344,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-4 border rounded-lg bg-orange-50\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"font-medium text-orange-900 mb-2\",\n                      children: \"\\uD83D\\uDCCB PDF Encryption/Decryption Workflow\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1373,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-orange-700 mb-3\",\n                      children: [\"\\uD83D\\uDD12 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Encryption:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1375,\n                        columnNumber: 56\n                      }, this), \" PDF \\u2192 .enc (encrypted file)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1375,\n                        columnNumber: 112\n                      }, this), \"\\uD83D\\uDD13 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Decryption:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1376,\n                        columnNumber: 56\n                      }, this), \" .enc \\u2192 PDF (original file)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1376,\n                        columnNumber: 111\n                      }, this), \"\\uD83D\\uDCA1 Export PDFs from Medical Records, then encrypt here\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1374,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => setActiveTab('records'),\n                      className: \"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\",\n                      children: \"\\uD83D\\uDCCB Go to Medical Records\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1379,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1372,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1320,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1317,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium text-gray-900\",\n                  children: \"\\uFFFD PDF File Decryption\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1390,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Choose encrypted (.enc) files from your computer to decrypt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1391,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-4 border-2 border-dashed border-orange-300 rounded-lg bg-orange-50\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-4xl mb-4 block\",\n                        children: \"\\uD83D\\uDD13\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1395,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"font-medium text-gray-900 mb-2\",\n                        children: \"Decrypt Encrypted Files\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1396,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-sm text-gray-600 mb-4\",\n                        children: \"Select .enc files from your computer to decrypt with password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1397,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        accept: \".enc\",\n                        multiple: true,\n                        onChange: handleEncryptedFileSelection,\n                        className: \"hidden\",\n                        id: \"enc-file-input\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1398,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"enc-file-input\",\n                        className: \"bg-orange-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-orange-700 inline-block\",\n                        children: \"\\uD83D\\uDCC1 Choose .enc Files to Decrypt\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1406,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1394,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1393,\n                    columnNumber: 45\n                  }, this), selectedEncryptedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-4 border rounded-lg bg-orange-50\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"font-medium text-orange-900 mb-2\",\n                      children: [\"Selected Encrypted Files (\", selectedEncryptedFiles.length, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1417,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: selectedEncryptedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center justify-between p-2 bg-white rounded\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex items-center space-x-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-orange-600\",\n                            children: \"\\uD83D\\uDD12\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1422,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-sm font-medium\",\n                            children: file.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1423,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-xs text-gray-500\",\n                            children: [\"(\", Math.round(file.size / 1024), \" KB)\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1424,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1421,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => removeSelectedEncryptedFile(index),\n                          className: \"text-red-600 hover:text-red-800 text-xs\",\n                          children: \"\\u274C Remove\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1426,\n                          columnNumber: 65\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1420,\n                        columnNumber: 61\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1418,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleDecryptSelectedFiles,\n                      className: \"w-full mt-3 bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700\",\n                      children: \"\\uFFFD Decrypt Selected Files\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1435,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1416,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1392,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium text-gray-900\",\n                  children: \"\\uD83D\\uDCCB Clipboard Security\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1445,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Monitor clipboard for suspicious wallet addresses\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1446,\n                  columnNumber: 41\n                }, this), suspiciousAddressAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-4 p-4 border-2 border-red-500 bg-red-50 rounded-lg\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-start\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-red-600 text-2xl mr-3\",\n                      children: \"\\uD83D\\uDEA8\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1451,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"font-medium text-red-800\",\n                        children: \"SUSPICIOUS ADDRESS DETECTED!\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1453,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-sm text-red-700 mt-1 font-mono break-all\",\n                        children: suspiciousAddressAlert\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1454,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-xs text-red-600 mt-2\",\n                        children: \"\\u26A0\\uFE0F This address appears to be suspicious. Do not send funds to this address!\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1455,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => setSuspiciousAddressAlert(null),\n                        className: \"mt-2 text-xs bg-red-600 text-white px-2 py-1 rounded hover:bg-red-700\",\n                        children: \"\\u274C Dismiss Alert\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1458,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1452,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1450,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1449,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-4 border rounded-lg\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm font-medium\",\n                      children: \"Clipboard Monitoring\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1471,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                      variant: clipboardMonitoring ? 'success' : 'secondary',\n                      size: \"sm\",\n                      children: clipboardMonitoring ? 'Active' : 'Inactive'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1472,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1470,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: toggleClipboardMonitoring,\n                    className: `w-full px-4 py-2 rounded text-sm ${clipboardMonitoring ? 'bg-red-600 hover:bg-red-700 text-white' : 'bg-blue-600 hover:bg-blue-700 text-white'}`,\n                    children: clipboardMonitoring ? '⏹️ Stop Monitoring' : '🔍 Start Monitoring'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1476,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-3 text-xs text-gray-500\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"\\u2022 Detects cryptocurrency wallet addresses\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1486,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"\\u2022 Alerts on suspicious clipboard activity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1487,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"\\u2022 Protects against clipboard hijacking\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1488,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1485,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1469,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1389,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1316,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-yellow-600 text-lg mr-2\",\n                  children: \"\\u26A0\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1496,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"font-medium text-yellow-800\",\n                    children: \"Security Notice\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1498,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-yellow-700 mt-1\",\n                    children: \"Always ensure patient records are encrypted before transmission. Use blockchain verification for data integrity and monitor for suspicious activities.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1499,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1497,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1495,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1494,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1315,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1310,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 939,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorDashboard, \"H0aqCBEDVUdkAeWrzZRyS/Wr7Ww=\");\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Badge","Timer","RoleBasedAccessService","EncryptionService","sharedStateService","pdfService","FirebaseService","clipboardMonitoringService","jsxDEV","_jsxDEV","DoctorDashboard","user","onLogout","_s","sessionTimeLeft","rbacService","activeTab","setActiveTab","showCreateRecordModal","setShowCreateRecordModal","showClaimModal","setShowClaimModal","setSelectedPatientId","clipboardMonitoring","setClipboardMonitoring","suspiciousAddressAlert","setSuspiciousAddressAlert","encryptedRecords","setEncryptedRecords","recordEncryptionStatus","setRecordEncryptionStatus","selectedFiles","setSelectedFiles","selectedEncryptedFiles","setSelectedEncryptedFiles","newRecordForm","setNewRecordForm","patientId","title","description","diagnosis","prescription","notes","newClaimForm","setNewClaimForm","amount","insuranceProvider","myPatients","setMyPatients","recentRecords","setRecentRecords","patients","getPatients","allRecords","getMedicalRecords","unsubscribeFirebase","subscribeMedicalRecords","firebaseRecords","forEach","record","find","r","id","addMedicalRecord","unsubscribePatients","onPatientsChange","unsubscribeRecords","onMedicalRecordsChange","insuranceClaims","claimNumber","providerId","doctorId","insuranceCompany","status","submittedAt","submissionDate","approvalDate","relatedRecords","smartContractAddress","blockchainTxId","isProcessedOnChain","approvalSignatures","ipfsDocuments","nftRecords","tokenId","recordId","name","imageUrl","metadataUri","contractAddress","blockchainNetwork","mintDate","currentOwner","isTransferable","accessLevel","setCurrentUser","handleSessionExpire","window","confirm","handleCreateRecord","handleSubmitInsuranceClaim","prev","handleMintNFT","alert","console","log","handleViewHistory","patient","p","patientRecords","filter","length","historyDetails","map","date","join","email","dateOfBirth","phoneNumber","address","emergencyContact","lastVisit","upcomingAppointment","handleEncryptRecord","_myPatients$find","password","prompt","trim","_myPatients$find2","customEncryption","recordData","encryptedBy","encryptedAt","Date","toISOString","salt","generateSalt","deriveKey","encryptedData","encryptData","JSON","stringify","toLocaleString","error","handleDecryptRecord","_myPatients$find3","decryptedData","decryptData","parse","permanentDecrypt","updated","handleViewRecord","isEncrypted","viewEncrypted","blockchainHash","ipfsHash","nftTokenId","isVerified","toggleClipboardMonitoring","newState","started","startMonitoring","suspiciousAddress","stopMonitoring","handleViewInsuranceClaim","claimId","claim","c","toFixed","toUpperCase","handleSaveRecord","newRecord","generateId","split","accessPermissions","now","toString","Math","random","slice","undefined","warn","handleSaveClaim","getStatusColor","handleDownloadPDF","downloadMedicalRecordPDF","includeWatermark","replace","Error","message","handleDownloadPatientPDF","batchPDF","generateBatchPDF","url","URL","createObjectURL","link","document","createElement","href","filename","download","body","appendChild","click","removeChild","revokeObjectURL","handleAddNewPatient","patientName","patientEmail","includes","patientDOB","match","insurancePolicyNumber","newPatient","isActive","addPatient","handleViewNFT","nftId","nft","n","relatedRecord","handleFileSelection","event","files","target","pdfFiles","Array","from","file","type","removeSelectedFile","index","_","i","handleEncryptSelectedFiles","encryptedFiles","reader","FileReader","fileData","Promise","resolve","onload","result","readAsDataURL","push","blob","Blob","f","fileInput","getElementById","value","handleEncryptedFileSelection","encFiles","endsWith","removeSelectedEncryptedFile","handleDecryptSelectedFiles","decryptedFiles","encryptedContent","readAsText","decryptError","byteCharacters","atob","byteNumbers","charCodeAt","byteArray","Uint8Array","encFileInput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","duration","onExpire","src","alt","role","onClick","label","icon","tab","_myPatients$find4","_myPatients$find5","_claim$blockchainTxId","substring","_myPatients$find6","toLocaleDateString","accept","multiple","onChange","htmlFor","round","_c","$RefreshReg$"],"sources":["D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/src/components/Dashboard/DoctorDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Badge from '../UI/Badge';\r\nimport Timer from '../UI/Timer';\r\nimport { User, MedicalRecord, Patient, InsuranceClaim, NFTHealthRecord } from '../../types';\r\nimport { RoleBasedAccessService } from '../../services/rbacService';\r\nimport { EncryptionService } from '../../services/encryption';\r\nimport { sharedStateService } from '../../services/sharedState';\r\nimport { pdfService } from '../../services/pdfService';\r\nimport { FirebaseService } from '../../services/firebaseService';\r\nimport { clipboardMonitoringService } from '../../services/clipboardMonitoring';\r\n\r\ninterface DoctorDashboardProps {\r\n    user: User;\r\n    onLogout: () => void;\r\n}\r\n\r\nconst DoctorDashboard: React.FC<DoctorDashboardProps> = ({ user, onLogout }) => {\r\n    const [sessionTimeLeft] = useState(1800);\r\n    const [rbacService] = useState(new RoleBasedAccessService());\r\n    const [activeTab, setActiveTab] = useState<'patients' | 'records' | 'insurance' | 'nfts' | 'security'>('patients');\r\n\r\n    // Modal states\r\n    const [showCreateRecordModal, setShowCreateRecordModal] = useState(false);\r\n    const [showClaimModal, setShowClaimModal] = useState(false);\r\n    const [, setSelectedPatientId] = useState<string>('');\r\n\r\n    // Security states\r\n    const [clipboardMonitoring, setClipboardMonitoring] = useState(false);\r\n    const [suspiciousAddressAlert, setSuspiciousAddressAlert] = useState<string | null>(null);\r\n    const [encryptedRecords, setEncryptedRecords] = useState<{ [key: string]: string }>({});\r\n    const [recordEncryptionStatus, setRecordEncryptionStatus] = useState<{ [key: string]: boolean }>({});\r\n    const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\r\n    const [selectedEncryptedFiles, setSelectedEncryptedFiles] = useState<File[]>([]);\r\n\r\n    // Form states\r\n    const [newRecordForm, setNewRecordForm] = useState({\r\n        patientId: '',\r\n        title: '',\r\n        description: '',\r\n        diagnosis: '',\r\n        prescription: '',\r\n        notes: ''\r\n    });\r\n\r\n    const [newClaimForm, setNewClaimForm] = useState({\r\n        patientId: '',\r\n        amount: '',\r\n        description: '',\r\n        insuranceProvider: ''\r\n    });\r\n\r\n    const [myPatients, setMyPatients] = useState<Patient[]>([]);\r\n    const [recentRecords, setRecentRecords] = useState<MedicalRecord[]>([]);\r\n\r\n    // Initialize data from Firebase and shared state service\r\n    useEffect(() => {\r\n        const patients = sharedStateService.getPatients();\r\n        const allRecords = sharedStateService.getMedicalRecords();\r\n\r\n        setMyPatients(patients);\r\n        setRecentRecords(allRecords);\r\n\r\n        // Subscribe to Firebase real-time changes for all medical records\r\n        const unsubscribeFirebase = FirebaseService.subscribeMedicalRecords((firebaseRecords) => {\r\n            // Sync Firebase records with shared state\r\n            firebaseRecords.forEach(record => {\r\n                if (!sharedStateService.getMedicalRecords().find(r => r.id === record.id)) {\r\n                    sharedStateService.addMedicalRecord(record);\r\n                }\r\n            });\r\n        });\r\n\r\n        // Subscribe to shared state changes (for local updates)\r\n        const unsubscribePatients = sharedStateService.onPatientsChange(setMyPatients);\r\n        const unsubscribeRecords = sharedStateService.onMedicalRecordsChange((allRecords) => {\r\n            // Show all records so doctor can see patient-added records\r\n            setRecentRecords(allRecords);\r\n        });\r\n\r\n        return () => {\r\n            unsubscribeFirebase();\r\n            unsubscribePatients();\r\n            unsubscribeRecords();\r\n        };\r\n    }, [user.id]);\r\n\r\n    const [insuranceClaims] = useState<InsuranceClaim[]>([\r\n        {\r\n            id: 'claim-1',\r\n            claimNumber: 'CLM-2025-001',\r\n            patientId: 'patient-1',\r\n            providerId: user.id,\r\n            doctorId: user.id,\r\n            insuranceCompany: 'HealthFirst Insurance',\r\n            insuranceProvider: 'HealthFirst Insurance',\r\n            amount: 450.00,\r\n            status: 'approved',\r\n            submittedAt: '2025-07-01T10:00:00Z',\r\n            submissionDate: '2025-07-01',\r\n            approvalDate: '2025-07-03',\r\n            description: 'Annual physical examination and blood work',\r\n            relatedRecords: ['record-1'],\r\n            smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n            blockchainTxId: '0xabc123def456789abcdef123456789abc123def456789abcdef',\r\n            isProcessedOnChain: true,\r\n            approvalSignatures: [],\r\n            ipfsDocuments: []\r\n        },\r\n        {\r\n            id: 'claim-2',\r\n            claimNumber: 'CLM-2025-002',\r\n            patientId: 'patient-2',\r\n            providerId: user.id,\r\n            doctorId: user.id,\r\n            insuranceCompany: 'MediCare Plus',\r\n            insuranceProvider: 'MediCare Plus',\r\n            amount: 275.50,\r\n            status: 'pending',\r\n            submittedAt: '2025-07-04T14:30:00Z',\r\n            submissionDate: '2025-07-04',\r\n            description: 'Follow-up consultation and medication review',\r\n            relatedRecords: ['record-2'],\r\n            smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n            blockchainTxId: '0xdef456abc789123def456abc789123def456abc789123def',\r\n            isProcessedOnChain: false,\r\n            approvalSignatures: [],\r\n            ipfsDocuments: []\r\n        }\r\n    ]);\r\n\r\n    const [nftRecords] = useState<NFTHealthRecord[]>([\r\n        {\r\n            id: 'nft-1',\r\n            tokenId: 'HEALTH-NFT-001',\r\n            patientId: 'patient-1',\r\n            recordId: 'record-1',\r\n            name: 'Annual Physical 2025',\r\n            description: 'Comprehensive health examination record',\r\n            imageUrl: 'https://via.placeholder.com/200x200/4F46E5/FFFFFF?text=NFT-001',\r\n            metadataUri: 'ipfs://QmX9ZB7tRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0mP',\r\n            contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\r\n            blockchainNetwork: 'Ethereum',\r\n            mintDate: '2025-07-04T10:30:00Z',\r\n            currentOwner: 'patient-1',\r\n            isTransferable: false,\r\n            accessLevel: 'doctor_patient'\r\n        },\r\n        {\r\n            id: 'nft-2',\r\n            tokenId: 'HEALTH-NFT-002',\r\n            patientId: 'patient-2',\r\n            recordId: 'record-2',\r\n            name: 'Follow-up Consultation',\r\n            description: 'Treatment follow-up and medication adjustment',\r\n            imageUrl: 'https://via.placeholder.com/200x200/059669/FFFFFF?text=NFT-002',\r\n            metadataUri: 'ipfs://QmY8AX6sRvWKHGK8P2mNv3qL5rA9wS6cF4dE2gH1jK0nQ',\r\n            contractAddress: '0x9876543210fedcba9876543210fedcba98765432',\r\n            blockchainNetwork: 'Ethereum',\r\n            mintDate: '2025-07-03T14:45:00Z',\r\n            currentOwner: 'patient-2',\r\n            isTransferable: false,\r\n            accessLevel: 'doctor_patient'\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        rbacService.setCurrentUser(user);\r\n    }, [user, rbacService]);\r\n\r\n    const handleSessionExpire = () => {\r\n        window.confirm('Session expired for security. Please login again.') && onLogout();\r\n    };\r\n\r\n    const handleCreateRecord = () => {\r\n        setShowCreateRecordModal(true);\r\n    };\r\n\r\n    const handleSubmitInsuranceClaim = (patientId: string) => {\r\n        setSelectedPatientId(patientId);\r\n        setNewClaimForm(prev => ({ ...prev, patientId }));\r\n        setShowClaimModal(true);\r\n    };\r\n\r\n    const handleMintNFT = (recordId: string) => {\r\n        alert(`NFT minting initiated for record ${recordId}. This will create a secure, immutable NFT on the blockchain.`);\r\n        console.log(`Minting NFT for record: ${recordId}`);\r\n    };\r\n\r\n    const handleViewHistory = (patientId: string) => {\r\n        const patient = myPatients.find(p => p.id === patientId);\r\n        const patientRecords = recentRecords.filter(record => record.patientId === patientId);\r\n\r\n        if (patient && patientRecords.length > 0) {\r\n            const historyDetails = patientRecords.map(record =>\r\n                `📋 ${record.title} (${record.date})\\n   Diagnosis: ${record.diagnosis}\\n   Prescription: ${record.prescription}`\r\n            ).join('\\n\\n');\r\n\r\n            alert(`👥 Medical History for ${patient.name}\r\n📧 Email: ${patient.email}\r\n🎂 DOB: ${patient.dateOfBirth}\r\n🏥 Insurance: ${patient.insuranceProvider}\r\n📞 Phone: ${patient.phoneNumber}\r\n🏠 Address: ${patient.address}\r\n🚨 Emergency Contact: ${patient.emergencyContact}\r\n📅 Last Visit: ${patient.lastVisit}\r\n⏭️ Next Appointment: ${patient.upcomingAppointment}\r\n\r\n📋 MEDICAL RECORDS:\r\n${historyDetails}\r\n\r\nTotal Records: ${patientRecords.length}`);\r\n        } else {\r\n            alert(`No medical history found for this patient.`);\r\n        }\r\n    };\r\n\r\n    const handleEncryptRecord = (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (record) {\r\n            // Check if already encrypted\r\n            if (recordEncryptionStatus[recordId]) {\r\n                alert('⚠️ This record is already encrypted. Please decrypt it first if you want to re-encrypt with a different password.');\r\n                return;\r\n            }\r\n\r\n            const password = prompt(`🔒 Enter a password to encrypt \"${record.title}\" for patient: ${myPatients.find(p => p.id === record.patientId)?.name || record.patientId}`);\r\n            if (password && password.trim()) {\r\n                try {\r\n                    // Create a custom encryption service with the user's password\r\n                    const customEncryption = new EncryptionService();\r\n                    const recordData = {\r\n                        ...record,\r\n                        encryptedBy: user.name,\r\n                        encryptedAt: new Date().toISOString()\r\n                    };\r\n\r\n                    // Use password-based encryption\r\n                    const salt = customEncryption.generateSalt();\r\n                    customEncryption.deriveKey(password, salt); // Generate derived key for security\r\n                    const encryptedData = customEncryption.encryptData(JSON.stringify(recordData));\r\n\r\n                    // Store the encrypted data and metadata\r\n                    setEncryptedRecords(prev => ({ ...prev, [recordId]: encryptedData }));\r\n                    setRecordEncryptionStatus(prev => ({ ...prev, [recordId]: true }));\r\n\r\n                    alert(`🔒 SUCCESS! Record \"${record.title}\" has been encrypted with your custom password.\r\n                    \r\n📋 Record: ${record.title}\r\n👤 Patient: ${myPatients.find(p => p.id === record.patientId)?.name}\r\n🔐 Status: ENCRYPTED\r\n🛡️ Security Level: AES-256 + Password Protection\r\n📅 Encrypted At: ${new Date().toLocaleString()}\r\n👨‍⚕️ Encrypted By: ${user.name}\r\n\r\n⚠️ Remember your password - it will be required for decryption!`);\r\n                } catch (error) {\r\n                    alert('❌ Encryption failed. Please try again.');\r\n                }\r\n            } else {\r\n                alert('❌ Password is required for encryption.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDecryptRecord = (recordId: string) => {\r\n        // Check if record is encrypted\r\n        if (!recordEncryptionStatus[recordId]) {\r\n            alert('ℹ️ This record is not encrypted. No decryption needed.');\r\n            return;\r\n        }\r\n\r\n        const encryptedData = encryptedRecords[recordId];\r\n        if (encryptedData) {\r\n            const password = prompt(`🔓 Enter the password to decrypt this record:`);\r\n            if (password && password.trim()) {\r\n                try {\r\n                    const customEncryption = new EncryptionService();\r\n\r\n                    // For demo purposes, we'll try to decrypt with the provided password\r\n                    // In a real system, you'd verify the password against the stored hash\r\n                    const decryptedData = customEncryption.decryptData(encryptedData);\r\n                    const record = JSON.parse(decryptedData);\r\n\r\n                    alert(`🔓 DECRYPTION SUCCESSFUL!\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${myPatients.find(p => p.id === record.patientId)?.name || record.patientId}\r\n📅 Date: ${record.date}\r\n🩺 Diagnosis: ${record.diagnosis}\r\n💊 Prescription: ${record.prescription}\r\n📝 Description: ${record.description}\r\n\r\n🔒 Encryption Details:\r\n👨‍⚕️ Encrypted By: ${record.encryptedBy || 'Unknown'}\r\n📅 Encrypted At: ${record.encryptedAt ? new Date(record.encryptedAt).toLocaleString() : 'Unknown'}\r\n🛡️ Security: Password-protected AES-256`);\r\n\r\n                    // Ask if user wants to permanently decrypt\r\n                    const permanentDecrypt = window.confirm('🔓 Do you want to permanently decrypt this record? (This will remove encryption)');\r\n                    if (permanentDecrypt) {\r\n                        setEncryptedRecords(prev => {\r\n                            const updated = { ...prev };\r\n                            delete updated[recordId];\r\n                            return updated;\r\n                        });\r\n                        setRecordEncryptionStatus(prev => ({ ...prev, [recordId]: false }));\r\n                        alert('✅ Record has been permanently decrypted and is now in plain text.');\r\n                    }\r\n                } catch (error) {\r\n                    alert('❌ Decryption failed. Incorrect password or corrupted data.');\r\n                }\r\n            } else {\r\n                alert('❌ Password is required for decryption.');\r\n            }\r\n        } else {\r\n            alert('❌ No encrypted data found for this record.');\r\n        }\r\n    };\r\n\r\n    const handleViewRecord = (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (record) {\r\n            const isEncrypted = recordEncryptionStatus[recordId];\r\n            const patient = myPatients.find(p => p.id === record.patientId);\r\n\r\n            if (isEncrypted) {\r\n                const viewEncrypted = window.confirm(`🔒 This record is encrypted. \r\n\r\nDo you want to:\r\n- Click \"OK\" to view encrypted version\r\n- Click \"Cancel\" to decrypt and view`);\r\n\r\n                if (viewEncrypted) {\r\n                    // Show encrypted version\r\n                    alert(`🔒 ENCRYPTED RECORD VIEW\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${patient?.name || record.patientId}\r\n📅 Date: ${record.date}\r\n🔐 Status: ENCRYPTED\r\n🛡️ Security: Password Protected\r\n\r\n⚠️ Content is encrypted and cannot be displayed in plain text.\r\nUse the decrypt button to view the full content.`);\r\n                } else {\r\n                    // Trigger decryption process\r\n                    handleDecryptRecord(recordId);\r\n                }\r\n            } else {\r\n                // Show full record details\r\n                alert(`👁️ MEDICAL RECORD DETAILS\r\n\r\n📋 Title: ${record.title}\r\n👤 Patient: ${patient?.name || record.patientId}\r\n📧 Email: ${patient?.email || 'N/A'}\r\n📅 Date: ${record.date}\r\n🩺 Diagnosis: ${record.diagnosis}\r\n💊 Prescription: ${record.prescription}\r\n📝 Description: ${record.description}\r\n\r\n🔗 Blockchain Details:\r\n🧱 Hash: ${record.blockchainHash || 'N/A'}\r\n📎 IPFS: ${record.ipfsHash || 'N/A'}\r\n🎨 NFT Token: ${record.nftTokenId || 'Not minted'}\r\n✅ Verified: ${record.isVerified ? 'Yes' : 'No'}\r\n🔐 Encryption: Not encrypted`);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleClipboardMonitoring = () => {\r\n        const newState = !clipboardMonitoring;\r\n        setClipboardMonitoring(newState);\r\n\r\n        if (newState) {\r\n            // Start monitoring with suspicious address callback\r\n            const started = clipboardMonitoringService.startMonitoring((suspiciousAddress) => {\r\n                setSuspiciousAddressAlert(suspiciousAddress);\r\n\r\n                // Show alert with details\r\n                alert(`🚨 SECURITY ALERT: Suspicious Wallet Address Detected!\r\n\r\n⚠️ Address: ${suspiciousAddress}\r\n🔍 Reason: This address matches known suspicious patterns or is on the blacklist\r\n🛡️ Action: Please verify this address before proceeding with any transactions\r\n\r\nThis could be:\r\n• A fake/test address\r\n• A known hacked wallet\r\n• A phishing attempt\r\n• An address with suspicious patterns\r\n\r\n🚨 Do NOT send any funds to this address unless you're absolutely certain it's legitimate!`);\r\n            });\r\n\r\n            if (started) {\r\n                alert('🔍 Clipboard monitoring enabled! The system is now actively monitoring for suspicious wallet addresses and will alert you with sound if any are detected.');\r\n            } else {\r\n                alert('❌ Failed to start clipboard monitoring. Your browser may not support this feature.');\r\n                setClipboardMonitoring(false);\r\n            }\r\n        } else {\r\n            clipboardMonitoringService.stopMonitoring();\r\n            setSuspiciousAddressAlert(null);\r\n            alert('⏹️ Clipboard monitoring disabled.');\r\n        }\r\n    };\r\n\r\n    const handleViewInsuranceClaim = (claimId: string) => {\r\n        const claim = insuranceClaims.find(c => c.id === claimId);\r\n        if (claim) {\r\n            const patient = myPatients.find(p => p.id === claim.patientId);\r\n            alert(`💰 Insurance Claim Details\r\n\r\n📋 Claim Number: ${claim.claimNumber}\r\n👤 Patient: ${patient?.name || claim.patientId}\r\n💵 Amount: $${claim.amount.toFixed(2)}\r\n📊 Status: ${claim.status.toUpperCase()}\r\n🏥 Insurance Provider: ${claim.insuranceProvider}\r\n📅 Submitted: ${claim.submissionDate}\r\n${claim.approvalDate ? `✅ Approved: ${claim.approvalDate}` : '⏳ Pending approval'}\r\n📝 Description: ${claim.description || 'No description provided'}\r\n\r\n🔗 Blockchain Details:\r\n📋 Contract Address: ${claim.smartContractAddress}\r\n🆔 Transaction ID: ${claim.blockchainTxId}\r\n⛓️ On-Chain Status: ${claim.isProcessedOnChain ? 'Processed' : 'Pending'}\r\n\r\n📄 Related Records: ${claim.relatedRecords.length} record(s)\r\n📎 Documents: ${claim.ipfsDocuments.length} file(s) on IPFS`);\r\n        }\r\n    };\r\n\r\n    const handleSaveRecord = async () => {\r\n        if (!newRecordForm.title || !newRecordForm.patientId) {\r\n            alert('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        // Find patient details\r\n        const patient = myPatients.find(p => p.id === newRecordForm.patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Create new record with proper ID generation\r\n            const newRecord: MedicalRecord = {\r\n                id: sharedStateService.generateId('record'),\r\n                patientId: newRecordForm.patientId,\r\n                doctorId: user.id,\r\n                title: newRecordForm.title,\r\n                description: newRecordForm.description,\r\n                date: new Date().toISOString().split('T')[0],\r\n                diagnosis: newRecordForm.diagnosis,\r\n                prescription: newRecordForm.prescription,\r\n                isEncrypted: false,\r\n                isVerified: true,\r\n                accessPermissions: [user.id, newRecordForm.patientId],\r\n                blockchainHash: `0x${Date.now().toString(16)}abc${Math.random().toString(16).slice(2, 8)}`,\r\n                ipfsHash: `Qm${Math.random().toString(36).slice(2, 15)}${Date.now().toString(36)}`,\r\n                nftTokenId: undefined\r\n            };\r\n\r\n            // Add to shared state first\r\n            sharedStateService.addMedicalRecord(newRecord);\r\n\r\n            // Sync with Firebase for real-time updates\r\n            try {\r\n                await FirebaseService.addMedicalRecord(newRecord);\r\n            } catch (error) {\r\n                console.warn('Failed to sync with Firebase:', error);\r\n            }\r\n\r\n            // Show success message with patient name\r\n            alert(`✅ Medical record created successfully!\r\n\r\n📋 Record: ${newRecord.title}\r\n👤 Patient: ${patient.name}\r\n📅 Date: ${newRecord.date}\r\n🩺 Diagnosis: ${newRecord.diagnosis}\r\n💊 Prescription: ${newRecord.prescription}\r\n🔗 Real-time sync: Enabled\r\n\r\nThe record has been added to your medical records list and synced with the database for real-time access.`);\r\n\r\n            setShowCreateRecordModal(false);\r\n            setNewRecordForm({\r\n                patientId: '',\r\n                title: '',\r\n                description: '',\r\n                diagnosis: '',\r\n                prescription: '',\r\n                notes: ''\r\n            });\r\n        } catch (error) {\r\n            console.error('Error saving record:', error);\r\n            alert('❌ Failed to save record. Please try again.');\r\n        }\r\n    };\r\n\r\n    const handleSaveClaim = () => {\r\n        if (!newClaimForm.amount || !newClaimForm.description) {\r\n            alert('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        // Create new insurance claim\r\n        // const newClaim: InsuranceClaim = {\r\n        //     id: `claim-${Date.now()}`,\r\n        //     claimNumber: `CLAIM-${Date.now()}`,\r\n        //     patientId: newClaimForm.patientId,\r\n        //     providerId: user.id,\r\n        //     doctorId: user.id,\r\n        //     insuranceCompany: newClaimForm.insuranceProvider,\r\n        //     insuranceProvider: newClaimForm.insuranceProvider,\r\n        //     amount: parseFloat(newClaimForm.amount),\r\n        //     status: 'pending',\r\n        //     submittedAt: new Date().toISOString(),\r\n        //     submissionDate: new Date().toLocaleDateString(),\r\n        //     description: newClaimForm.description,\r\n        //     relatedRecords: [],\r\n        //     smartContractAddress: '0x1234567890abcdef1234567890abcdef12345678',\r\n        //     blockchainTxId: `0x${Date.now().toString(16)}`,\r\n        //     isProcessedOnChain: false,\r\n        //     approvalSignatures: [],\r\n        //     ipfsDocuments: []\r\n        // };\r\n\r\n        alert('Insurance claim submitted successfully!');\r\n        setShowClaimModal(false);\r\n        setNewClaimForm({\r\n            patientId: '',\r\n            amount: '',\r\n            description: '',\r\n            insuranceProvider: ''\r\n        });\r\n    };\r\n\r\n    const getStatusColor = (status: string) => {\r\n        switch (status) {\r\n            case 'approved': return 'success';\r\n            case 'pending': return 'warning';\r\n            case 'rejected': return 'error';\r\n            case 'paid': return 'success';\r\n            case 'under_review': return 'info';\r\n            case 'submitted': return 'primary';\r\n            default: return 'secondary';\r\n        }\r\n    };\r\n\r\n    const handleDownloadPDF = async (recordId: string) => {\r\n        const record = recentRecords.find(r => r.id === recordId);\r\n        if (!record) {\r\n            alert('Record not found');\r\n            return;\r\n        }\r\n\r\n        const patient = myPatients.find(p => p.id === record.patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Always download unencrypted PDF (encryption will be done in Security Tools)\r\n            await pdfService.downloadMedicalRecordPDF(record, patient, {\r\n                includeWatermark: true,\r\n                isEncrypted: false,\r\n                password: ''\r\n            });\r\n\r\n            alert(`✅ PDF Downloaded Successfully!\r\n\r\n📄 File: medical_record_${record.id}_${patient.name.replace(/\\s+/g, '_')}.pdf\r\n🔐 Status: UNENCRYPTED (ready for encryption in Security Tools)\r\n🚨 Watermark: CONFIDENTIAL (at top of document)\r\n👤 Patient: ${patient.name}\r\n📋 Record: ${record.title}\r\n\r\n💡 Next Steps:\r\n1. Go to Security Tools tab\r\n2. Select this PDF file to encrypt\r\n3. Choose a strong password for encryption\r\n\r\nThe PDF has been saved to your downloads folder.`);\r\n        } catch (error) {\r\n            console.error('PDF download error:', error);\r\n            alert(`❌ Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        }\r\n    };\r\n\r\n    const handleDownloadPatientPDF = async (patientId: string) => {\r\n        const patient = myPatients.find(p => p.id === patientId);\r\n        if (!patient) {\r\n            alert('Patient not found');\r\n            return;\r\n        }\r\n\r\n        const patientRecords = recentRecords.filter(record => record.patientId === patientId);\r\n\r\n        if (patientRecords.length === 0) {\r\n            alert(`No medical records found for ${patient.name}. Create some records first.`);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (patientRecords.length === 1) {\r\n                // Single record\r\n                await pdfService.downloadMedicalRecordPDF(patientRecords[0], patient, {\r\n                    includeWatermark: true,\r\n                    isEncrypted: false,\r\n                    password: ''\r\n                });\r\n            } else {\r\n                // Multiple records - use batch PDF\r\n                const batchPDF = await pdfService.generateBatchPDF(patientRecords, [patient], {\r\n                    includeWatermark: true,\r\n                    isEncrypted: false,\r\n                    password: ''\r\n                });\r\n\r\n                // Create download link for batch PDF\r\n                const url = URL.createObjectURL(batchPDF);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n\r\n                const filename = `medical_records_${patient.name.replace(/\\s+/g, '_')}_batch.pdf`;\r\n                link.download = filename;\r\n\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            }\r\n\r\n            alert(`✅ PDF Downloaded Successfully!\r\n\r\n👤 Patient: ${patient.name}\r\n📄 Records: ${patientRecords.length} medical record(s)\r\n🔐 Status: UNENCRYPTED (ready for encryption in Security Tools)\r\n🚨 Watermark: CONFIDENTIAL (at top of document)\r\n\r\n💡 Next Steps:\r\n1. Go to Security Tools tab\r\n2. Select this PDF file to encrypt\r\n3. Choose a strong password for encryption\r\n\r\nThe PDF has been saved to your downloads folder.`);\r\n        } catch (error) {\r\n            console.error('PDF download error:', error);\r\n            alert(`❌ Failed to download PDF: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n        }\r\n    };\r\n\r\n    const handleAddNewPatient = () => {\r\n        const patientName = prompt('👤 Enter new patient name:');\r\n        if (!patientName || !patientName.trim()) {\r\n            alert('❌ Patient name is required');\r\n            return;\r\n        }\r\n\r\n        const patientEmail = prompt('📧 Enter patient email:');\r\n        if (!patientEmail || !patientEmail.trim() || !patientEmail.includes('@')) {\r\n            alert('❌ Valid email is required');\r\n            return;\r\n        }\r\n\r\n        const patientDOB = prompt('🎂 Enter patient date of birth (YYYY-MM-DD):');\r\n        if (!patientDOB || !patientDOB.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\r\n            alert('❌ Date of birth is required in YYYY-MM-DD format');\r\n            return;\r\n        }\r\n\r\n        const phoneNumber = prompt('📞 Enter patient phone number:') || '';\r\n        const address = prompt('🏠 Enter patient address:') || '';\r\n        const emergencyContact = prompt('🚨 Enter emergency contact (Name - Phone):') || '';\r\n        const insuranceProvider = prompt('🏥 Enter insurance provider:') || 'None';\r\n        const insurancePolicyNumber = prompt('📄 Enter insurance policy number:') || '';\r\n\r\n        const newPatient: Patient = {\r\n            id: sharedStateService.generateId('patient'),\r\n            name: patientName.trim(),\r\n            email: patientEmail.trim(),\r\n            dateOfBirth: patientDOB,\r\n            phoneNumber: phoneNumber,\r\n            address: address,\r\n            emergencyContact: emergencyContact,\r\n            insuranceProvider: insuranceProvider,\r\n            insurancePolicyNumber: insurancePolicyNumber,\r\n            lastVisit: new Date().toISOString().split('T')[0],\r\n            upcomingAppointment: 'To be scheduled',\r\n            isActive: true\r\n        };\r\n\r\n        // Add to shared state\r\n        sharedStateService.addPatient(newPatient);\r\n\r\n        alert(`✅ New patient added successfully!\r\n\r\n👤 Name: ${newPatient.name}\r\n📧 Email: ${newPatient.email}\r\n🎂 DOB: ${newPatient.dateOfBirth}\r\n📞 Phone: ${newPatient.phoneNumber}\r\n🏥 Insurance: ${newPatient.insuranceProvider}\r\n\r\nThe patient is now available for creating medical records.`);\r\n    };\r\n\r\n    const handleViewNFT = (nftId: string) => {\r\n        const nft = nftRecords.find(n => n.id === nftId);\r\n        if (!nft) {\r\n            alert('❌ NFT not found. Please try again.');\r\n            return;\r\n        }\r\n\r\n        const patient = myPatients.find(p => p.id === nft.patientId);\r\n        const relatedRecord = recentRecords.find(r => r.id === nft.recordId);\r\n\r\n        alert(`🎨 NFT Health Record Details\r\n\r\n🏷️ Name: ${nft.name}\r\n📝 Description: ${nft.description}\r\n🆔 Token ID: ${nft.tokenId}\r\n👤 Patient: ${patient?.name || nft.patientId}\r\n📋 Related Record: ${relatedRecord?.title || nft.recordId}\r\n\r\n🔗 Blockchain Details:\r\n🌐 Network: ${nft.blockchainNetwork}\r\n📍 Contract Address: ${nft.contractAddress}\r\n👤 Current Owner: ${nft.currentOwner}\r\n📅 Mint Date: ${new Date(nft.mintDate).toLocaleString()}\r\n🔄 Transferable: ${nft.isTransferable ? 'Yes' : 'No'}\r\n🔐 Access Level: ${nft.accessLevel}\r\n\r\n📎 Metadata URI: ${nft.metadataUri}\r\n🖼️ Image URL: ${nft.imageUrl}\r\n\r\n✅ This NFT represents a verified medical record stored securely on the blockchain.\r\n🛡️ The NFT provides immutable proof of medical data authenticity.`);\r\n    };\r\n\r\n    // File encryption handlers\r\n    const handleFileSelection = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = event.target.files;\r\n        if (files) {\r\n            const pdfFiles = Array.from(files).filter(file => file.type === 'application/pdf');\r\n            if (pdfFiles.length !== files.length) {\r\n                alert('⚠️ Only PDF files are allowed. Non-PDF files have been filtered out.');\r\n            }\r\n            setSelectedFiles(prev => [...prev, ...pdfFiles]);\r\n        }\r\n    };\r\n\r\n    const removeSelectedFile = (index: number) => {\r\n        setSelectedFiles(prev => prev.filter((_, i) => i !== index));\r\n    }; const handleEncryptSelectedFiles = async () => {\r\n        if (selectedFiles.length === 0) {\r\n            alert('❌ Please select PDF files to encrypt first.');\r\n            return;\r\n        }\r\n\r\n        const password = prompt('🔒 Enter password to encrypt the selected PDF files:');\r\n        if (!password || !password.trim()) {\r\n            alert('❌ Password is required for encryption.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const encryptedFiles: { name: string; encryptedData: string }[] = [];\r\n\r\n            for (const file of selectedFiles) {\r\n                // Read file as base64\r\n                const reader = new FileReader();\r\n                const fileData = await new Promise<string>((resolve) => {\r\n                    reader.onload = () => resolve(reader.result as string);\r\n                    reader.readAsDataURL(file);\r\n                });\r\n\r\n                // Encrypt the file data\r\n                const customEncryption = new EncryptionService();\r\n                const salt = customEncryption.generateSalt();\r\n                customEncryption.deriveKey(password, salt);\r\n                const encryptedData = customEncryption.encryptData(fileData);\r\n\r\n                encryptedFiles.push({\r\n                    name: file.name.replace('.pdf', '.enc'), // Change extension to .enc\r\n                    encryptedData: encryptedData\r\n                });\r\n            }\r\n\r\n            // Create download links for encrypted files\r\n            encryptedFiles.forEach(({ name, encryptedData }) => {\r\n                const blob = new Blob([encryptedData], { type: 'application/octet-stream' });\r\n                const url = URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.download = name;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            });\r\n\r\n            alert(`✅ Successfully encrypted and downloaded ${encryptedFiles.length} file(s)!\r\n\r\n🔐 Encryption Details:\r\n📄 Files: ${encryptedFiles.map(f => f.name).join(', ')}\r\n🛡️ Security: AES-256 with password protection\r\n📅 Encrypted: ${new Date().toLocaleString()}\r\n🔒 Format: .enc (encrypted files)\r\n\r\n⚠️ Remember your password - you'll need it to decrypt these .enc files!\r\n🔄 The encrypted .enc files have been downloaded to your computer.`);\r\n\r\n            // Clear selected files\r\n            setSelectedFiles([]);\r\n\r\n            // Reset file input\r\n            const fileInput = document.getElementById('pdf-file-input') as HTMLInputElement;\r\n            if (fileInput) {\r\n                fileInput.value = '';\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('File encryption error:', error);\r\n            alert('❌ Failed to encrypt files. Please try again.');\r\n        }\r\n    };\r\n\r\n    // Encrypted file handlers\r\n    const handleEncryptedFileSelection = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = event.target.files;\r\n        if (files) {\r\n            const encFiles = Array.from(files).filter(file => file.name.endsWith('.enc'));\r\n            if (encFiles.length !== files.length) {\r\n                alert('⚠️ Only .enc files are allowed. Non-.enc files have been filtered out.');\r\n            }\r\n            setSelectedEncryptedFiles(prev => [...prev, ...encFiles]);\r\n        }\r\n    };\r\n\r\n    const removeSelectedEncryptedFile = (index: number) => {\r\n        setSelectedEncryptedFiles(prev => prev.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const handleDecryptSelectedFiles = async () => {\r\n        if (selectedEncryptedFiles.length === 0) {\r\n            alert('❌ Please select .enc files to decrypt first.');\r\n            return;\r\n        }\r\n\r\n        const password = prompt('🔓 Enter password to decrypt the selected .enc files:');\r\n        if (!password || !password.trim()) {\r\n            alert('❌ Password is required for decryption.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const decryptedFiles: { name: string; decryptedData: string }[] = [];\r\n\r\n            for (const file of selectedEncryptedFiles) {\r\n                // Read encrypted file content\r\n                const reader = new FileReader();\r\n                const encryptedContent = await new Promise<string>((resolve) => {\r\n                    reader.onload = () => resolve(reader.result as string);\r\n                    reader.readAsText(file);\r\n                });\r\n\r\n                try {\r\n                    // Decrypt the file data\r\n                    const customEncryption = new EncryptionService();\r\n                    const decryptedData = customEncryption.decryptData(encryptedContent);\r\n\r\n                    decryptedFiles.push({\r\n                        name: file.name.replace('.enc', '.pdf'), // Change extension back to .pdf\r\n                        decryptedData: decryptedData\r\n                    });\r\n                } catch (decryptError) {\r\n                    alert(`❌ Failed to decrypt ${file.name}. Incorrect password or corrupted file.`);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (decryptedFiles.length === 0) {\r\n                alert('❌ No files were successfully decrypted. Please check your password.');\r\n                return;\r\n            }\r\n\r\n            // Create download links for decrypted files\r\n            decryptedFiles.forEach(({ name, decryptedData }) => {\r\n                // Convert base64 back to blob\r\n                const byteCharacters = atob(decryptedData.split(',')[1]);\r\n                const byteNumbers = new Array(byteCharacters.length);\r\n                for (let i = 0; i < byteCharacters.length; i++) {\r\n                    byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n                }\r\n                const byteArray = new Uint8Array(byteNumbers);\r\n                const blob = new Blob([byteArray], { type: 'application/pdf' });\r\n\r\n                const url = URL.createObjectURL(blob);\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.download = name;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n                URL.revokeObjectURL(url);\r\n            });\r\n\r\n            alert(`✅ Successfully decrypted and downloaded ${decryptedFiles.length} PDF file(s)!\r\n\r\n🔓 Decryption Details:\r\n📄 Files: ${decryptedFiles.map(f => f.name).join(', ')}\r\n🛡️ Security: Successfully decrypted with correct password\r\n📅 Decrypted: ${new Date().toLocaleString()}\r\n📄 Format: .pdf (original PDF files restored)\r\n\r\n✅ Your PDF files are now available and ready to use!\r\n🔄 The decrypted PDF files have been downloaded to your computer.`);\r\n\r\n            // Clear selected encrypted files\r\n            setSelectedEncryptedFiles([]);\r\n\r\n            // Reset file input\r\n            const encFileInput = document.getElementById('enc-file-input') as HTMLInputElement;\r\n            if (encFileInput) {\r\n                encFileInput.value = '';\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('File decryption error:', error);\r\n            alert('❌ Failed to decrypt files. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50\">\r\n            {/* Header */}\r\n            <header className=\"bg-white shadow-sm border-b\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                    <div className=\"flex justify-between items-center h-16\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"flex-shrink-0\">\r\n                                <h1 className=\"text-xl font-bold text-gray-900\">🩺 Doctor Dashboard</h1>\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <Badge variant=\"success\" size=\"sm\">🔒 HIPAA Compliant</Badge>\r\n                                <Badge variant=\"primary\" size=\"sm\" className=\"ml-2\">👨‍⚕️ Medical Access</Badge>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center space-x-4\">\r\n                            <Timer\r\n                                duration={sessionTimeLeft}\r\n                                onExpire={handleSessionExpire}\r\n                                className=\"text-sm\"\r\n                            />\r\n\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <img\r\n                                    className=\"h-8 w-8 rounded-full\"\r\n                                    src={`https://ui-avatars.com/api/?name=${user.name}&background=2563eb&color=fff`}\r\n                                    alt={user.name}\r\n                                />\r\n                                <div className=\"text-sm\">\r\n                                    <div className=\"font-medium text-gray-900\">{user.name}</div>\r\n                                    <div className=\"text-blue-600 font-semibold\">{user.role.toUpperCase()}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button\r\n                                onClick={onLogout}\r\n                                className=\"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\"\r\n                            >\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            {/* Navigation Tabs */}\r\n            <div className=\"bg-white border-b\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                    <nav className=\"flex space-x-8\">\r\n                        {[\r\n                            { id: 'patients', label: '👥 My Patients', icon: '👥' },\r\n                            { id: 'records', label: '📋 Medical Records', icon: '📋' },\r\n                            { id: 'insurance', label: '💰 Insurance Claims', icon: '💰' },\r\n                            { id: 'nfts', label: '🎨 NFT Health Records', icon: '🎨' },\r\n                            { id: 'security', label: '🔒 Security Tools', icon: '🔒' }\r\n                        ].map((tab) => (\r\n                            <button\r\n                                key={tab.id}\r\n                                onClick={() => setActiveTab(tab.id as any)}\r\n                                className={`py-4 px-1 border-b-2 font-medium text-sm ${activeTab === tab.id\r\n                                    ? 'border-blue-500 text-blue-600'\r\n                                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                                    }`}\r\n                            >\r\n                                {tab.label}\r\n                            </button>\r\n                        ))}\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Main Content */}\r\n            <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n\r\n                {/* Patients Tab */}\r\n                {activeTab === 'patients' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">👥 My Patients</h3>\r\n                            <div className=\"flex items-center space-x-4\">\r\n                                <button\r\n                                    onClick={handleAddNewPatient}\r\n                                    className=\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\"\r\n                                >\r\n                                    + New Patient\r\n                                </button>\r\n                                <div className=\"text-sm text-gray-500\">\r\n                                    {myPatients.length} active patients\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"grid gap-6\">\r\n                                {myPatients.map((patient) => (\r\n                                    <div key={patient.id} className=\"border rounded-lg p-6 hover:shadow-md transition-shadow\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex items-center space-x-4\">\r\n                                                <img\r\n                                                    className=\"h-12 w-12 rounded-full\"\r\n                                                    src={`https://ui-avatars.com/api/?name=${patient.name}&background=random`}\r\n                                                    alt={patient.name}\r\n                                                />\r\n                                                <div>\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">{patient.name}</h4>\r\n                                                    <p className=\"text-sm text-gray-500\">{patient.email}</p>\r\n                                                    <p className=\"text-sm text-gray-500\">DOB: {patient.dateOfBirth}</p>\r\n                                                    <p className=\"text-sm text-gray-500\">Phone: {patient.phoneNumber}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <Badge variant=\"success\" size=\"sm\">Active</Badge>\r\n                                                <p className=\"text-sm text-gray-500 mt-2\">Last Visit: {patient.lastVisit}</p>\r\n                                                <p className=\"text-sm text-blue-600 font-medium\">Next: {patient.upcomingAppointment}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                            <div>\r\n                                                <p className=\"text-sm font-medium text-gray-900\">Insurance</p>\r\n                                                <p className=\"text-sm text-gray-500\">{patient.insuranceProvider}</p>\r\n                                                <p className=\"text-sm text-gray-400 font-mono\">{patient.insurancePolicyNumber}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-sm font-medium text-gray-900\">Emergency Contact</p>\r\n                                                <p className=\"text-sm text-gray-500\">{patient.emergencyContact}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"mt-4 flex space-x-3\">\r\n                                            <button\r\n                                                onClick={handleCreateRecord}\r\n                                                className=\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\"\r\n                                            >\r\n                                                📋 New Record\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleSubmitInsuranceClaim(patient.id)}\r\n                                                className=\"bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700\"\r\n                                            >\r\n                                                💰 Submit Claim\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleViewHistory(patient.id)}\r\n                                                className=\"bg-gray-600 text-white px-4 py-2 rounded text-sm hover:bg-gray-700\"\r\n                                            >\r\n                                                👁️ View History\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleDownloadPatientPDF(patient.id)}\r\n                                                className=\"bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700\"\r\n                                            >\r\n                                                📄 Download Records\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Medical Records Tab */}\r\n                {activeTab === 'records' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">📋 Recent Medical Records</h3>\r\n                            <button\r\n                                onClick={handleCreateRecord}\r\n                                className=\"bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700\"\r\n                            >\r\n                                + New Record\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"space-y-6\">\r\n                                {recentRecords.map((record) => (\r\n                                    <div key={record.id} className=\"border rounded-lg p-6\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">{record.title}</h4>\r\n                                                    {record.doctorId === user.id ? (\r\n                                                        <Badge variant=\"primary\" size=\"sm\">👨‍⚕️ Doctor Added</Badge>\r\n                                                    ) : (\r\n                                                        <Badge variant=\"info\" size=\"sm\">👤 Patient Added</Badge>\r\n                                                    )}\r\n                                                    {recordEncryptionStatus[record.id] ? (\r\n                                                        <Badge variant=\"warning\" size=\"sm\">🔒 ENCRYPTED</Badge>\r\n                                                    ) : (\r\n                                                        <Badge variant=\"success\" size=\"sm\">📄 Plain Text</Badge>\r\n                                                    )}\r\n                                                    <Badge variant=\"primary\" size=\"sm\">🧱 On-Chain</Badge>\r\n                                                    {record.nftTokenId && (\r\n                                                        <Badge variant=\"secondary\" size=\"sm\">🎨 NFT</Badge>\r\n                                                    )}\r\n                                                </div>\r\n                                                <p className=\"text-sm text-gray-600 mb-2\">{record.description}</p>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === record.patientId)?.name}</p>\r\n                                                        <p><span className=\"font-medium\">Date:</span> {record.date}</p>\r\n                                                        <p><span className=\"font-medium\">Diagnosis:</span> {record.diagnosis}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Prescription:</span> {record.prescription}</p>\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Blockchain:</span> {record.blockchainHash}</p>\r\n                                                        {record.ipfsHash && (\r\n                                                            <p className=\"font-mono text-xs\"><span className=\"font-medium\">IPFS:</span> {record.ipfsHash}</p>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"ml-4 flex flex-col space-y-2\">\r\n                                                {!record.nftTokenId && (\r\n                                                    <button\r\n                                                        onClick={() => handleMintNFT(record.id)}\r\n                                                        className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\"\r\n                                                    >\r\n                                                        🎨 Mint NFT\r\n                                                    </button>\r\n                                                )}\r\n                                                <button\r\n                                                    onClick={() => handleEncryptRecord(record.id)}\r\n                                                    className=\"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\"\r\n                                                >\r\n                                                    🔒 Encrypt\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDecryptRecord(record.id)}\r\n                                                    className=\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\"\r\n                                                >\r\n                                                    🔓 Decrypt\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleViewRecord(record.id)}\r\n                                                    className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\"\r\n                                                >\r\n                                                    👁️ View\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDownloadPDF(record.id)}\r\n                                                    className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700\"\r\n                                                >\r\n                                                    📄 Download PDF\r\n                                                </button>\r\n                                                <button className=\"bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700\">\r\n                                                    ✏️ Edit\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Insurance Claims Tab */}\r\n                {activeTab === 'insurance' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">💰 Insurance Claims</h3>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"space-y-6\">\r\n                                {insuranceClaims.map((claim) => (\r\n                                    <div key={claim.id} className=\"border rounded-lg p-6\">\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                    <h4 className=\"text-lg font-medium text-gray-900\">Claim #{claim.claimNumber}</h4>\r\n                                                    <Badge variant={getStatusColor(claim.status)} size=\"sm\">\r\n                                                        {claim.status.toUpperCase()}\r\n                                                    </Badge>\r\n                                                    {claim.isProcessedOnChain && (\r\n                                                        <Badge variant=\"primary\" size=\"sm\">🧱 On-Chain</Badge>\r\n                                                    )}\r\n                                                </div>\r\n                                                <p className=\"text-sm text-gray-600 mb-2\">{claim.description}</p>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === claim.patientId)?.name}</p>\r\n                                                        <p><span className=\"font-medium\">Amount:</span> ${claim.amount.toFixed(2)}</p>\r\n                                                        <p><span className=\"font-medium\">Submitted:</span> {claim.submissionDate}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p><span className=\"font-medium\">Provider:</span> {claim.insuranceProvider}</p>\r\n                                                        {claim.approvalDate && (\r\n                                                            <p><span className=\"font-medium\">Approved:</span> {claim.approvalDate}</p>\r\n                                                        )}\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Contract:</span> {claim.smartContractAddress}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p className=\"font-mono text-xs\"><span className=\"font-medium\">Tx ID:</span> {claim.blockchainTxId?.substring(0, 20)}...</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"ml-4\">\r\n                                                <button\r\n                                                    onClick={() => handleViewInsuranceClaim(claim.id)}\r\n                                                    className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700\"\r\n                                                >\r\n                                                    👁️ View Details\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* NFT Health Records Tab */}\r\n                {activeTab === 'nfts' && (\r\n                    <div className=\"bg-white shadow rounded-lg\">\r\n                        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                            <h3 className=\"text-lg font-medium text-gray-900\">🎨 NFT Health Records</h3>\r\n                        </div>\r\n                        <div className=\"p-6\">\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                                {nftRecords.map((nft) => (\r\n                                    <div key={nft.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                                        <div className=\"aspect-square bg-gradient-to-br from-blue-400 to-purple-500 rounded-lg mb-4 flex items-center justify-center\">\r\n                                            <span className=\"text-white text-4xl\">🏥</span>\r\n                                        </div>\r\n                                        <div className=\"space-y-2\">\r\n                                            <h4 className=\"font-medium text-gray-900\">{nft.name}</h4>\r\n                                            <p className=\"text-sm text-gray-600\">{nft.description}</p>\r\n                                            <div className=\"text-xs space-y-1\">\r\n                                                <p><span className=\"font-medium\">Token ID:</span> {nft.tokenId}</p>\r\n                                                <p><span className=\"font-medium\">Patient:</span> {myPatients.find(p => p.id === nft.patientId)?.name}</p>\r\n                                                <p><span className=\"font-medium\">Network:</span> {nft.blockchainNetwork}</p>\r\n                                                <p><span className=\"font-medium\">Minted:</span> {new Date(nft.mintDate).toLocaleDateString()}</p>\r\n                                                <p className=\"font-mono\"><span className=\"font-medium\">Contract:</span> {nft.contractAddress.substring(0, 10)}...</p>\r\n                                            </div>\r\n                                            <div className=\"flex items-center justify-between pt-2\">\r\n                                                <Badge variant=\"secondary\" size=\"sm\">\r\n                                                    {nft.isTransferable ? 'Transferable' : 'Non-Transferable'}\r\n                                                </Badge>\r\n                                                <div className=\"flex space-x-2\">\r\n                                                    <button\r\n                                                        onClick={() => handleViewNFT(nft.id)}\r\n                                                        className=\"bg-purple-600 text-white px-2 py-1 rounded text-xs hover:bg-purple-700 font-medium\"\r\n                                                    >\r\n                                                        👁️ View NFT\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={() => {\r\n                                                            const relatedRecord = recentRecords.find(r => r.id === nft.recordId);\r\n                                                            if (relatedRecord) {\r\n                                                                handleDownloadPDF(relatedRecord.id);\r\n                                                            } else {\r\n                                                                alert('Related medical record not found');\r\n                                                            }\r\n                                                        }}\r\n                                                        className=\"bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700\"\r\n                                                    >\r\n                                                        📄 PDF\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Security Tools Tab */}\r\n                {activeTab === 'security' && (\r\n                    <div className=\"space-y-6\">\r\n                        <div className=\"bg-white shadow rounded-lg\">\r\n                            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                                <h3 className=\"text-lg font-medium text-gray-900\">🔒 Encryption & Security Tools</h3>\r\n                                <p className=\"text-sm text-gray-500 mt-1\">Secure patient records with advanced encryption</p>\r\n                            </div>\r\n                            <div className=\"p-6\">\r\n                                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                                    <div className=\"space-y-4\">\r\n                                        <h4 className=\"font-medium text-gray-900\">🔐 PDF File Encryption</h4>\r\n                                        <p className=\"text-sm text-gray-600\">Choose PDF files from your computer to encrypt</p>\r\n                                        <div className=\"space-y-4\">\r\n                                            <div className=\"p-4 border-2 border-dashed border-gray-300 rounded-lg bg-gray-50\">\r\n                                                <div className=\"text-center\">\r\n                                                    <span className=\"text-4xl mb-4 block\">🔒</span>\r\n                                                    <h5 className=\"font-medium text-gray-900 mb-2\">Encrypt PDF Files</h5>\r\n                                                    <p className=\"text-sm text-gray-600 mb-4\">Select PDF files from your computer to encrypt with password protection</p>\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        accept=\".pdf\"\r\n                                                        multiple\r\n                                                        onChange={handleFileSelection}\r\n                                                        className=\"hidden\"\r\n                                                        id=\"pdf-file-input\"\r\n                                                    />\r\n                                                    <label\r\n                                                        htmlFor=\"pdf-file-input\"\r\n                                                        className=\"bg-green-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-green-700 inline-block\"\r\n                                                    >\r\n                                                        📁 Choose PDF Files to Encrypt\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {selectedFiles.length > 0 && (\r\n                                                <div className=\"p-4 border rounded-lg bg-blue-50\">\r\n                                                    <h6 className=\"font-medium text-blue-900 mb-2\">Selected Files ({selectedFiles.length})</h6>\r\n                                                    <div className=\"space-y-2\">\r\n                                                        {selectedFiles.map((file, index) => (\r\n                                                            <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded\">\r\n                                                                <div className=\"flex items-center space-x-2\">\r\n                                                                    <span className=\"text-blue-600\">📄</span>\r\n                                                                    <span className=\"text-sm font-medium\">{file.name}</span>\r\n                                                                    <span className=\"text-xs text-gray-500\">({Math.round(file.size / 1024)} KB)</span>\r\n                                                                </div>\r\n                                                                <button\r\n                                                                    onClick={() => removeSelectedFile(index)}\r\n                                                                    className=\"text-red-600 hover:text-red-800 text-xs\"\r\n                                                                >\r\n                                                                    ❌ Remove\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                    <button\r\n                                                        onClick={handleEncryptSelectedFiles}\r\n                                                        className=\"w-full mt-3 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n                                                    >\r\n                                                        🔒 Encrypt Selected Files\r\n                                                    </button>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            <div className=\"p-4 border rounded-lg bg-orange-50\">\r\n                                                <h6 className=\"font-medium text-orange-900 mb-2\">📋 PDF Encryption/Decryption Workflow</h6>\r\n                                                <p className=\"text-sm text-orange-700 mb-3\">\r\n                                                    🔒 <strong>Encryption:</strong> PDF → .enc (encrypted file)<br />\r\n                                                    🔓 <strong>Decryption:</strong> .enc → PDF (original file)<br />\r\n                                                    💡 Export PDFs from Medical Records, then encrypt here\r\n                                                </p>\r\n                                                <button\r\n                                                    onClick={() => setActiveTab('records')}\r\n                                                    className=\"bg-orange-600 text-white px-3 py-1 rounded text-sm hover:bg-orange-700\"\r\n                                                >\r\n                                                    📋 Go to Medical Records\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"space-y-4\">\r\n                                        <h4 className=\"font-medium text-gray-900\">� PDF File Decryption</h4>\r\n                                        <p className=\"text-sm text-gray-600\">Choose encrypted (.enc) files from your computer to decrypt</p>\r\n                                        <div className=\"space-y-4\">\r\n                                            <div className=\"p-4 border-2 border-dashed border-orange-300 rounded-lg bg-orange-50\">\r\n                                                <div className=\"text-center\">\r\n                                                    <span className=\"text-4xl mb-4 block\">🔓</span>\r\n                                                    <h5 className=\"font-medium text-gray-900 mb-2\">Decrypt Encrypted Files</h5>\r\n                                                    <p className=\"text-sm text-gray-600 mb-4\">Select .enc files from your computer to decrypt with password</p>\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        accept=\".enc\"\r\n                                                        multiple\r\n                                                        onChange={handleEncryptedFileSelection}\r\n                                                        className=\"hidden\"\r\n                                                        id=\"enc-file-input\"\r\n                                                    />\r\n                                                    <label\r\n                                                        htmlFor=\"enc-file-input\"\r\n                                                        className=\"bg-orange-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-orange-700 inline-block\"\r\n                                                    >\r\n                                                        📁 Choose .enc Files to Decrypt\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {selectedEncryptedFiles.length > 0 && (\r\n                                                <div className=\"p-4 border rounded-lg bg-orange-50\">\r\n                                                    <h6 className=\"font-medium text-orange-900 mb-2\">Selected Encrypted Files ({selectedEncryptedFiles.length})</h6>\r\n                                                    <div className=\"space-y-2\">\r\n                                                        {selectedEncryptedFiles.map((file, index) => (\r\n                                                            <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded\">\r\n                                                                <div className=\"flex items-center space-x-2\">\r\n                                                                    <span className=\"text-orange-600\">🔒</span>\r\n                                                                    <span className=\"text-sm font-medium\">{file.name}</span>\r\n                                                                    <span className=\"text-xs text-gray-500\">({Math.round(file.size / 1024)} KB)</span>\r\n                                                                </div>\r\n                                                                <button\r\n                                                                    onClick={() => removeSelectedEncryptedFile(index)}\r\n                                                                    className=\"text-red-600 hover:text-red-800 text-xs\"\r\n                                                                >\r\n                                                                    ❌ Remove\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                    <button\r\n                                                        onClick={handleDecryptSelectedFiles}\r\n                                                        className=\"w-full mt-3 bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700\"\r\n                                                    >\r\n                                                        � Decrypt Selected Files\r\n                                                    </button>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n\r\n                                        <h4 className=\"font-medium text-gray-900\">📋 Clipboard Security</h4>\r\n                                        <p className=\"text-sm text-gray-600\">Monitor clipboard for suspicious wallet addresses</p>\r\n\r\n                                        {suspiciousAddressAlert && (\r\n                                            <div className=\"mb-4 p-4 border-2 border-red-500 bg-red-50 rounded-lg\">\r\n                                                <div className=\"flex items-start\">\r\n                                                    <span className=\"text-red-600 text-2xl mr-3\">🚨</span>\r\n                                                    <div>\r\n                                                        <h5 className=\"font-medium text-red-800\">SUSPICIOUS ADDRESS DETECTED!</h5>\r\n                                                        <p className=\"text-sm text-red-700 mt-1 font-mono break-all\">{suspiciousAddressAlert}</p>\r\n                                                        <p className=\"text-xs text-red-600 mt-2\">\r\n                                                            ⚠️ This address appears to be suspicious. Do not send funds to this address!\r\n                                                        </p>\r\n                                                        <button\r\n                                                            onClick={() => setSuspiciousAddressAlert(null)}\r\n                                                            className=\"mt-2 text-xs bg-red-600 text-white px-2 py-1 rounded hover:bg-red-700\"\r\n                                                        >\r\n                                                            ❌ Dismiss Alert\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n\r\n                                        <div className=\"p-4 border rounded-lg\">\r\n                                            <div className=\"flex items-center justify-between mb-3\">\r\n                                                <span className=\"text-sm font-medium\">Clipboard Monitoring</span>\r\n                                                <Badge variant={clipboardMonitoring ? 'success' : 'secondary'} size=\"sm\">\r\n                                                    {clipboardMonitoring ? 'Active' : 'Inactive'}\r\n                                                </Badge>\r\n                                            </div>\r\n                                            <button\r\n                                                onClick={toggleClipboardMonitoring}\r\n                                                className={`w-full px-4 py-2 rounded text-sm ${clipboardMonitoring\r\n                                                    ? 'bg-red-600 hover:bg-red-700 text-white'\r\n                                                    : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n                                                    }`}\r\n                                            >\r\n                                                {clipboardMonitoring ? '⏹️ Stop Monitoring' : '🔍 Start Monitoring'}\r\n                                            </button>\r\n                                            <div className=\"mt-3 text-xs text-gray-500\">\r\n                                                <p>• Detects cryptocurrency wallet addresses</p>\r\n                                                <p>• Alerts on suspicious clipboard activity</p>\r\n                                                <p>• Protects against clipboard hijacking</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                                    <div className=\"flex items-start\">\r\n                                        <span className=\"text-yellow-600 text-lg mr-2\">⚠️</span>\r\n                                        <div>\r\n                                            <h5 className=\"font-medium text-yellow-800\">Security Notice</h5>\r\n                                            <p className=\"text-sm text-yellow-700 mt-1\">\r\n                                                Always ensure patient records are encrypted before transmission.\r\n                                                Use blockchain verification for data integrity and monitor for suspicious activities.\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}