{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Enhanced2FA=_ref=>{let{onSuccess,onError,onResendCode,userEmail,phoneNumber,className=''}=_ref;const[verificationCode,setVerificationCode]=useState(['','','','','','']);const[isVerifying,setIsVerifying]=useState(false);const[timeRemaining,setTimeRemaining]=useState(300);// 5 minutes\nconst[canResend,setCanResend]=useState(false);const[method,setMethod]=useState('email');const[attempts,setAttempts]=useState(0);const maxAttempts=3;const inputRefs=useRef([]);useEffect(()=>{// Start countdown timer\nconst timer=setInterval(()=>{setTimeRemaining(prev=>{if(prev<=1){setCanResend(true);return 0;}return prev-1;});},1000);return()=>clearInterval(timer);},[]);useEffect(()=>{// Auto-submit when all digits are entered\nif(verificationCode.every(digit=>digit!=='')){handleVerify();}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[verificationCode]);const handleInputChange=(index,value)=>{if(value.length>1)return;// Only allow single digit\nconst newCode=[...verificationCode];newCode[index]=value;setVerificationCode(newCode);// Auto-focus next input\nif(value!==''&&index<5){var _inputRefs$current;(_inputRefs$current=inputRefs.current[index+1])===null||_inputRefs$current===void 0?void 0:_inputRefs$current.focus();}};const handleKeyDown=(index,e)=>{if(e.key==='Backspace'&&verificationCode[index]===''&&index>0){var _inputRefs$current2;(_inputRefs$current2=inputRefs.current[index-1])===null||_inputRefs$current2===void 0?void 0:_inputRefs$current2.focus();}};const handlePaste=e=>{e.preventDefault();const pastedData=e.clipboardData.getData('text').replace(/\\D/g,'').slice(0,6);const newCode=[...verificationCode];for(let i=0;i<pastedData.length&&i<6;i++){newCode[i]=pastedData[i];}setVerificationCode(newCode);};const handleVerify=async()=>{const code=verificationCode.join('');if(code.length!==6){onError('Please enter all 6 digits');return;}setIsVerifying(true);setAttempts(prev=>prev+1);try{// Simulate verification (in real app, call your API)\nawait new Promise(resolve=>setTimeout(resolve,2000));// Simulate verification logic\nconst isValid=code==='123456'||Math.random()>0.3;// Demo: accept 123456 or 70% success rate\nif(isValid){onSuccess();}else{if(attempts>=maxAttempts-1){onError(\"Maximum verification attempts exceeded. Please request a new code.\");setVerificationCode(['','','','','','']);setAttempts(0);}else{var _inputRefs$current$;onError(\"Invalid verification code. \".concat(maxAttempts-attempts-1,\" attempts remaining.\"));setVerificationCode(['','','','','','']);(_inputRefs$current$=inputRefs.current[0])===null||_inputRefs$current$===void 0?void 0:_inputRefs$current$.focus();}}}catch(error){onError('Verification failed. Please try again.');}finally{setIsVerifying(false);}};const handleResend=()=>{var _inputRefs$current$2;if(!canResend)return;setTimeRemaining(300);setCanResend(false);setAttempts(0);setVerificationCode(['','','','','','']);onResendCode();(_inputRefs$current$2=inputRefs.current[0])===null||_inputRefs$current$2===void 0?void 0:_inputRefs$current$2.focus();};const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(mins,\":\").concat(secs.toString().padStart(2,'0'));};const getMaskedContact=contact=>{if(method==='email'){const[name,domain]=contact.split('@');return\"\".concat(name.slice(0,2),\"***@\").concat(domain);}else{return\"***-***-\".concat(contact.slice(-4));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6 p-6 bg-white rounded-lg shadow \".concat(className),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl mb-2\",children:\"\\uD83D\\uDD10\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900\",children:\"Two-Factor Authentication\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mt-2\",children:\"Enter the 6-digit verification code to secure your healthcare account\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-sm font-medium text-gray-700\",children:\"Verification Method\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-3\",children:[userEmail&&/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setMethod('email'),className:\"flex items-center p-3 border rounded-lg transition-colors \".concat(method==='email'?'border-blue-500 bg-blue-50 text-blue-700':'border-gray-300 hover:border-gray-400'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl mr-2\",children:\"\\uD83D\\uDCE7\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-left\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:\"Email\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:getMaskedContact(userEmail)})]})]}),phoneNumber&&/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setMethod('sms'),className:\"flex items-center p-3 border rounded-lg transition-colors \".concat(method==='sms'?'border-blue-500 bg-blue-50 text-blue-700':'border-gray-300 hover:border-gray-400'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl mr-2\",children:\"\\uD83D\\uDCF1\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-left\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:\"SMS\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:getMaskedContact(phoneNumber)})]})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setMethod('authenticator'),className:\"flex items-center p-3 border rounded-lg transition-colors \".concat(method==='authenticator'?'border-blue-500 bg-blue-50 text-blue-700':'border-gray-300 hover:border-gray-400'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl mr-2\",children:\"\\uD83D\\uDCF2\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-left\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:\"Authenticator\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:\"Google/Authy\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"text-sm font-medium text-gray-700\",children:[\"Verification Code\",method==='authenticator'?' (from your authenticator app)':\" (sent to your \".concat(method,\")\")]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center space-x-2\",onPaste:handlePaste,children:verificationCode.map((digit,index)=>/*#__PURE__*/_jsx(\"input\",{ref:el=>inputRefs.current[index]=el,type:\"text\",value:digit,onChange:e=>handleInputChange(index,e.target.value),onKeyDown:e=>handleKeyDown(index,e),className:\"w-12 h-12 text-center text-lg font-bold border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:ring-2 focus:ring-blue-200\",maxLength:1,disabled:isVerifying},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center space-y-2\",children:[timeRemaining>0?/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"Code expires in \",/*#__PURE__*/_jsx(\"span\",{className:\"font-mono font-medium\",children:formatTime(timeRemaining)})]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-red-600\",children:\"Code has expired\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleResend,disabled:!canResend||isVerifying,className:\"text-sm \".concat(canResend&&!isVerifying?'text-blue-600 hover:text-blue-800 cursor-pointer':'text-gray-400 cursor-not-allowed'),children:!canResend?\"Resend code in \".concat(formatTime(timeRemaining)):'Resend verification code'})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleVerify,disabled:verificationCode.some(digit=>digit==='')||isVerifying,className:\"w-full py-3 px-4 rounded-lg font-medium text-white \".concat(verificationCode.some(digit=>digit==='')||isVerifying?'bg-gray-400 cursor-not-allowed':'bg-blue-600 hover:bg-blue-700'),children:isVerifying?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"}),\"Verifying...\"]}):'Verify Code'}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 bg-green-50 border border-green-200 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-green-600 text-lg mr-2\",children:\"\\uD83D\\uDEE1\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-green-700\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"HIPAA Compliant Security:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"mt-1 space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Codes expire automatically for security\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Limited verification attempts prevent brute force\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 All authentication events are logged and audited\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 End-to-end encryption protects your medical data\"})]})]})]})}),attempts>0&&/*#__PURE__*/_jsx(\"div\",{className:\"p-3 bg-yellow-50 border border-yellow-200 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-yellow-600 text-lg mr-2\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-yellow-700\",children:[attempts,\"/\",maxAttempts,\" verification attempts used.\",attempts>=maxAttempts?' Please request a new code.':\" \".concat(maxAttempts-attempts,\" remaining.\")]})]})})]});};export default Enhanced2FA;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","Enhanced2FA","_ref","onSuccess","onError","onResendCode","userEmail","phoneNumber","className","verificationCode","setVerificationCode","isVerifying","setIsVerifying","timeRemaining","setTimeRemaining","canResend","setCanResend","method","setMethod","attempts","setAttempts","maxAttempts","inputRefs","timer","setInterval","prev","clearInterval","every","digit","handleVerify","handleInputChange","index","value","length","newCode","_inputRefs$current","current","focus","handleKeyDown","e","key","_inputRefs$current2","handlePaste","preventDefault","pastedData","clipboardData","getData","replace","slice","i","code","join","Promise","resolve","setTimeout","isValid","Math","random","_inputRefs$current$","concat","error","handleResend","_inputRefs$current$2","formatTime","seconds","mins","floor","secs","toString","padStart","getMaskedContact","contact","name","domain","split","children","onClick","onPaste","map","ref","el","type","onChange","target","onKeyDown","maxLength","disabled","some"],"sources":["D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/src/components/Auth/Enhanced2FA.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\ninterface Enhanced2FAProps {\r\n    onSuccess: () => void;\r\n    onError: (error: string) => void;\r\n    onResendCode: () => void;\r\n    userEmail?: string;\r\n    phoneNumber?: string;\r\n    className?: string;\r\n}\r\n\r\nconst Enhanced2FA: React.FC<Enhanced2FAProps> = ({\r\n    onSuccess,\r\n    onError,\r\n    onResendCode,\r\n    userEmail,\r\n    phoneNumber,\r\n    className = ''\r\n}) => {\r\n    const [verificationCode, setVerificationCode] = useState(['', '', '', '', '', '']);\r\n    const [isVerifying, setIsVerifying] = useState(false);\r\n    const [timeRemaining, setTimeRemaining] = useState(300); // 5 minutes\r\n    const [canResend, setCanResend] = useState(false);\r\n    const [method, setMethod] = useState<'email' | 'sms' | 'authenticator'>('email');\r\n    const [attempts, setAttempts] = useState(0);\r\n    const maxAttempts = 3;\r\n\r\n    const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\r\n\r\n    useEffect(() => {\r\n        // Start countdown timer\r\n        const timer = setInterval(() => {\r\n            setTimeRemaining(prev => {\r\n                if (prev <= 1) {\r\n                    setCanResend(true);\r\n                    return 0;\r\n                }\r\n                return prev - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Auto-submit when all digits are entered\r\n        if (verificationCode.every(digit => digit !== '')) {\r\n            handleVerify();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [verificationCode]);\r\n\r\n    const handleInputChange = (index: number, value: string) => {\r\n        if (value.length > 1) return; // Only allow single digit\r\n\r\n        const newCode = [...verificationCode];\r\n        newCode[index] = value;\r\n        setVerificationCode(newCode);\r\n\r\n        // Auto-focus next input\r\n        if (value !== '' && index < 5) {\r\n            inputRefs.current[index + 1]?.focus();\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = (index: number, e: React.KeyboardEvent) => {\r\n        if (e.key === 'Backspace' && verificationCode[index] === '' && index > 0) {\r\n            inputRefs.current[index - 1]?.focus();\r\n        }\r\n    };\r\n\r\n    const handlePaste = (e: React.ClipboardEvent) => {\r\n        e.preventDefault();\r\n        const pastedData = e.clipboardData.getData('text').replace(/\\D/g, '').slice(0, 6);\r\n        const newCode = [...verificationCode];\r\n\r\n        for (let i = 0; i < pastedData.length && i < 6; i++) {\r\n            newCode[i] = pastedData[i];\r\n        }\r\n\r\n        setVerificationCode(newCode);\r\n    };\r\n\r\n    const handleVerify = async () => {\r\n        const code = verificationCode.join('');\r\n        if (code.length !== 6) {\r\n            onError('Please enter all 6 digits');\r\n            return;\r\n        }\r\n\r\n        setIsVerifying(true);\r\n        setAttempts(prev => prev + 1);\r\n\r\n        try {\r\n            // Simulate verification (in real app, call your API)\r\n            await new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n            // Simulate verification logic\r\n            const isValid = code === '123456' || Math.random() > 0.3; // Demo: accept 123456 or 70% success rate\r\n\r\n            if (isValid) {\r\n                onSuccess();\r\n            } else {\r\n                if (attempts >= maxAttempts - 1) {\r\n                    onError(`Maximum verification attempts exceeded. Please request a new code.`);\r\n                    setVerificationCode(['', '', '', '', '', '']);\r\n                    setAttempts(0);\r\n                } else {\r\n                    onError(`Invalid verification code. ${maxAttempts - attempts - 1} attempts remaining.`);\r\n                    setVerificationCode(['', '', '', '', '', '']);\r\n                    inputRefs.current[0]?.focus();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            onError('Verification failed. Please try again.');\r\n        } finally {\r\n            setIsVerifying(false);\r\n        }\r\n    };\r\n\r\n    const handleResend = () => {\r\n        if (!canResend) return;\r\n\r\n        setTimeRemaining(300);\r\n        setCanResend(false);\r\n        setAttempts(0);\r\n        setVerificationCode(['', '', '', '', '', '']);\r\n        onResendCode();\r\n        inputRefs.current[0]?.focus();\r\n    };\r\n\r\n    const formatTime = (seconds: number): string => {\r\n        const mins = Math.floor(seconds / 60);\r\n        const secs = seconds % 60;\r\n        return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    const getMaskedContact = (contact: string): string => {\r\n        if (method === 'email') {\r\n            const [name, domain] = contact.split('@');\r\n            return `${name.slice(0, 2)}***@${domain}`;\r\n        } else {\r\n            return `***-***-${contact.slice(-4)}`;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`space-y-6 p-6 bg-white rounded-lg shadow ${className}`}>\r\n            {/* Header */}\r\n            <div className=\"text-center\">\r\n                <div className=\"text-4xl mb-2\">🔐</div>\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">Two-Factor Authentication</h2>\r\n                <p className=\"text-gray-600 mt-2\">\r\n                    Enter the 6-digit verification code to secure your healthcare account\r\n                </p>\r\n            </div>\r\n\r\n            {/* Method Selection */}\r\n            <div className=\"space-y-3\">\r\n                <label className=\"text-sm font-medium text-gray-700\">Verification Method</label>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                    {userEmail && (\r\n                        <button\r\n                            onClick={() => setMethod('email')}\r\n                            className={`flex items-center p-3 border rounded-lg transition-colors ${method === 'email'\r\n                                    ? 'border-blue-500 bg-blue-50 text-blue-700'\r\n                                    : 'border-gray-300 hover:border-gray-400'\r\n                                }`}\r\n                        >\r\n                            <span className=\"text-xl mr-2\">📧</span>\r\n                            <div className=\"text-left\">\r\n                                <div className=\"font-medium\">Email</div>\r\n                                <div className=\"text-xs text-gray-500\">{getMaskedContact(userEmail)}</div>\r\n                            </div>\r\n                        </button>\r\n                    )}\r\n\r\n                    {phoneNumber && (\r\n                        <button\r\n                            onClick={() => setMethod('sms')}\r\n                            className={`flex items-center p-3 border rounded-lg transition-colors ${method === 'sms'\r\n                                    ? 'border-blue-500 bg-blue-50 text-blue-700'\r\n                                    : 'border-gray-300 hover:border-gray-400'\r\n                                }`}\r\n                        >\r\n                            <span className=\"text-xl mr-2\">📱</span>\r\n                            <div className=\"text-left\">\r\n                                <div className=\"font-medium\">SMS</div>\r\n                                <div className=\"text-xs text-gray-500\">{getMaskedContact(phoneNumber)}</div>\r\n                            </div>\r\n                        </button>\r\n                    )}\r\n\r\n                    <button\r\n                        onClick={() => setMethod('authenticator')}\r\n                        className={`flex items-center p-3 border rounded-lg transition-colors ${method === 'authenticator'\r\n                                ? 'border-blue-500 bg-blue-50 text-blue-700'\r\n                                : 'border-gray-300 hover:border-gray-400'\r\n                            }`}\r\n                    >\r\n                        <span className=\"text-xl mr-2\">📲</span>\r\n                        <div className=\"text-left\">\r\n                            <div className=\"font-medium\">Authenticator</div>\r\n                            <div className=\"text-xs text-gray-500\">Google/Authy</div>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Code Input */}\r\n            <div className=\"space-y-4\">\r\n                <label className=\"text-sm font-medium text-gray-700\">\r\n                    Verification Code\r\n                    {method === 'authenticator' ? ' (from your authenticator app)' : ` (sent to your ${method})`}\r\n                </label>\r\n\r\n                <div className=\"flex justify-center space-x-2\" onPaste={handlePaste}>\r\n                    {verificationCode.map((digit, index) => (\r\n                        <input\r\n                            key={index}\r\n                            ref={el => inputRefs.current[index] = el}\r\n                            type=\"text\"\r\n                            value={digit}\r\n                            onChange={e => handleInputChange(index, e.target.value)}\r\n                            onKeyDown={e => handleKeyDown(index, e)}\r\n                            className=\"w-12 h-12 text-center text-lg font-bold border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:ring-2 focus:ring-blue-200\"\r\n                            maxLength={1}\r\n                            disabled={isVerifying}\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Timer and Resend */}\r\n                <div className=\"text-center space-y-2\">\r\n                    {timeRemaining > 0 ? (\r\n                        <p className=\"text-sm text-gray-600\">\r\n                            Code expires in <span className=\"font-mono font-medium\">{formatTime(timeRemaining)}</span>\r\n                        </p>\r\n                    ) : (\r\n                        <p className=\"text-sm text-red-600\">Code has expired</p>\r\n                    )}\r\n\r\n                    <button\r\n                        onClick={handleResend}\r\n                        disabled={!canResend || isVerifying}\r\n                        className={`text-sm ${canResend && !isVerifying\r\n                                ? 'text-blue-600 hover:text-blue-800 cursor-pointer'\r\n                                : 'text-gray-400 cursor-not-allowed'\r\n                            }`}\r\n                    >\r\n                        {!canResend ? `Resend code in ${formatTime(timeRemaining)}` : 'Resend verification code'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Verify Button */}\r\n            <button\r\n                onClick={handleVerify}\r\n                disabled={verificationCode.some(digit => digit === '') || isVerifying}\r\n                className={`w-full py-3 px-4 rounded-lg font-medium text-white ${verificationCode.some(digit => digit === '') || isVerifying\r\n                        ? 'bg-gray-400 cursor-not-allowed'\r\n                        : 'bg-blue-600 hover:bg-blue-700'\r\n                    }`}\r\n            >\r\n                {isVerifying ? (\r\n                    <div className=\"flex items-center justify-center\">\r\n                        <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\r\n                        Verifying...\r\n                    </div>\r\n                ) : (\r\n                    'Verify Code'\r\n                )}\r\n            </button>\r\n\r\n            {/* Security Info */}\r\n            <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n                <div className=\"flex items-start\">\r\n                    <div className=\"text-green-600 text-lg mr-2\">🛡️</div>\r\n                    <div className=\"text-sm text-green-700\">\r\n                        <strong>HIPAA Compliant Security:</strong>\r\n                        <ul className=\"mt-1 space-y-1\">\r\n                            <li>• Codes expire automatically for security</li>\r\n                            <li>• Limited verification attempts prevent brute force</li>\r\n                            <li>• All authentication events are logged and audited</li>\r\n                            <li>• End-to-end encryption protects your medical data</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Attempts Warning */}\r\n            {attempts > 0 && (\r\n                <div className=\"p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                    <div className=\"flex items-center\">\r\n                        <div className=\"text-yellow-600 text-lg mr-2\">⚠️</div>\r\n                        <div className=\"text-sm text-yellow-700\">\r\n                            {attempts}/{maxAttempts} verification attempts used.\r\n                            {attempts >= maxAttempts ? ' Please request a new code.' : ` ${maxAttempts - attempts} remaining.`}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Enhanced2FA;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}