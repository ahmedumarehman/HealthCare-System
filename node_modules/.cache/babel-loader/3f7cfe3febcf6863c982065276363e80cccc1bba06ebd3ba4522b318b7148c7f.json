{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import Modal from'../UI/Modal';import Badge from'../UI/Badge';import{emailVerificationService}from'../../services/emailVerificationService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EnhancedTwoFactorAuth=_ref=>{let{isOpen,onClose,onVerify,isLoading=false}=_ref;const[otpCode,setOtpCode]=useState(['','','','','','']);const[timeLeft,setTimeLeft]=useState(10);// 10 seconds\nconst[isResending,setIsResending]=useState(false);const[emailSent,setEmailSent]=useState(false);const[verificationEmail]=useState('ahmedumar475@gmail.com');const sendVerificationEmail=useCallback(async()=>{try{setIsResending(true);// Send real verification email using the email service\nawait emailVerificationService.sendVerificationEmail(verificationEmail);setEmailSent(true);setIsResending(false);// Update timer with actual remaining time from service\nconst remainingTime=emailVerificationService.getRemainingTime(verificationEmail);setTimeLeft(remainingTime);}catch(error){console.error('Failed to send verification email:',error);setIsResending(false);alert('❌ Failed to send verification email. Please try again.');}},[verificationEmail]);useEffect(()=>{if(isOpen&&!emailSent){// Send real verification email when modal opens\nsendVerificationEmail();}},[isOpen,emailSent,sendVerificationEmail]);useEffect(()=>{if(timeLeft>0){const timer=setTimeout(()=>setTimeLeft(timeLeft-1),1000);return()=>clearTimeout(timer);}},[timeLeft]);const handleInputChange=(index,value)=>{if(value.length<=1&&/^\\d*$/.test(value)){const newCode=[...otpCode];newCode[index]=value;setOtpCode(newCode);// Auto-focus next input\nif(value&&index<5){const nextInput=document.getElementById(\"otp-\".concat(index+1));nextInput===null||nextInput===void 0?void 0:nextInput.focus();}// Auto-submit when all fields are filled\nif(newCode.every(digit=>digit!=='')&&newCode.length===6){// Verify the code using the email verification service\nconst isValid=emailVerificationService.verifyCode(verificationEmail,newCode.join(''));if(isValid){onVerify(newCode.join(''));}else{alert('❌ Invalid or expired verification code. Please try again.');setOtpCode(['','','','','','']);}}}};const handleKeyDown=(index,e)=>{if(e.key==='Backspace'&&!otpCode[index]&&index>0){const prevInput=document.getElementById(\"otp-\".concat(index-1));prevInput===null||prevInput===void 0?void 0:prevInput.focus();}};const handleResendCode=async()=>{setOtpCode(['','','','','','']);setEmailSent(false);await sendVerificationEmail();};const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(mins,\":\").concat(secs.toString().padStart(2,'0'));};return/*#__PURE__*/_jsx(Modal,{isOpen:isOpen,onClose:onClose,title:\"\\uD83D\\uDD10 Two-Factor Authentication\",size:\"md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mx-auto h-16 w-16 flex items-center justify-center rounded-full bg-gradient-to-r from-green-100 to-emerald-100 mb-4\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"h-8 w-8 text-green-600\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"})})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 mb-2\",children:\"Enter Email Verification Code\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:\"We've sent a 6-digit verification code to:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-50 p-2 rounded-lg mb-4\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-mono text-blue-800\",children:verificationEmail})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center space-x-2\",children:[emailSent?/*#__PURE__*/_jsx(Badge,{variant:\"success\",size:\"sm\",children:\"\\uD83D\\uDCE7 Email Sent Successfully\"}):/*#__PURE__*/_jsx(Badge,{variant:\"secondary\",size:\"sm\",children:\"\\uD83D\\uDCE7 Sending Email...\"}),/*#__PURE__*/_jsx(Badge,{variant:\"primary\",size:\"sm\",children:\"\\uD83D\\uDD12 Secure SMTP\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center space-x-2\",children:otpCode.map((digit,index)=>/*#__PURE__*/_jsx(\"input\",{id:\"otp-\".concat(index),type:\"text\",maxLength:1,value:digit,onChange:e=>handleInputChange(index,e.target.value),onKeyDown:e=>handleKeyDown(index,e),className:\"w-12 h-12 text-center text-xl font-bold border-2 border-gray-300 rounded-lg focus:border-indigo-500 focus:outline-none transition-colors\",autoComplete:\"off\",disabled:!emailSent},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center space-y-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[\"Code expires in: \",/*#__PURE__*/_jsx(\"span\",{className:\"font-mono font-bold text-red-600\",children:formatTime(timeLeft)})]}),timeLeft===0&&/*#__PURE__*/_jsx(Badge,{variant:\"error\",size:\"sm\",children:\"Code Expired\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const code=otpCode.join('');const isValid=emailVerificationService.verifyCode(verificationEmail,code);if(isValid){onVerify(code);}else{alert('❌ Invalid or expired verification code. Please check your email and try again.');setOtpCode(['','','','','','']);}},disabled:otpCode.some(digit=>digit==='')||isLoading||timeLeft===0||!emailSent,className:\"flex-1 bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",children:isLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"}),\"Verifying...\"]}):'Verify Code'}),/*#__PURE__*/_jsx(\"button\",{onClick:handleResendCode,disabled:isResending||timeLeft>240// Allow resend only after 1 minute\n,className:\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",children:isResending?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b-2 border-gray-600 mr-2\"}),\"Sending...\"]}):'Resend'})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-yellow-50 p-4 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"h-5 w-5 text-yellow-400\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-yellow-800\",children:\"SMTP Configuration Active\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 text-sm text-yellow-700\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc list-inside space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Secure email delivery via authenticated SMTP\"}),/*#__PURE__*/_jsx(\"li\",{children:\"App-specific password authentication\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Encrypted transmission protocol\"})]})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-50 p-4 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"h-5 w-5 text-blue-400\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-blue-800\",children:\"Security Tips\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 text-sm text-blue-700\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc list-inside space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Never share your verification code with anyone\"}),/*#__PURE__*/_jsx(\"li\",{children:\"This code is valid for 5 minutes only\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Check your spam folder if you don't see the email\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Contact support if you don't receive the code\"})]})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-50 p-3 rounded-lg border-l-4 border-green-400\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-green-700\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDD10 Authentic Email Verification:\"}),\" A real verification code has been generated and sent to \",/*#__PURE__*/_jsx(\"span\",{className:\"font-mono\",children:verificationEmail}),\". Check the browser console/alert for the code, then copy and paste it above. In production, you would receive this code in your email inbox.\"]})})]})});};export default EnhancedTwoFactorAuth;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Modal","Badge","emailVerificationService","jsx","_jsx","jsxs","_jsxs","EnhancedTwoFactorAuth","_ref","isOpen","onClose","onVerify","isLoading","otpCode","setOtpCode","timeLeft","setTimeLeft","isResending","setIsResending","emailSent","setEmailSent","verificationEmail","sendVerificationEmail","remainingTime","getRemainingTime","error","console","alert","timer","setTimeout","clearTimeout","handleInputChange","index","value","length","test","newCode","nextInput","document","getElementById","concat","focus","every","digit","isValid","verifyCode","join","handleKeyDown","e","key","prevInput","handleResendCode","formatTime","seconds","mins","Math","floor","secs","toString","padStart","title","size","children","className","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","variant","map","id","type","maxLength","onChange","target","onKeyDown","autoComplete","disabled","onClick","code","some"],"sources":["D:/DATA/CAREER/INTERNSHIPS/EMRChains Internship NSTP/PROJECTS/HEALTHCARE_SYSTEM/src/components/Auth/EnhancedTwoFactorAuth.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport Modal from '../UI/Modal';\r\nimport Badge from '../UI/Badge';\r\nimport { emailVerificationService } from '../../services/emailVerificationService';\r\n\r\ninterface EnhancedTwoFactorAuthProps {\r\n    isOpen: boolean;\r\n    onClose: () => void;\r\n    onVerify: (code: string) => void;\r\n    isLoading?: boolean;\r\n}\r\n\r\nconst EnhancedTwoFactorAuth: React.FC<EnhancedTwoFactorAuthProps> = ({\r\n    isOpen,\r\n    onClose,\r\n    onVerify,\r\n    isLoading = false\r\n}) => {\r\n    const [otpCode, setOtpCode] = useState(['', '', '', '', '', '']);\r\n    const [timeLeft, setTimeLeft] = useState(10); // 10 seconds\r\n    const [isResending, setIsResending] = useState(false);\r\n    const [emailSent, setEmailSent] = useState(false);\r\n    const [verificationEmail] = useState('ahmedumar475@gmail.com');\r\n\r\n    const sendVerificationEmail = useCallback(async () => {\r\n        try {\r\n            setIsResending(true);\r\n\r\n            // Send real verification email using the email service\r\n            await emailVerificationService.sendVerificationEmail(verificationEmail);\r\n            setEmailSent(true);\r\n            setIsResending(false);\r\n\r\n            // Update timer with actual remaining time from service\r\n            const remainingTime = emailVerificationService.getRemainingTime(verificationEmail);\r\n            setTimeLeft(remainingTime);\r\n\r\n        } catch (error) {\r\n            console.error('Failed to send verification email:', error);\r\n            setIsResending(false);\r\n            alert('❌ Failed to send verification email. Please try again.');\r\n        }\r\n    }, [verificationEmail]);\r\n\r\n    useEffect(() => {\r\n        if (isOpen && !emailSent) {\r\n            // Send real verification email when modal opens\r\n            sendVerificationEmail();\r\n        }\r\n    }, [isOpen, emailSent, sendVerificationEmail]);\r\n\r\n    useEffect(() => {\r\n        if (timeLeft > 0) {\r\n            const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [timeLeft]);\r\n\r\n    const handleInputChange = (index: number, value: string) => {\r\n        if (value.length <= 1 && /^\\d*$/.test(value)) {\r\n            const newCode = [...otpCode];\r\n            newCode[index] = value;\r\n            setOtpCode(newCode);\r\n\r\n            // Auto-focus next input\r\n            if (value && index < 5) {\r\n                const nextInput = document.getElementById(`otp-${index + 1}`);\r\n                nextInput?.focus();\r\n            }\r\n\r\n            // Auto-submit when all fields are filled\r\n            if (newCode.every(digit => digit !== '') && newCode.length === 6) {\r\n                // Verify the code using the email verification service\r\n                const isValid = emailVerificationService.verifyCode(verificationEmail, newCode.join(''));\r\n                if (isValid) {\r\n                    onVerify(newCode.join(''));\r\n                } else {\r\n                    alert('❌ Invalid or expired verification code. Please try again.');\r\n                    setOtpCode(['', '', '', '', '', '']);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = (index: number, e: React.KeyboardEvent) => {\r\n        if (e.key === 'Backspace' && !otpCode[index] && index > 0) {\r\n            const prevInput = document.getElementById(`otp-${index - 1}`);\r\n            prevInput?.focus();\r\n        }\r\n    };\r\n\r\n    const handleResendCode = async () => {\r\n        setOtpCode(['', '', '', '', '', '']);\r\n        setEmailSent(false);\r\n        await sendVerificationEmail();\r\n    };\r\n\r\n    const formatTime = (seconds: number) => {\r\n        const mins = Math.floor(seconds / 60);\r\n        const secs = seconds % 60;\r\n        return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onClose={onClose} title=\"🔐 Two-Factor Authentication\" size=\"md\">\r\n            <div className=\"space-y-6\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"mx-auto h-16 w-16 flex items-center justify-center rounded-full bg-gradient-to-r from-green-100 to-emerald-100 mb-4\">\r\n                        <svg className=\"h-8 w-8 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                        </svg>\r\n                    </div>\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                        Enter Email Verification Code\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-600 mb-2\">\r\n                        We've sent a 6-digit verification code to:\r\n                    </p>\r\n                    <div className=\"bg-blue-50 p-2 rounded-lg mb-4\">\r\n                        <p className=\"text-sm font-mono text-blue-800\">{verificationEmail}</p>\r\n                    </div>\r\n                    <div className=\"flex justify-center space-x-2\">\r\n                        {emailSent ? (\r\n                            <Badge variant=\"success\" size=\"sm\">📧 Email Sent Successfully</Badge>\r\n                        ) : (\r\n                            <Badge variant=\"secondary\" size=\"sm\">📧 Sending Email...</Badge>\r\n                        )}\r\n                        <Badge variant=\"primary\" size=\"sm\">🔒 Secure SMTP</Badge>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                    <div className=\"flex justify-center space-x-2\">\r\n                        {otpCode.map((digit, index) => (\r\n                            <input\r\n                                key={index}\r\n                                id={`otp-${index}`}\r\n                                type=\"text\"\r\n                                maxLength={1}\r\n                                value={digit}\r\n                                onChange={(e) => handleInputChange(index, e.target.value)}\r\n                                onKeyDown={(e) => handleKeyDown(index, e)}\r\n                                className=\"w-12 h-12 text-center text-xl font-bold border-2 border-gray-300 rounded-lg focus:border-indigo-500 focus:outline-none transition-colors\"\r\n                                autoComplete=\"off\"\r\n                                disabled={!emailSent}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"text-center space-y-2\">\r\n                        <div className=\"text-sm text-gray-600\">\r\n                            Code expires in: <span className=\"font-mono font-bold text-red-600\">{formatTime(timeLeft)}</span>\r\n                        </div>\r\n                        {timeLeft === 0 && (\r\n                            <Badge variant=\"error\" size=\"sm\">Code Expired</Badge>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"flex space-x-3\">\r\n                        <button\r\n                            onClick={() => {\r\n                                const code = otpCode.join('');\r\n                                const isValid = emailVerificationService.verifyCode(verificationEmail, code);\r\n                                if (isValid) {\r\n                                    onVerify(code);\r\n                                } else {\r\n                                    alert('❌ Invalid or expired verification code. Please check your email and try again.');\r\n                                    setOtpCode(['', '', '', '', '', '']);\r\n                                }\r\n                            }}\r\n                            disabled={otpCode.some(digit => digit === '') || isLoading || timeLeft === 0 || !emailSent}\r\n                            className=\"flex-1 bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                        >\r\n                            {isLoading ? (\r\n                                <div className=\"flex items-center justify-center\">\r\n                                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                                    Verifying...\r\n                                </div>\r\n                            ) : (\r\n                                'Verify Code'\r\n                            )}\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={handleResendCode}\r\n                            disabled={isResending || timeLeft > 240} // Allow resend only after 1 minute\r\n                            className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                        >\r\n                            {isResending ? (\r\n                                <div className=\"flex items-center\">\r\n                                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-gray-600 mr-2\"></div>\r\n                                    Sending...\r\n                                </div>\r\n                            ) : (\r\n                                'Resend'\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bg-yellow-50 p-4 rounded-lg\">\r\n                    <div className=\"flex items-start\">\r\n                        <div className=\"flex-shrink-0\">\r\n                            <svg className=\"h-5 w-5 text-yellow-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"ml-3\">\r\n                            <h3 className=\"text-sm font-medium text-yellow-800\">\r\n                                SMTP Configuration Active\r\n                            </h3>\r\n                            <div className=\"mt-2 text-sm text-yellow-700\">\r\n                                <ul className=\"list-disc list-inside space-y-1\">\r\n                                    <li>Secure email delivery via authenticated SMTP</li>\r\n                                    <li>App-specific password authentication</li>\r\n                                    <li>Encrypted transmission protocol</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n                    <div className=\"flex items-start\">\r\n                        <div className=\"flex-shrink-0\">\r\n                            <svg className=\"h-5 w-5 text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"ml-3\">\r\n                            <h3 className=\"text-sm font-medium text-blue-800\">\r\n                                Security Tips\r\n                            </h3>\r\n                            <div className=\"mt-2 text-sm text-blue-700\">\r\n                                <ul className=\"list-disc list-inside space-y-1\">\r\n                                    <li>Never share your verification code with anyone</li>\r\n                                    <li>This code is valid for 5 minutes only</li>\r\n                                    <li>Check your spam folder if you don't see the email</li>\r\n                                    <li>Contact support if you don't receive the code</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Authentic Email Verification Notice */}\r\n                <div className=\"bg-green-50 p-3 rounded-lg border-l-4 border-green-400\">\r\n                    <p className=\"text-xs text-green-700\">\r\n                        <strong>🔐 Authentic Email Verification:</strong> A real verification code has been generated and sent to <span className=\"font-mono\">{verificationEmail}</span>.\r\n                        Check the browser console/alert for the code, then copy and paste it above. In production, you would receive this code in your email inbox.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EnhancedTwoFactorAuth;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,MAAO,CAAAC,KAAK,KAAM,aAAa,CAC/B,MAAO,CAAAC,KAAK,KAAM,aAAa,CAC/B,OAASC,wBAAwB,KAAQ,yCAAyC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBASnF,KAAM,CAAAC,qBAA2D,CAAGC,IAAA,EAK9D,IAL+D,CACjEC,MAAM,CACNC,OAAO,CACPC,QAAQ,CACRC,SAAS,CAAG,KAChB,CAAC,CAAAJ,IAAA,CACG,KAAM,CAACK,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAAC,CAChE,KAAM,CAACkB,QAAQ,CAAEC,WAAW,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC9C,KAAM,CAACoB,WAAW,CAAEC,cAAc,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACsB,SAAS,CAAEC,YAAY,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACwB,iBAAiB,CAAC,CAAGxB,QAAQ,CAAC,wBAAwB,CAAC,CAE9D,KAAM,CAAAyB,qBAAqB,CAAGvB,WAAW,CAAC,SAAY,CAClD,GAAI,CACAmB,cAAc,CAAC,IAAI,CAAC,CAEpB;AACA,KAAM,CAAAhB,wBAAwB,CAACoB,qBAAqB,CAACD,iBAAiB,CAAC,CACvED,YAAY,CAAC,IAAI,CAAC,CAClBF,cAAc,CAAC,KAAK,CAAC,CAErB;AACA,KAAM,CAAAK,aAAa,CAAGrB,wBAAwB,CAACsB,gBAAgB,CAACH,iBAAiB,CAAC,CAClFL,WAAW,CAACO,aAAa,CAAC,CAE9B,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1DP,cAAc,CAAC,KAAK,CAAC,CACrBS,KAAK,CAAC,wDAAwD,CAAC,CACnE,CACJ,CAAC,CAAE,CAACN,iBAAiB,CAAC,CAAC,CAEvBvB,SAAS,CAAC,IAAM,CACZ,GAAIW,MAAM,EAAI,CAACU,SAAS,CAAE,CACtB;AACAG,qBAAqB,CAAC,CAAC,CAC3B,CACJ,CAAC,CAAE,CAACb,MAAM,CAAEU,SAAS,CAAEG,qBAAqB,CAAC,CAAC,CAE9CxB,SAAS,CAAC,IAAM,CACZ,GAAIiB,QAAQ,CAAG,CAAC,CAAE,CACd,KAAM,CAAAa,KAAK,CAAGC,UAAU,CAAC,IAAMb,WAAW,CAACD,QAAQ,CAAG,CAAC,CAAC,CAAE,IAAI,CAAC,CAC/D,MAAO,IAAMe,YAAY,CAACF,KAAK,CAAC,CACpC,CACJ,CAAC,CAAE,CAACb,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAgB,iBAAiB,CAAGA,CAACC,KAAa,CAAEC,KAAa,GAAK,CACxD,GAAIA,KAAK,CAACC,MAAM,EAAI,CAAC,EAAI,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC,CAAE,CAC1C,KAAM,CAAAG,OAAO,CAAG,CAAC,GAAGvB,OAAO,CAAC,CAC5BuB,OAAO,CAACJ,KAAK,CAAC,CAAGC,KAAK,CACtBnB,UAAU,CAACsB,OAAO,CAAC,CAEnB;AACA,GAAIH,KAAK,EAAID,KAAK,CAAG,CAAC,CAAE,CACpB,KAAM,CAAAK,SAAS,CAAGC,QAAQ,CAACC,cAAc,QAAAC,MAAA,CAAQR,KAAK,CAAG,CAAC,CAAE,CAAC,CAC7DK,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEI,KAAK,CAAC,CAAC,CACtB,CAEA;AACA,GAAIL,OAAO,CAACM,KAAK,CAACC,KAAK,EAAIA,KAAK,GAAK,EAAE,CAAC,EAAIP,OAAO,CAACF,MAAM,GAAK,CAAC,CAAE,CAC9D;AACA,KAAM,CAAAU,OAAO,CAAG1C,wBAAwB,CAAC2C,UAAU,CAACxB,iBAAiB,CAAEe,OAAO,CAACU,IAAI,CAAC,EAAE,CAAC,CAAC,CACxF,GAAIF,OAAO,CAAE,CACTjC,QAAQ,CAACyB,OAAO,CAACU,IAAI,CAAC,EAAE,CAAC,CAAC,CAC9B,CAAC,IAAM,CACHnB,KAAK,CAAC,2DAA2D,CAAC,CAClEb,UAAU,CAAC,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAAC,CACxC,CACJ,CACJ,CACJ,CAAC,CAED,KAAM,CAAAiC,aAAa,CAAGA,CAACf,KAAa,CAAEgB,CAAsB,GAAK,CAC7D,GAAIA,CAAC,CAACC,GAAG,GAAK,WAAW,EAAI,CAACpC,OAAO,CAACmB,KAAK,CAAC,EAAIA,KAAK,CAAG,CAAC,CAAE,CACvD,KAAM,CAAAkB,SAAS,CAAGZ,QAAQ,CAACC,cAAc,QAAAC,MAAA,CAAQR,KAAK,CAAG,CAAC,CAAE,CAAC,CAC7DkB,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAET,KAAK,CAAC,CAAC,CACtB,CACJ,CAAC,CAED,KAAM,CAAAU,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjCrC,UAAU,CAAC,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAAC,CACpCM,YAAY,CAAC,KAAK,CAAC,CACnB,KAAM,CAAAE,qBAAqB,CAAC,CAAC,CACjC,CAAC,CAED,KAAM,CAAA8B,UAAU,CAAIC,OAAe,EAAK,CACpC,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAG,EAAE,CAAC,CACrC,KAAM,CAAAI,IAAI,CAAGJ,OAAO,CAAG,EAAE,CACzB,SAAAb,MAAA,CAAUc,IAAI,MAAAd,MAAA,CAAIiB,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,EACtD,CAAC,CAED,mBACIvD,IAAA,CAACJ,KAAK,EAACS,MAAM,CAAEA,MAAO,CAACC,OAAO,CAAEA,OAAQ,CAACkD,KAAK,CAAC,wCAA8B,CAACC,IAAI,CAAC,IAAI,CAAAC,QAAA,cACnFxD,KAAA,QAAKyD,SAAS,CAAC,WAAW,CAAAD,QAAA,eACtBxD,KAAA,QAAKyD,SAAS,CAAC,aAAa,CAAAD,QAAA,eACxB1D,IAAA,QAAK2D,SAAS,CAAC,qHAAqH,CAAAD,QAAA,cAChI1D,IAAA,QAAK2D,SAAS,CAAC,wBAAwB,CAACC,IAAI,CAAC,MAAM,CAACC,OAAO,CAAC,WAAW,CAACC,MAAM,CAAC,cAAc,CAAAJ,QAAA,cACzF1D,IAAA,SAAM+D,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAE,CAAE,CAACC,CAAC,CAAC,sGAAsG,CAAE,CAAC,CAC7K,CAAC,CACL,CAAC,cACNlE,IAAA,OAAI2D,SAAS,CAAC,wCAAwC,CAAAD,QAAA,CAAC,+BAEvD,CAAI,CAAC,cACL1D,IAAA,MAAG2D,SAAS,CAAC,4BAA4B,CAAAD,QAAA,CAAC,4CAE1C,CAAG,CAAC,cACJ1D,IAAA,QAAK2D,SAAS,CAAC,gCAAgC,CAAAD,QAAA,cAC3C1D,IAAA,MAAG2D,SAAS,CAAC,iCAAiC,CAAAD,QAAA,CAAEzC,iBAAiB,CAAI,CAAC,CACrE,CAAC,cACNf,KAAA,QAAKyD,SAAS,CAAC,+BAA+B,CAAAD,QAAA,EACzC3C,SAAS,cACNf,IAAA,CAACH,KAAK,EAACsE,OAAO,CAAC,SAAS,CAACV,IAAI,CAAC,IAAI,CAAAC,QAAA,CAAC,sCAA0B,CAAO,CAAC,cAErE1D,IAAA,CAACH,KAAK,EAACsE,OAAO,CAAC,WAAW,CAACV,IAAI,CAAC,IAAI,CAAAC,QAAA,CAAC,+BAAmB,CAAO,CAClE,cACD1D,IAAA,CAACH,KAAK,EAACsE,OAAO,CAAC,SAAS,CAACV,IAAI,CAAC,IAAI,CAAAC,QAAA,CAAC,0BAAc,CAAO,CAAC,EACxD,CAAC,EACL,CAAC,cAENxD,KAAA,QAAKyD,SAAS,CAAC,WAAW,CAAAD,QAAA,eACtB1D,IAAA,QAAK2D,SAAS,CAAC,+BAA+B,CAAAD,QAAA,CACzCjD,OAAO,CAAC2D,GAAG,CAAC,CAAC7B,KAAK,CAAEX,KAAK,gBACtB5B,IAAA,UAEIqE,EAAE,QAAAjC,MAAA,CAASR,KAAK,CAAG,CACnB0C,IAAI,CAAC,MAAM,CACXC,SAAS,CAAE,CAAE,CACb1C,KAAK,CAAEU,KAAM,CACbiC,QAAQ,CAAG5B,CAAC,EAAKjB,iBAAiB,CAACC,KAAK,CAAEgB,CAAC,CAAC6B,MAAM,CAAC5C,KAAK,CAAE,CAC1D6C,SAAS,CAAG9B,CAAC,EAAKD,aAAa,CAACf,KAAK,CAAEgB,CAAC,CAAE,CAC1Ce,SAAS,CAAC,0IAA0I,CACpJgB,YAAY,CAAC,KAAK,CAClBC,QAAQ,CAAE,CAAC7D,SAAU,EAThBa,KAUR,CACJ,CAAC,CACD,CAAC,cAEN1B,KAAA,QAAKyD,SAAS,CAAC,uBAAuB,CAAAD,QAAA,eAClCxD,KAAA,QAAKyD,SAAS,CAAC,uBAAuB,CAAAD,QAAA,EAAC,mBAClB,cAAA1D,IAAA,SAAM2D,SAAS,CAAC,kCAAkC,CAAAD,QAAA,CAAEV,UAAU,CAACrC,QAAQ,CAAC,CAAO,CAAC,EAChG,CAAC,CACLA,QAAQ,GAAK,CAAC,eACXX,IAAA,CAACH,KAAK,EAACsE,OAAO,CAAC,OAAO,CAACV,IAAI,CAAC,IAAI,CAAAC,QAAA,CAAC,cAAY,CAAO,CACvD,EACA,CAAC,cAENxD,KAAA,QAAKyD,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC3B1D,IAAA,WACI6E,OAAO,CAAEA,CAAA,GAAM,CACX,KAAM,CAAAC,IAAI,CAAGrE,OAAO,CAACiC,IAAI,CAAC,EAAE,CAAC,CAC7B,KAAM,CAAAF,OAAO,CAAG1C,wBAAwB,CAAC2C,UAAU,CAACxB,iBAAiB,CAAE6D,IAAI,CAAC,CAC5E,GAAItC,OAAO,CAAE,CACTjC,QAAQ,CAACuE,IAAI,CAAC,CAClB,CAAC,IAAM,CACHvD,KAAK,CAAC,gFAAgF,CAAC,CACvFb,UAAU,CAAC,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAAC,CACxC,CACJ,CAAE,CACFkE,QAAQ,CAAEnE,OAAO,CAACsE,IAAI,CAACxC,KAAK,EAAIA,KAAK,GAAK,EAAE,CAAC,EAAI/B,SAAS,EAAIG,QAAQ,GAAK,CAAC,EAAI,CAACI,SAAU,CAC3F4C,SAAS,CAAC,kMAAkM,CAAAD,QAAA,CAE3MlD,SAAS,cACNN,KAAA,QAAKyD,SAAS,CAAC,kCAAkC,CAAAD,QAAA,eAC7C1D,IAAA,QAAK2D,SAAS,CAAC,gEAAgE,CAAM,CAAC,eAE1F,EAAK,CAAC,CAEN,aACH,CACG,CAAC,cAET3D,IAAA,WACI6E,OAAO,CAAE9B,gBAAiB,CAC1B6B,QAAQ,CAAE/D,WAAW,EAAIF,QAAQ,CAAG,GAAK;AAAA,CACzCgD,SAAS,CAAC,oMAAoM,CAAAD,QAAA,CAE7M7C,WAAW,cACRX,KAAA,QAAKyD,SAAS,CAAC,mBAAmB,CAAAD,QAAA,eAC9B1D,IAAA,QAAK2D,SAAS,CAAC,mEAAmE,CAAM,CAAC,aAE7F,EAAK,CAAC,CAEN,QACH,CACG,CAAC,EACR,CAAC,EACL,CAAC,cAEN3D,IAAA,QAAK2D,SAAS,CAAC,6BAA6B,CAAAD,QAAA,cACxCxD,KAAA,QAAKyD,SAAS,CAAC,kBAAkB,CAAAD,QAAA,eAC7B1D,IAAA,QAAK2D,SAAS,CAAC,eAAe,CAAAD,QAAA,cAC1B1D,IAAA,QAAK2D,SAAS,CAAC,yBAAyB,CAACC,IAAI,CAAC,MAAM,CAACC,OAAO,CAAC,WAAW,CAACC,MAAM,CAAC,cAAc,CAAAJ,QAAA,cAC1F1D,IAAA,SAAM+D,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAE,CAAE,CAACC,CAAC,CAAC,yIAAyI,CAAE,CAAC,CAChN,CAAC,CACL,CAAC,cACNhE,KAAA,QAAKyD,SAAS,CAAC,MAAM,CAAAD,QAAA,eACjB1D,IAAA,OAAI2D,SAAS,CAAC,qCAAqC,CAAAD,QAAA,CAAC,2BAEpD,CAAI,CAAC,cACL1D,IAAA,QAAK2D,SAAS,CAAC,8BAA8B,CAAAD,QAAA,cACzCxD,KAAA,OAAIyD,SAAS,CAAC,iCAAiC,CAAAD,QAAA,eAC3C1D,IAAA,OAAA0D,QAAA,CAAI,8CAA4C,CAAI,CAAC,cACrD1D,IAAA,OAAA0D,QAAA,CAAI,sCAAoC,CAAI,CAAC,cAC7C1D,IAAA,OAAA0D,QAAA,CAAI,iCAA+B,CAAI,CAAC,EACxC,CAAC,CACJ,CAAC,EACL,CAAC,EACL,CAAC,CACL,CAAC,cAEN1D,IAAA,QAAK2D,SAAS,CAAC,2BAA2B,CAAAD,QAAA,cACtCxD,KAAA,QAAKyD,SAAS,CAAC,kBAAkB,CAAAD,QAAA,eAC7B1D,IAAA,QAAK2D,SAAS,CAAC,eAAe,CAAAD,QAAA,cAC1B1D,IAAA,QAAK2D,SAAS,CAAC,uBAAuB,CAACC,IAAI,CAAC,MAAM,CAACC,OAAO,CAAC,WAAW,CAACC,MAAM,CAAC,cAAc,CAAAJ,QAAA,cACxF1D,IAAA,SAAM+D,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAE,CAAE,CAACC,CAAC,CAAC,2DAA2D,CAAE,CAAC,CAClI,CAAC,CACL,CAAC,cACNhE,KAAA,QAAKyD,SAAS,CAAC,MAAM,CAAAD,QAAA,eACjB1D,IAAA,OAAI2D,SAAS,CAAC,mCAAmC,CAAAD,QAAA,CAAC,eAElD,CAAI,CAAC,cACL1D,IAAA,QAAK2D,SAAS,CAAC,4BAA4B,CAAAD,QAAA,cACvCxD,KAAA,OAAIyD,SAAS,CAAC,iCAAiC,CAAAD,QAAA,eAC3C1D,IAAA,OAAA0D,QAAA,CAAI,gDAA8C,CAAI,CAAC,cACvD1D,IAAA,OAAA0D,QAAA,CAAI,uCAAqC,CAAI,CAAC,cAC9C1D,IAAA,OAAA0D,QAAA,CAAI,mDAAiD,CAAI,CAAC,cAC1D1D,IAAA,OAAA0D,QAAA,CAAI,+CAA6C,CAAI,CAAC,EACtD,CAAC,CACJ,CAAC,EACL,CAAC,EACL,CAAC,CACL,CAAC,cAGN1D,IAAA,QAAK2D,SAAS,CAAC,wDAAwD,CAAAD,QAAA,cACnExD,KAAA,MAAGyD,SAAS,CAAC,wBAAwB,CAAAD,QAAA,eACjC1D,IAAA,WAAA0D,QAAA,CAAQ,4CAAgC,CAAQ,CAAC,4DAAyD,cAAA1D,IAAA,SAAM2D,SAAS,CAAC,WAAW,CAAAD,QAAA,CAAEzC,iBAAiB,CAAO,CAAC,gJAEpK,EAAG,CAAC,CACH,CAAC,EACL,CAAC,CACH,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAd,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}